Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 #object[propeller.problems.symbolic_regression_11$error_function 0x261ea657 "propeller.problems.symbolic_regression_11$error_function@261ea657"], :isDefault false, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad-prob 0.3, :adjusted-plushy-mutation-prob 0.7}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$multiple_evaluation_function@7a0ef219", :population-size 500}}


Current generation:
0
the best individual for this run is:
{:plushy ([:exec_if 0.22709088162737812] [:float_eq 0.5850034907666029] [:in1 0.7617191138477988] [:float_mult 0.42532270658534055] [close 0.5259576164897688] [:float_mult 0.6817485481927595] [:exec_if 0.8495880162037812] [:exec_if 0.8392071331855467] [:exec_dup 0.290495940170461] [:exec_dup 0.25162361435758307] [:exec_dup 0.7961480274749995] [0.0 0.6091769727991345] [:float_mult 0.4176230628064309] [1.0 0.8705914753491756] [1.0 0.5004745193453147] [0.0 0.2955053403140596] [0.0 0.1722740716697594] [close 0.9820117297861404] [0.0 0.2828714560931156] [0.0 0.8752311856136767] [close 0.6296180550246178] [:float_subtract 0.26835106068270487] [:exec_if 0.3873298435266038] [:float_add 0.8689321568983058] [:float_quot 0.6547738818232548] [:float_mult 0.09828828979525228] [:float_mult 0.09098931929949705] [0.0 0.2751156996027645] [:float_mult 0.8327144904414885] [:float_quot 0.09788959243399298] [:float_eq 0.5173742952912906] [0.0 0.572329740810065] [:float_eq 0.9651505752224242] [close 0.4658184290130889] [:in1 0.2511522915462513] [close 0.042257965577588874] [:exec_dup 0.7990360582578651] [:in1 0.317583931161768] [0.0 0.19688884369974702] [0.0 0.25397964031824105] [:exec_dup 0.5429392618342896] [:float_eq 0.1026204266092321] [:float_add 0.8127500705363871] [:exec_if 0.7302369606645319] [:float_add 0.46287498608344346] [:in1 0.9905299453223161] [0.0 0.8823302231880721] [:in1 0.5909679905994296] [:float_mult 0.4282949237982493] [close 0.06910850228438037] [:float_mult 0.3637582561657621] [0.0 0.3375264970587887] [:exec_dup 0.7017846110159492] [close 0.23681599788004748] [1.0 0.5749643052986844] [:float_add 0.9029243797307352] [:exec_dup 0.5326173980643735] [close 0.8061389386105219]), :behaviors (8.75 7.88 7.0699999999999985 6.3199999999999985 5.629999999999997 4.999999999999997 4.429999999999999 3.919999999999999 3.469999999999999 3.079999999999999 2.75 2.4799999999999995 2.2699999999999996 2.12 2.0299999999999994 2.0 2.0300000000000002 2.12 2.2700000000000005 2.4800000000000004 2.75 3.080000000000001 3.4700000000000006 3.9200000000000004 4.4300000000000015 5.000000000000002 5.630000000000003 6.320000000000004 7.070000000000004 7.880000000000005), :errors (26.578125 19.054336 13.395108999999993 9.206783999999994 6.163860999999988 3.9999999999999956 2.499740999999995 1.490943999999999 0.8379489999999983 0.43545599999999896 0.2031249999999991 0.08089600000000008 0.025028999999999968 0.0048639999999999795 3.010000000003288E-4 0.0 3.009999999994406E-4 0.0048639999999999795 0.025028999999999968 0.08089600000000008 0.2031250000000009 0.43545600000000073 0.8379490000000009 1.4909440000000003 2.499741000000001 4.0000000000000036 6.16386100000001 9.206784000000019 13.395109000000023 19.05433600000004), :min-program-boolean-plushy ([:exec_if false] [:float_eq false] [:in1 false] [:float_mult false] [close false] [:float_mult true] [:exec_if true] [:exec_if true] [:exec_dup true] [:exec_dup false] [:exec_dup true] [0.0 true] [:float_mult false] [1.0 true] [1.0 false] [0.0 false] [0.0 false] [close true] [0.0 false] [0.0 true] [close true] [:float_subtract false] [:exec_if false] [:float_add true] [:float_quot false] [:float_mult false] [:float_mult false] [0.0 false] [:float_mult true] [:float_quot true] [:float_eq false] [0.0 false] [:float_eq true] [close false] [:in1 false] [close false] [:exec_dup true] [:in1 false] [0.0 false] [0.0 false] [:exec_dup true] [:float_eq false] [:float_add true] [:exec_if true] [:float_add false] [:in1 true] [0.0 false] [:in1 true] [:float_mult true] [close false] [:float_mult false] [0.0 true] [:exec_dup true] [close false] [1.0 false] [:float_add true] [:exec_dup false] [close true]), :program (:float_mult :exec_if (:exec_if (:exec_dup (:exec_dup (0.0 1.0) 0.0) :float_add :float_mult :float_quot :float_eq :exec_dup (:exec_dup (:float_add :exec_if (:in1 :in1 :float_mult 0.0 :exec_dup (:float_add)) ()))) ()) ()), :total-error 141.37491500000004}


Current generation:
1
the best individual for this run is:
{:plushy ([0.0 0.8439109185777505] [:exec_dup 0.9197109695659771] [:float_eq 0.9375779119894441] [:float_subtract 0.2588586427440968] [:float_add 0.41463558787661187] [:float_subtract 0] [1.0 0] [1.0 0] [:in1 0] [:in1 0.6896297577051622] [:float_mult 0.2897657921023663] [1.0 0.09530118783854702] [0.0 0] [0.0 0.8996727358663188] [:float_add 0.3610090367022441] [:float_eq 0] [close 0.3223380403329143] [:float_quot 0.679158205488579] [0.0 0.7248598645314892] [1.0 1] [:exec_if 0] [close 0.9042928475933463] [:exec_if 0.24069878306988185] [0.0 0.2573561044380665] [:in1 0] [:float_add 0.3607111331124366] [:float_add 0.0023416029456108656] [1.0 0.5938791350599939] [:float_subtract 0.21492400780040516] [0.0 0.7251352826737922] [:exec_dup 1] [:float_mult 0] [:exec_dup 0.19553312139339102] [close 0] [1.0 0.6715476644611387] [:float_mult 0.9219386049673735] [:in1 0.13784809255425595] [:float_subtract 0] [:exec_if 0.6884779174862452] [:float_add 0] [:float_mult 0.16914496886730818] [1.0 1] [:float_eq 0.3476078619666882] [:float_eq 0] [:exec_dup 0.9961500903654708] [:float_mult 0.9099222340808004] [:float_mult 0.1474269158807522] [:exec_if 0.5418414164899481] [:float_eq 0.4755554343929124] [:float_add 0.3005061232360869] [1.0 0.2940536365613846] [close 1] [:float_add 0.07982356871111829] [0.0 0.31653356721711806] [:exec_if 0.1711550020488613] [close 0.7020752694881542] [1.0 0.15960566729282444] [:float_subtract 0.047091396224674786] [:float_subtract 0.5455882783963721] [:exec_dup 1] [0.0 0.09946096307674074] [:float_subtract 1] [:exec_dup 0] [close 0.9066083551535418] [:float_add 0.9530755736092449] [:in1 1] [:float_add 0] [:float_eq 0.31457972824874053] [:exec_if 0.6170550760636679] [:float_mult 1] [:float_add 1] [0.0 1] [:in1 0] [:exec_if 0.18088259490332614] [0.0 0.02554484990590697] [:float_quot 0.006111304045338772] [:float_add 1] [:float_add 1] [:float_eq 0.1809550389429258] [1.0 0.32776850408659924] [:float_quot 0.3122859916734992] [close 1] [:exec_if 0] [:exec_dup 1] [:exec_dup 0.09872098234809562] [:exec_dup 0.030288872255149563]), :behaviors (31.09375 21.860671999999994 15.199717999999992 10.485567999999988 7.217221999999992 4.999999999999995 3.528981999999996 2.5738879999999975 1.9653979999999986 1.5829119999999992 1.3437499999999996 1.1937919999999997 1.0995579999999998 1.041728 1.010102 1.0 1.010102 1.041728 1.099558 1.1937920000000002 1.3437500000000004 1.5829120000000008 1.9653980000000009 2.573888000000001 3.528982000000002 5.000000000000004 7.217222000000008 10.485568000000015 15.199718000000026 21.860672000000047), :errors (4.234375 5.073664000000004 5.265390999999999 5.041216000000004 4.576638999999994 3.9999999999999982 3.4007589999999976 2.8370560000000005 2.3425509999999985 1.932543999999999 1.6093749999999996 1.3671039999999999 1.1954709999999997 1.083136 1.0201989999999996 1.0 1.0201989999999996 1.083136 1.1954710000000004 1.3671040000000003 1.6093750000000004 1.932544000000001 2.3425510000000007 2.8370559999999996 3.4007590000000008 4.000000000000001 4.576639000000005 5.0412160000000075 5.265391000000001 5.073663999999997), :min-program-boolean-plushy ([0.0 true] [:exec_dup true] [:float_eq true] [:float_subtract false] [:float_add false] [:float_subtract false] [1.0 false] [1.0 false] [:in1 false] [:in1 false] [:float_mult true] [1.0 false] [0.0 false] [0.0 true] [:float_add false] [:float_eq false] [close true] [:float_quot false] [0.0 false] [1.0 true] [:exec_if false] [close true] [:exec_if false] [0.0 false] [:in1 false] [:float_add true] [:float_add false] [1.0 true] [:float_subtract false] [0.0 false] [:exec_dup true] [:float_mult false] [:exec_dup false] [close false] [1.0 true] [:float_mult true] [:in1 false] [:float_subtract false] [:exec_if true] [:float_add false] [:float_mult true] [1.0 true] [:float_eq false] [:float_eq false] [:exec_dup true] [:float_mult true] [:float_mult false] [:exec_if true] [:float_eq false] [:float_add true] [1.0 true] [close true] [:float_add true] [0.0 false] [:exec_if false] [close true] [1.0 false] [:float_subtract false] [:float_subtract false] [:exec_dup true] [0.0 false] [:float_subtract true] [:exec_dup false] [close false] [:float_add true] [:in1 true] [:float_add false] [:float_eq false] [:exec_if true] [:float_mult true] [:float_add true] [0.0 true] [:in1 false] [:exec_if false] [0.0 false] [:float_quot false] [:float_add true] [:float_add true] [:float_eq false] [1.0 false] [:float_quot false] [close true] [:exec_if false] [:exec_dup true] [:exec_dup true] [:exec_dup false]), :program (0.0 :exec_dup (:float_eq :float_mult 0.0) 1.0 :float_add 1.0 :exec_dup (1.0 :float_mult :exec_if (:float_mult 1.0 :exec_dup (:float_mult :exec_if (:float_add 1.0) (:float_add) :exec_dup (:float_subtract :float_add :in1 :exec_if (:float_mult :float_add 0.0 :float_add :float_add) (:exec_dup (:exec_dup ()))))) ())), :total-error 86.724585}


Current generation:
2
the best individual for this run is:
{:plushy ([:exec_if 0] [:float_eq 0.26918385590082494] [:in1 1] [:float_mult 0.5162420643938563] [close 0.8254289976459102] [:float_mult 0.4928663342989243] [:exec_if 0.8915583337424797] [:exec_if 1] [:exec_dup 0.756811801991218] [:exec_dup 0.16779384610671155] [:exec_dup 1] [0.0 0.522039579954243] [:float_mult 0] [1.0 1] [1.0 0.10540688732546633] [0.0 0.0671717154491645] [0.0 0] [close 1] [0.0 0] [0.0 1] [close 1] [:float_subtract 0] [:exec_if 0.3175103926801424] [:float_add 1] [:float_quot 0.9151558765806549] [:float_mult 0] [:float_mult 0] [0.0 0] [:float_mult 1] [:float_quot 0.4857960560899504] [:float_eq 0] [0.0 0] [:float_eq 1] [close 0.19089520454215408] [:in1 0] [close 0.3673358928416878] [:exec_dup 0.9664312661855006] [:in1 0.21177695141448222] [0.0 0] [0.0 0.030033041355872703] [:exec_dup 0.7098691072505667] [:float_eq 0] [:float_add 1] [:exec_if 0.8315232255716887] [:float_add 0.16666232068427134] [:in1 1] [0.0 0.3372387266445221] [:in1 0.4795053847387157] [:float_mult 1] [close 0] [:float_mult 0.8994378575035702] [0.0 0.12502392948479663] [:exec_dup 1] [close 0.30384206402775954] [1.0 0.8670295761649331] [:float_add 1] [:exec_dup 0.3308156002335753] [close 1]), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999989 8.999999999999993 6.929740999999995 5.410943999999997 4.307948999999997 3.5154559999999986 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.560896000000001 2.953125000000001 3.5154560000000012 4.307949000000002 5.410944000000002 6.9297410000000035 9.000000000000005 11.79386100000001 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 3.552713678800501E-15 0.0 8.881784197001252E-16 8.881784197001252E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 1.7763568394002505E-15 8.881784197001252E-16 0.0 1.7763568394002505E-15 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :min-program-boolean-plushy ([:exec_if false] [:float_eq false] [:in1 true] [:float_mult false] [close true] [:float_mult false] [:exec_if true] [:exec_if true] [:exec_dup true] [:exec_dup false] [:exec_dup true] [0.0 true] [:float_mult false] [1.0 true] [1.0 true] [0.0 false] [0.0 false] [close true] [0.0 false] [0.0 true] [close true] [:float_subtract false] [:exec_if false] [:float_add true] [:float_quot true] [:float_mult false] [:float_mult false] [0.0 false] [:float_mult true] [:float_quot false] [:float_eq false] [0.0 false] [:float_eq true] [close true] [:in1 false] [close false] [:exec_dup true] [:in1 false] [0.0 false] [0.0 false] [:exec_dup true] [:float_eq false] [:float_add true] [:exec_if true] [:float_add false] [:in1 true] [0.0 false] [:in1 true] [:float_mult true] [close false] [:float_mult true] [0.0 false] [:exec_dup true] [close false] [1.0 true] [:float_add true] [:exec_dup false] [close true]), :program (:in1 :exec_if (:exec_if (:exec_dup (:exec_dup (0.0 1.0 1.0) 0.0) :float_add :float_quot :float_mult :float_eq) (:exec_dup (:exec_dup (:float_add :exec_if (:in1 :in1 :float_mult :float_mult :exec_dup (1.0 :float_add)) ())))) ()), :total-error 3.241851231905457E-14}

Completed run

The best individual according to the genetic program is:
{:plushy ([:exec_if 0] [:float_eq 0.26918385590082494] [:in1 1] [:float_mult 0.5162420643938563] [close 0.8254289976459102] [:float_mult 0.4928663342989243] [:exec_if 0.8915583337424797] [:exec_if 1] [:exec_dup 0.756811801991218] [:exec_dup 0.16779384610671155] [:exec_dup 1] [0.0 0.522039579954243] [:float_mult 0] [1.0 1] [1.0 0.10540688732546633] [0.0 0.0671717154491645] [0.0 0] [close 1] [0.0 0] [0.0 1] [close 1] [:float_subtract 0] [:exec_if 0.3175103926801424] [:float_add 1] [:float_quot 0.9151558765806549] [:float_mult 0] [:float_mult 0] [0.0 0] [:float_mult 1] [:float_quot 0.4857960560899504] [:float_eq 0] [0.0 0] [:float_eq 1] [close 0.19089520454215408] [:in1 0] [close 0.3673358928416878] [:exec_dup 0.9664312661855006] [:in1 0.21177695141448222] [0.0 0] [0.0 0.030033041355872703] [:exec_dup 0.7098691072505667] [:float_eq 0] [:float_add 1] [:exec_if 0.8315232255716887] [:float_add 0.16666232068427134] [:in1 1] [0.0 0.3372387266445221] [:in1 0.4795053847387157] [:float_mult 1] [close 0] [:float_mult 0.8994378575035702] [0.0 0.12502392948479663] [:exec_dup 1] [close 0.30384206402775954] [1.0 0.8670295761649331] [:float_add 1] [:exec_dup 0.3308156002335753] [close 1]), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999989 8.999999999999993 6.929740999999995 5.410943999999997 4.307948999999997 3.5154559999999986 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.560896000000001 2.953125000000001 3.5154560000000012 4.307949000000002 5.410944000000002 6.9297410000000035 9.000000000000005 11.79386100000001 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 3.552713678800501E-15 0.0 8.881784197001252E-16 8.881784197001252E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 1.7763568394002505E-15 8.881784197001252E-16 0.0 1.7763568394002505E-15 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :min-program-boolean-plushy ([:exec_if false] [:float_eq false] [:in1 true] [:float_mult false] [close true] [:float_mult false] [:exec_if true] [:exec_if true] [:exec_dup true] [:exec_dup false] [:exec_dup true] [0.0 true] [:float_mult false] [1.0 true] [1.0 true] [0.0 false] [0.0 false] [close true] [0.0 false] [0.0 true] [close true] [:float_subtract false] [:exec_if false] [:float_add true] [:float_quot true] [:float_mult false] [:float_mult false] [0.0 false] [:float_mult true] [:float_quot false] [:float_eq false] [0.0 false] [:float_eq true] [close true] [:in1 false] [close false] [:exec_dup true] [:in1 false] [0.0 false] [0.0 false] [:exec_dup true] [:float_eq false] [:float_add true] [:exec_if true] [:float_add false] [:in1 true] [0.0 false] [:in1 true] [:float_mult true] [close false] [:float_mult true] [0.0 false] [:exec_dup true] [close false] [1.0 true] [:float_add true] [:exec_dup false] [close true]), :program (:in1 :exec_if (:exec_if (:exec_dup (:exec_dup (0.0 1.0 1.0) 0.0) :float_add :float_quot :float_mult :float_eq) (:exec_dup (:exec_dup (:float_add :exec_if (:in1 :in1 :float_mult :float_mult :exec_dup (1.0 :float_add)) ())))) ()), :total-error 3.241851231905457E-14}

{:total-test-error 8.393286066166183E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 2}
{:list_of_successful_generations [2]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 2.0}
{:list_of_successful_generations [2]}

