Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$error_function@7a0ef219", :population-size 2500}}


Current generation:
0
the best individual for this run is:
{:plushy (:float_add :exec_if :exec_dup :in1 :in1 :in1 :float_add 0.0 :exec_if :exec_if :in1 :exec_dup :float_add close :float_mult close :float_add :float_add :exec_if :float_subtract close :float_mult :exec_dup :float_quot), :behaviors (13.5 11.759999999999998 10.139999999999997 8.639999999999997 7.259999999999995 5.9999999999999964 4.859999999999997 3.839999999999997 2.9399999999999977 2.1599999999999984 1.4999999999999987 0.959999999999999 0.5399999999999994 0.23999999999999955 0.059999999999999776 0.0 0.06000000000000024 0.2400000000000005 0.5400000000000007 0.9600000000000011 1.5000000000000013 2.1600000000000015 2.9400000000000013 3.840000000000001 4.860000000000001 6.0000000000000036 7.260000000000003 8.640000000000006 10.140000000000008 11.76000000000001), :errors (21.828125 15.174336 10.325108999999994 6.886783999999995 4.53386099999999 2.9999999999999964 2.069740999999997 1.5709440000000008 1.3679489999999994 1.3554559999999998 1.4531250000000004 1.6008960000000005 1.7550290000000002 1.8848640000000005 1.9703009999999999 2.0 1.9703009999999994 1.8848639999999997 1.7550289999999997 1.6008959999999994 1.4531249999999996 1.3554560000000002 1.3679490000000003 1.5709439999999995 2.0697410000000014 3.0000000000000018 4.533861000000009 6.8867840000000164 10.325109000000019 15.174336000000034), :total-error 133.72491500000007}


Current generation:
1
the best individual for this run is:
{:plushy (:float_add 0.0 1.0 :float_mult :float_subtract :float_quot close :float_quot :float_quot :float_subtract :exec_if :float_quot :exec_dup 1.0 :exec_if :float_subtract close :exec_if close :float_eq :float_subtract close 0.0 :float_subtract :float_quot close :in1 :float_eq 1.0 0.0 1.0 :exec_if :float_eq 1.0 close :exec_dup :in1 1.0 :exec_dup :float_mult :exec_if :exec_dup :float_mult :float_quot :exec_if :float_eq :float_eq :float_subtract :float_quot close :float_subtract :float_quot :exec_dup :in1 :float_add :float_subtract :float_quot :float_quot :exec_dup close close close :float_add close), :behaviors (18.0 15.68 13.519999999999996 11.519999999999992 9.679999999999994 7.999999999999996 6.479999999999995 5.1199999999999966 3.919999999999997 2.8799999999999977 1.9999999999999987 1.279999999999999 0.7199999999999992 0.3199999999999994 0.0799999999999997 0.0 0.08000000000000032 0.3200000000000007 0.720000000000001 1.2800000000000018 2.0000000000000013 2.880000000000002 3.920000000000002 5.120000000000001 6.480000000000003 8.000000000000004 9.680000000000005 11.520000000000008 13.52000000000001 15.680000000000012), :errors (17.328125 11.254335999999999 6.945108999999995 4.006784 2.113860999999991 0.9999999999999973 0.4497409999999986 0.2909440000000014 0.3879490000000003 0.6354560000000005 0.9531250000000004 1.2808960000000007 1.5750290000000002 1.8048640000000007 1.950301 2.0 1.9503009999999994 1.8048639999999994 1.5750289999999993 1.2808959999999987 0.9531249999999996 0.6354559999999996 0.38794899999999943 0.29094399999999965 0.4497409999999995 1.0000000000000018 2.113861000000007 4.006784000000014 6.945109000000016 11.254336000000032), :total-error 88.62491500000004}


Current generation:
2
the best individual for this run is:
{:plushy (1.0 :float_add :float_mult 1.0 close 0.0 :float_quot :exec_dup :exec_dup :float_eq :exec_dup :float_subtract :float_mult :exec_dup :float_quot :exec_dup :in1 :float_mult :in1 :float_mult :exec_dup :float_add :exec_if :float_mult :float_quot :float_quot :float_subtract :float_mult :float_quot 1.0), :behaviors (35.875 24.127999999999997 18.660499999999992 12.174399999999993 9.27639999999999 5.999999999999995 4.588299999999996 3.508799999999998 2.4601999999999986 1.979199999999999 1.6249999999999993 1.3711999999999998 1.1961999999999997 1.0831999999999997 1.0202 1.0 1.0202 1.0832000000000002 1.1962000000000002 1.3712000000000004 1.6250000000000007 1.979200000000001 2.460200000000001 3.5088000000000013 4.588300000000002 7.0000000000000036 9.276400000000008 12.174400000000013 18.660500000000024 24.128000000000032), :errors (0.546875 2.8063360000000017 1.8046089999999992 3.352383999999999 2.5174609999999955 2.9999999999999982 2.341440999999998 1.9021439999999998 1.8477489999999985 1.5362559999999992 1.3281249999999998 1.1896959999999999 1.0988289999999998 1.0416640000000004 1.0101009999999997 1.0 1.0101009999999997 1.041664 1.0988290000000003 1.189696 1.3281250000000002 1.5362560000000007 1.8477490000000008 1.9021439999999994 2.3414410000000005 2.0000000000000018 2.5174610000000044 3.3523840000000096 1.8046090000000028 2.8063360000000124), :total-error 54.100465000000014}


Current generation:
3
the best individual for this run is:
{:plushy (0.0 1.0 :float_add :float_eq :exec_if :exec_dup 0.0 :exec_dup :float_eq :exec_dup :exec_dup :float_subtract :float_mult :float_add :exec_dup :float_quot :exec_dup :in1 :in1 :float_mult :exec_dup :float_add :float_mult :float_quot :float_quot :float_subtract :float_mult :exec_dup close :float_quot :exec_if 1.0 :exec_dup), :behaviors (36.5625 26.521600000000003 20.686099999999996 15.713599999999996 11.514099999999994 7.9999999999999964 6.896099999999997 5.969599999999998 3.710099999999998 3.2095999999999982 2.8124999999999996 2.5056 2.2780999999999993 2.1216 2.0301 2.0 2.0301 2.1216 2.2781 2.5056000000000003 2.8125000000000004 3.209600000000002 3.7101000000000006 5.969600000000001 6.896100000000002 10.000000000000002 11.514100000000006 15.713600000000014 20.686100000000014 26.521600000000017), :errors (1.234375 0.41273599999999533 0.22099100000000504 0.18681600000000387 0.2797609999999917 0.9999999999999964 0.0336409999999967 0.558656 0.5978489999999992 0.3058559999999999 0.14062499999999956 0.05529599999999979 0.016929000000000194 0.0032640000000001557 2.0099999999967366E-4 0.0 2.0099999999967366E-4 0.0032640000000001557 0.016929000000000638 0.055296000000000234 0.14062500000000044 0.3058559999999999 0.597849000000001 0.558656 0.033641000000000254 0.9999999999999964 0.2797610000000059 0.18681599999999143 0.22099099999998728 0.4127360000000273), :total-error 8.859616999999998}


Current generation:
4
the best individual for this run is:
{:plushy (0.0 1.0 :float_add close :float_eq :exec_if 0.0 :exec_dup :float_eq :exec_dup :exec_dup :float_subtract :exec_dup :float_quot close :exec_dup :in1 :in1 :float_mult :exec_dup :float_add :float_mult :float_quot :float_quot :float_subtract :float_mult :float_eq :exec_dup close :float_subtract :float_quot :exec_if 1.0 :exec_dup), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.52678399999999 11.793860999999987 8.999999999999993 6.929740999999994 5.410943999999997 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.0303009999999997 2.124864 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000017 4.307949000000002 5.4109440000000015 6.9297410000000035 9.000000000000005 11.79386100000001 15.52678400000002 20.465109000000027 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 1.7763568394002505E-15 1.7763568394002505E-15 0.0 0.0 8.881784197001252E-16 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 8.881784197001252E-16 8.881784197001252E-16 0.0 1.7763568394002505E-15 1.7763568394002505E-15 0.0 3.552713678800501E-15), :total-error 1.7319479184152442E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (0.0 1.0 :float_add close :float_eq :exec_if 0.0 :exec_dup :float_eq :exec_dup :exec_dup :float_subtract :exec_dup :float_quot close :exec_dup :in1 :in1 :float_mult :exec_dup :float_add :float_mult :float_quot :float_quot :float_subtract :float_mult :float_eq :exec_dup close :float_subtract :float_quot :exec_if 1.0 :exec_dup), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.52678399999999 11.793860999999987 8.999999999999993 6.929740999999994 5.410943999999997 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.0303009999999997 2.124864 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000017 4.307949000000002 5.4109440000000015 6.9297410000000035 9.000000000000005 11.79386100000001 15.52678400000002 20.465109000000027 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 1.7763568394002505E-15 1.7763568394002505E-15 0.0 0.0 8.881784197001252E-16 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 8.881784197001252E-16 8.881784197001252E-16 0.0 1.7763568394002505E-15 1.7763568394002505E-15 0.0 3.552713678800501E-15), :total-error 1.7319479184152442E-14}

{:total-test-error 4.618527782440651E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 4}
{:list_of_successful_generations [4]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 4.0}
{:list_of_successful_generations [4]}

