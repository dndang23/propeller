Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:integer_eq 0.09299940527902731] [:exec_dup 0.04985152668431256] [:in1 0.2509852184989906] [close 0.9075004444023554] [:integer_mult 0.3972508415635807] [:exec_if 0.7703468161367097] [:integer_mult 0.5697707334298667] [:integer_subtract 0.059300953243722976] [1 0.3808749203683438] [close 0.04212524468499124] [:in1 0.1866457449397434] [close 0.6398092940493896] [close 0.1656718166340735] [:integer_mult 0.5654117686358172] [1 0.25961903740457637] [:integer_quot 0.35964867323057914] [:integer_add 0.7625330038364004] [:integer_mult 0.7673251813499898] [:integer_mult 0.25953421162479046] [:integer_subtract 0.2680172782614505] [:exec_dup 0.07073703589617895] [0 0.029570147241079012] [:in1 0.9842749806073164] [:integer_quot 0.7228670336598523] [:integer_add 0.021748375885268012] [:integer_subtract 0.4149258485481746] [close 0.41489853913397556] [1 0.26394729424521957] [:integer_subtract 0.9360528833130219] [0 0.6838088465060591] [:integer_subtract 0.07915326781827586] [:integer_quot 0.33930255525609476] [0 0.527491644995538] [:integer_mult 0.21167451457847342] [:exec_if 0.7217448986040769] [:integer_add 0.6793073176196925] [:in1 0.4019836572211004] [:in1 0.31719379043942963] [:exec_if 0.5537096657287106] [:integer_quot 0.4034967544973733] [:integer_quot 0.8812237635097196] [1 0.26473236448756376] [:in1 1.0181909439653802] [:exec_dup 0.7739593382696889] [:in1 0.8880852728478555] [:integer_mult 0.8755799829443291] [:exec_if 0.28611291873556555] [1 0.7760526570016043] [:integer_add 0.6222122819789343] [:integer_add 0.7805274948440563] [:exec_if 0.8239004254249566] [close 0.25228152061990705] [:in1 0.5172063824074615] [close 0.09453510178312936] [:integer_add 0.6184211527564568] [:exec_dup 0.6105307327768982] [:exec_dup 0.0883609974989833] [:integer_add 0.6678310742489986] [:integer_add 0.3491467847683217]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 34}
{:list_of_successful_generations [34]}

Beginning run number 2

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([1 0.4837012212968669] [:integer_quot 0.2510905397962918] [:integer_eq 0.6089791498330207] [:integer_add 0.08147843314534986] [:integer_add 0.957714236691616] [:integer_eq 0.4066524339244324] [:integer_subtract 0.3305556866193597] [1 0.9638756645643872] [:integer_quot 0.6748456709502015] [0 0.5723282554901185] [0 0.05538381465465489] [:integer_add 0.6767499591184898] [:integer_mult 0.3238493475836737] [:integer_subtract 0.6217326103863544] [:in1 0.5848488557856231] [:integer_eq 0.8909922195395387] [1 0.8511578702371019] [:integer_mult 0.9041869360315039] [0 0.9202877024787736] [:in1 0.64880898047273] [:integer_quot 1.006879124878878] [:exec_if 0.2243398424785339] [0 0.14130706169281293] [0 0.057631302155980856] [close 0.10443287332714161] [1 0.35821196772829783] [:in1 0.5074684250198355] [:integer_add 0.041418320217208704] [:exec_dup 0.4429041407780273] [:integer_eq 0.5519383167745082] [:integer_mult 0.3601516568124854] [:integer_eq 0.3729387164060701] [:integer_subtract 0.028469820425514606] [close 0.07107610614376403] [:in1 0.4513992159004461] [:in1 0.16158050988335307] [1 0.6151831929186468] [:exec_dup 0.6018994714265474] [:integer_subtract 0.1587626097364525] [1 0.6772185666180961] [close 0.727463374566496] [:exec_dup 0.8541486489559731] [1 0.8528724107886355] [:exec_if 0.0033250035941958522] [:integer_add 0.014808919973550194] [1 0.3081169747191902] [:in1 0.6703943116953774] [close 0.841771621464367] [close 0.07643294171193275] [:exec_dup 0.8876626154109994] [:in1 0.38972204964735124] [:exec_dup 0.11136433080722016] [:integer_mult 0.3242389625976938] [:in1 0.8780262127474722] [:integer_mult 0.33502666393915104] [close 0.7720186956551552] [:integer_mult 0.4167179990470212] [:integer_add 0.42866925149840124] [:exec_dup 0.8784170365978713] [close 0.4966600700574292] [:exec_dup 0.6568391232766719] [:integer_add 0.8836551021629508] [1 0.828532956446428] [:integer_mult 0.8628788058638456]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 2}
{:num_tries 2}
{:total_num_generations 92}
{:list_of_successful_generations [34 58]}

Beginning run number 3

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:in1 0.9726472940819207] [close 0.26459854071225564] [:integer_eq 0.8197640303113983] [:integer_mult 0.7248872855507136] [:integer_add 0.284172669519543] [:in1 0.8716063536238621] [1 0.10330961498735285] [:in1 0.8575510700874532] [close 0.32927500872288995] [:integer_eq 0.09288474426801052] [:integer_mult 0.6199739604072373] [:integer_mult 0.8789519602706136] [1 0.7310880968734094] [:exec_dup 0.23601438313465806] [0 0.5539322091978018] [:integer_mult 0.03925213123552798] [1 0.8029610004580843] [:exec_if 0.7192038775799032] [0 0.1082047292555981] [close 0.7143445092647356] [:exec_if 0.39825762189663083] [:in1 0.4365693038252215] [:integer_add 0.5057348288119253] [:integer_subtract 0.8190302597406108] [0 0.1953360221496725] [:integer_add 0.8337103369138955] [:integer_add 0.8829440814447362] [close 0.28034481266462286] [:integer_add 0.6701574094435825]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 3}
{:num_tries 3}
{:total_num_generations 113}
{:list_of_successful_generations [34 58 21]}

Beginning run number 4

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([close 0.5157579655800968] [:in1 0.9794997510812525] [close 0.29548749550550935] [1 0.3866176560667558] [:integer_add 0.08409726645271931] [:integer_eq 0.10647713090840061] [:in1 0.12201027817917365] [:integer_eq 0.4068258770839121] [0 0.4384684987615036] [:exec_if 0.2108878342867485] [:integer_add 0.9062205483907171] [:exec_if 0.06866658318919316] [:in1 0.8456725743298455] [:exec_if 0.7185981465782733] [:exec_if 0.3497143715954309] [:in1 0.570913264602226] [:integer_quot 0.06664195705275389] [:in1 0.9701642111588631] [:in1 0.0015428787136688715] [:exec_dup 0.15230894829764285] [:integer_mult 0.8940040842621724] [:integer_mult 0.7351259345073741] [:integer_mult 0.05149211016993416] [:exec_dup 0.5067566262276935] [:integer_quot 0.4219470591736755] [0 0.9812879464101775] [:exec_dup 0.7933146450544919] [:integer_subtract 1.002551296171256] [:in1 0.44944727580060906] [:integer_subtract 0.545024121257962] [close 0.5702730418941517] [:integer_mult 0.5300164729220541] [:integer_mult 0.8425859404019377] [:integer_mult 0.6575574880373773] [:exec_dup 0.023958400047380424] [:integer_eq 0.19548501211898547] [:exec_if 0.5129830193149211] [:integer_subtract 0.7253713144285945] [:in1 0.04519299554656353] [:integer_quot 0.8974346866450461] [:integer_mult 0.79704908317102] [:in1 0.0893716871080964] [:integer_eq 0.11140948467143245] [:integer_subtract 0.7516022553667385] [:integer_mult 0.3442319592824218] [:integer_quot 0.3295671458857178] [0 0.6914149186128342] [:integer_subtract 0.8821733030985173] [1 0.35891104159737997] [:integer_mult 0.5888060148064665] [:exec_if 0.6142538721756642] [:integer_add 0.018481249523031845] [:integer_add 0.0884573718484149] [:integer_mult 0.5373892671982313] [:integer_mult 0.1608956752041969] [close 0.9973783277058951] [:in1 0.8868700069839666] [:integer_add 0.9530870600842327] [:integer_add 0.5750063085448339] [:integer_quot 0.5757497653964649] [:integer_add 0.11522606125144648] [:integer_quot 0.889618178496203] [1 0.4635567111317259] [:integer_add 0.5161519864058203] [:exec_if 0.5114305069490831] [close 0.8406058172467183] [1 0.8113394670902859] [0 0.2100175261092685] [:integer_add 0.3077192223536067] [0 0.5437046643986306] [:integer_add 0.7674509921982576] [close 0.8680919721216751] [:integer_add 0.6706025321855343] [:integer_add 0.8885444480169712]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 4}
{:num_tries 4}
{:total_num_generations 152}
{:list_of_successful_generations [34 58 21 39]}

Beginning run number 5

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:in1 0.8421331616490727] [:integer_eq 0.3400915727013346] [:integer_subtract 0.6049163797770715] [:integer_subtract 0.5510818678855146] [:in1 0.7511688608503426] [:integer_eq 0.07283234937378935] [:exec_if 0.8472575499784424] [:in1 0.419061992954182] [:exec_dup 0.08654573935610191] [:exec_dup 0.357780985254197] [:integer_mult 0.8144113275216441] [close 0.15893446602194328] [:integer_quot 0.4533789749676809] [:exec_if 0.5632610637221566] [:integer_eq 0.2889134328172693] [:exec_if 0.4869764039421282] [:integer_eq 0.7958159132047096] [:integer_subtract 0.461588377039606] [1 0.170062014727504] [:integer_mult 0.05972402045346413] [close 0.11063141984997726] [:integer_subtract 0.1581218303144175] [:integer_add 0.9583937289196431] [:integer_mult 0.8939677703243012] [close 0.012473462079111486] [:in1 0.8121903539498347] [:integer_mult 0.6417883954930357] [:integer_mult 0.27773639567052766] [:integer_add 0.27768070061708383] [1 0.729521968608666] [close 0.06775382691467768] [0 0.5199778172194435] [:exec_if 0.0753321208733222] [1 0.18384244289431584] [close 0.2555199663117188] [:exec_if 0.4858158228040779] [:integer_add 0.9341744465776225] [:exec_if 0.07716989186032099] [:integer_eq 0.11857902257601008] [:exec_dup 0.10505171322467832] [1 0.6485061064173774] [:integer_add 0.7078990849656104] [:integer_add 0.9354737268274246]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 5}
{:num_tries 5}
{:total_num_generations 249}
{:list_of_successful_generations [34 58 21 39 97]}

Beginning run number 6

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:integer_eq 0.8795171529331259] [:integer_mult 0.20360890392579134] [:exec_dup 0.4313895422332944] [:integer_mult 0.18653023762583287] [1 0.8893180585755052] [:integer_add 0.08075158424093354] [1 0.9896289432136406] [:integer_eq 0.22167130182132355] [:exec_if 0.602580469168782] [:integer_eq 0.8134374027540957] [close 0.9004790515283319] [:integer_subtract 0.038484116449514216] [:integer_eq 0.6575714136364512] [:integer_quot 0.004785580930213973] [:integer_eq 0.6145156305371927] [1 0.12488587662986395] [1 0.5125290497906679] [:exec_dup 0.019254677932696196] [close 0.8354591071395205] [1 0.13500414017460982] [1 0.9730919137570089] [close 0.7607663597674061] [:integer_eq 0.4648827726753405] [1 0.46789403557428966] [:exec_if 0.9949744674831899] [:integer_mult 0.7505848773721131] [:exec_if 0.520646058502974] [1 0.9795779574910044] [:exec_if 0.984821577325136] [1 0.81584983374242] [:integer_add 0.5044510559091324] [:exec_dup 0.18658445675618995] [:in1 0.25236431912864477] [:in1 0.17858279968021018] [:integer_eq 0.06163956163461837] [close 0.35058258020796107] [1 0.307257371334249] [:exec_if 0.5408062221239546] [:exec_if 0.4565978487956801] [:exec_dup 0.1821886575678413] [:integer_add 0.560368278700597] [0 0.8811761753849497] [:exec_if 0.7624725785004596] [:exec_dup 0.1376503571246216] [:integer_mult 0.7617457692901446] [:integer_add 0.3106003357250534] [:exec_dup 0.537585735955916] [:integer_mult 0.9371060154897181] [:integer_mult 0.0762150343570347] [:integer_eq 0.443562571159684] [:integer_eq 0.3510381056248981] [0 0.6238505450456594] [:integer_quot 0.9492114558154752] [:integer_quot 0.7410426545883128] [:exec_dup 0.22750558232442275] [:integer_eq 0.1656378246115382] [:exec_if 0.6461980131016407] [1 0.9370249969959529] [0 0.14078107710795873] [1 0.2678289180631731] [:integer_quot 0.893988728787679] [:integer_quot 0.991488408248461] [1 0.4083888052166975] [:exec_dup 0.7419295584541309] [1 0.3065334295584258] [1 0.06364878331668078] [:integer_subtract 0.5439132699774112] [:integer_add 0.43387389384032915] [:integer_mult 0.31603639758135593] [:integer_add 0.5852420405787007] [:integer_add 0.925700133538809] [:in1 0.30504911760952136] [close 0.7385133983909098] [:in1 0.42796370313325627] [:exec_dup 0.30942783925560335] [:integer_mult 0.9103382559441507] [:in1 0.7692119723076779] [1 0.3686708256835308] [:exec_dup 0.8886913159937382] [:integer_mult 0.8910114776960001] [:integer_subtract 0.1803439578929108] [:integer_mult 0.48659792865341056] [close 0.2706446814883069] [1 0.5496201948440902] [1 0.0181934499642612] [:integer_add 0.6555080080241935] [0 0.15439477630506915] [:exec_dup 0.28952132015928256] [:integer_add 0.7409252097710759]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 6}
{:num_tries 6}
{:total_num_generations 252}
{:list_of_successful_generations [34 58 21 39 97 3]}

Beginning run number 7

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:in1 0.9472515648902492] [:exec_dup 0.8752646493360855] [close 0.9601864725024205] [:integer_eq 0.10954259257589949] [:exec_dup 0.8173041668823425] [:integer_eq 0.30252069841460205] [:in1 0.5398602080122166] [:integer_mult 0.5218566705163334] [:integer_subtract 0.49502051032331407] [:integer_mult 0.8973483679780386] [close 0.6811613187243666] [1 0.6110699239727236] [1 0.4744647041860638] [:integer_mult 0.170084750069632] [:exec_dup 0.14055419405161862] [:in1 0.5015561048312035] [:exec_if 0.9705718654466611] [:in1 0.2386873246674338] [:exec_if 0.8068085317939537] [:integer_add 0.464936530576273] [:integer_quot 0.21651219261289123] [1 0.706699217928706] [0 0.9832190308332656] [0 0.9723585308171282] [:integer_subtract 0.0650911952715657] [:exec_dup 0.023930126532848206] [:integer_mult 0.6240307177312914] [:integer_add 0.3274524900754917] [close 0.2790909038606702] [:exec_dup 0.5466927143269031] [:exec_if 0.1500814592821747] [:integer_mult 0.5836347413918742] [:integer_add 0.4613412324588412] [:exec_dup 0.7746845064531773] [:integer_add 0.45212603396182693] [:integer_quot 0.47143884195233043] [1 0.6772454542677444] [:integer_add 0.3454449454557611] [:integer_quot 0.28656678200384555] [:integer_eq 0.8282897257232842]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 7}
{:num_tries 7}
{:total_num_generations 276}
{:list_of_successful_generations [34 58 21 39 97 3 24]}

Beginning run number 8

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:in1 0.8137923855635406] [:integer_eq 0.9614895069265968] [:in1 0.1061410370275625] [:integer_mult 0.8017040487521923] [:in1 0.9645685719324977] [:integer_add 0.12117909538044949] [:in1 0.9507873010343816] [1 0.12797343701684838] [:integer_mult 0.794756550738835] [1 0.04083150216232972] [:in1 0.9632715851589279] [:exec_if 0.9336022206598736] [1 0.17485714919356155] [:integer_mult 0.963066393423982] [:exec_if 0.25536872007207634] [:exec_if 0.7778425315770148] [:integer_mult 0.9732272474309616] [:exec_dup 0.4900344891478371] [:integer_add 0.8945074694251994] [close 0.8240373279265043] [:integer_mult 0.8796356201029863] [:integer_subtract 0.054872825068569164] [1 0.8169785296267209] [:integer_add 0.5172856130404616] [1 0.477204048027287] [:integer_subtract 0.7592510104134774] [:integer_mult 0.10367625986448925] [:exec_dup 0.9242501626525401] [:integer_add 0.7793959344738264] [1 0.2694157473241846] [:integer_add 0.7656874714800855] [:integer_subtract 0.8124616434811877] [:integer_quot 0.8689168026954537]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 8}
{:num_tries 8}
{:total_num_generations 291}
{:list_of_successful_generations [34 58 21 39 97 3 24 15]}

Beginning run number 9

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([1 0.244177708704397] [:in1 0.8493829739005067] [close 0.33330984845042155] [:exec_dup 0.9746680637709392] [:integer_quot 0.01949735669830489] [:integer_add 0.7291395881086234] [:in1 0.8922853335284907] [:integer_mult 0.9337428726423908] [:integer_mult 0.7805770670141279] [:integer_quot 0.5678319908676474] [close 0.6586225882871871] [1 0.34432637614846495] [close 0.8422696484156761] [:exec_dup 0.6088937290379365] [:exec_if 0.43341280856291653] [1 0.8993721378995687] [close 0.937290899254176] [:exec_dup 0.40226692102759043] [:integer_add 0.8154503097679926] [:integer_add 0.6397930199836275] [:integer_quot 0.7380620274320051] [close 0.8161164087279944] [:exec_if 0.15165475202201217]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 9}
{:num_tries 9}
{:total_num_generations 476}
{:list_of_successful_generations [34 58 21 39 97 3 24 15 185]}

Beginning run number 10

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:exec_dup 0.947954636711606] [:in1 0.36615040724297165] [close 0.9485072349496373] [1 0.30388476686694754] [:integer_eq 0.46133741133475925] [close 0.05430482891562646] [:exec_dup 0.3253541135605566] [:in1 0.5068917743289034] [0 0.5960931313054229] [close 0.9788904754567603] [:integer_eq 0.10281613873780503] [1 0.31277790066031735] [:integer_eq 0.395792095525894] [:integer_eq 0.4921631790607216] [:integer_eq 0.0732013254119136] [:integer_add 0.6493413875150114] [close 0.85316500881045] [:integer_mult 0.4390012506477058] [:exec_dup 0.33656470607789735] [:integer_subtract 0.07051193425141156] [:integer_add 0.5998352473646551] [:integer_quot 0.6714423863712011] [:integer_add 0.2977743737098888] [:integer_subtract 0.29896365422286075] [:in1 0.2931622740492996] [:integer_mult 0.7184281317515814] [:in1 0.8939762243222689] [:exec_dup 0.08866151000843636] [:integer_mult 0.2798268580118656] [:integer_mult 0.6670894653325723] [:integer_add 0.5104514083516412] [:integer_mult 0.16586592449812676] [:in1 0.4860475077250145] [close 0.38482330506029305] [:in1 0.8146672792722686] [:integer_mult 0.8897792233103752] [:integer_quot 0.7296194405282954] [:integer_mult 0.9634674525073506] [close 0.2856194893243356] [1 0.40158959645085474] [:integer_mult 0.9664541878997827] [:integer_mult 0.14202087052693568] [:integer_mult 0.7415783498773855] [:exec_dup 0.21026505848308163] [:integer_subtract 0.7407673998056413] [:integer_add 0.1276041146173682] [:integer_mult 0.5108780818901708] [:integer_add 0.8900878442277607] [:integer_mult 0.7902410315910757] [:integer_eq 0.529216978628075] [:integer_subtract 0.4355790567620238] [close 0.08769339743898641] [1 0.5798545921715461] [:exec_dup 0.003941232769297809] [:exec_dup 0.38173937807647285] [close 0.7800235770362447] [:in1 0.024561358428199464] [:exec_if 0.8967813810516307] [1 0.9426311424537499] [:exec_if 0.7364683891489298] [1 0.5327292079464414] [:integer_subtract 0.1296650242340941] [:exec_if 0.19992786141501007] [:integer_add 0.4943097997419369] [:in1 0.06303468037496004] [:exec_dup 0.9423194017920836] [close 0.2852831402691868] [:integer_subtract 0.15502472330841832] [:integer_add 0.8704882393532385] [:integer_eq 0.23466254446167034] [:integer_add 0.4712170841412332] [:integer_quot 0.900708475293026] [close 0.11180367987799268]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 10}
{:num_tries 10}
{:total_num_generations 523}
{:list_of_successful_generations [34 58 21 39 97 3 24 15 185 47]}

Beginning run number 11

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([:exec_if 0.8262378292561069] [:integer_subtract 0.2549221598166195] [:in1 0.6929481388606592] [:integer_eq 0.6795545966900701] [:in1 0.03826072032465826] [close 0.5273828387109291] [:integer_eq 0.7568383065961136] [:in1 0.3797179565258999] [1 0.597656836444379] [:integer_add 0.8818929728699562] [close 0.962262564162195] [1 0.8377163144052858] [0 0.6035806386190334] [1 0.45904735627692583] [:integer_add 0.29535741224167533] [:exec_if 0.34474158080181905] [:exec_if 0.15746870991907969] [:in1 0.50030459073258] [:integer_eq 0.2360169635131649] [:exec_dup 0.6963453883181792] [:in1 0.6539034656330278] [close 0.4679145551725707] [:exec_dup 0.3401781025374422] [close 0.35939866079734195] [close 0.20640712537671987] [:in1 0.7235912008257519] [:in1 0.6821223997797985] [:exec_dup 0.8894628796793589] [:exec_dup 0.19607184925031929] [:integer_mult 0.8355920769891315] [:integer_mult 0.7940139900731661] [:integer_add 0.957051629911022] [:exec_dup 0.9269318491672126] [:integer_add 0.7561534011982686]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 11}
{:num_tries 11}
{:total_num_generations 539}
{:list_of_successful_generations [34 58 21 39 97 3 24 15 185 47 16]}

Beginning run number 12

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-10], :output1 [-1007]} {:input1 [-9], :output1 [-735]} {:input1 [-8], :output1 [-517]} {:input1 [-7], :output1 [-347]} {:input1 [-6], :output1 [-219]} {:input1 [-5], :output1 [-127]} {:input1 [-4], :output1 [-65]} {:input1 [-3], :output1 [-27]} {:input1 [-2], :output1 [-7]} {:input1 [-1], :output1 [1]} {:input1 [0], :output1 [3]} {:input1 [1], :output1 [5]} {:input1 [2], :output1 [13]} {:input1 [3], :output1 [33]} {:input1 [4], :output1 [71]} {:input1 [5], :output1 [133]} {:input1 [6], :output1 [225]} {:input1 [7], :output1 [353]} {:input1 [8], :output1 [523]} {:input1 [9], :output1 [741]} {:input1 [10], :output1 [1013]}), :instructions "(:in1 :integer_add :integer_subtract :integer_mult :integer_quot :integer_eq :exec_dup :exec_if close 0 1)", :elitism false, :variation {:umad-prob 0.5, :mutation-prob 0.5}, :max-generations 500, :parent-selection :lexicase, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-20], :output1 [-8017]} {:input1 [-19], :output1 [-6875]} {:input1 [-18], :output1 [-5847]} {:input1 [-17], :output1 [-4927]} {:input1 [-16], :output1 [-4109]} {:input1 [-15], :output1 [-3387]} {:input1 [-14], :output1 [-2755]} {:input1 [-13], :output1 [-2207]} {:input1 [-12], :output1 [-1737]} {:input1 [-11], :output1 [-1339]} {:input1 [11], :output1 [1345]} {:input1 [12], :output1 [1743]} {:input1 [13], :output1 [2213]} {:input1 [14], :output1 [2761]} {:input1 [15], :output1 [3393]} {:input1 [16], :output1 [4115]} {:input1 [17], :output1 [4933]} {:input1 [18], :output1 [5853]} {:input1 [19], :output1 [6881]} {:input1 [20], :output1 [8023]}), :step-limit 200, :error-function "propeller.problems.simple_regression$error_function@7aac8884", :population-size 500}}

Completed run

The best individual according to the genetic program is:
{:plushy ([close 0.037891913648426756] [:in1 0.49839247021805166] [:integer_quot 0.7055229715396821] [:exec_dup 0.822703413922156] [:exec_dup 0.017920137482693166] [:in1 0.250912751739798] [:integer_add 0.937240054376188] [:exec_if 0.41279857111840745] [:exec_if 0.8931639801933146] [close 0.963967781198655] [:integer_subtract 0.09516739168514166] [:integer_add 0.3291812004385125] [:integer_mult 0.9188667708551035] [close 0.6453023215253672] [:exec_dup 0.26025384874168545] [:exec_dup 0.27619811070838973] [close 0.1707810533446643] [:in1 0.3043417102259577] [close 0.9604585074422444] [:in1 0.36054632561664923] [:integer_mult 0.39773919545010195] [:integer_eq 0.996210913397015] [close 0.3233263578469826] [:integer_subtract 0.010107351448690127] [:in1 0.6924809036971554] [:integer_mult 0.27362959363708594] [:integer_eq 0.8794557742135991] [:integer_mult 0.9286589250156811] [:integer_quot 0.3847842619446948] [:integer_quot 0.22422555239814768] [:in1 0.5135325976876002] [:in1 0.8272506897555995] [close 0.7578716023762956] [:integer_mult 0.9983421704675791] [:integer_eq 0.33528777517327524] [:in1 0.5961064236103828] [:integer_mult 0.9687090920117702] [:exec_if 0.4444562348285802] [close 0.15374255136398218] [1 0.7648946511129074] [:in1 0.2641816505252724] [:integer_add 0.9619071989534679] [:in1 0.11543425201161028] [1 0.5399968276868274] [1 0.9346108675431253] [close 0.28343585015223527] [:integer_add 0.9513889358125527] [1 0.7760595376177841] [:exec_dup 0.17049974521941724] [:integer_add 0.15461645227704046] [:integer_add 0.7958862474943622] [:integer_add 0.9043288357514062]), :behaviors (-1007 -735 -517 -347 -219 -127 -65 -27 -7 1 3 5 13 33 71 133 225 353 523 741 1013), :errors (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0), :total-error 0}

Statistics based on current number of runs: 
{:num_successes 12}
{:num_tries 12}
{:total_num_generations 570}
{:list_of_successful_generations [34 58 21 39 97 3 24 15 185 47 16 31]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 47.5}
{:list_of_successful_generations [34 58 21 39 97 3 24 15 185 47 16 31]}

