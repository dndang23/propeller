Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$error_function@312afbc7", :population-size 5000}}


Current generation:
0
the best individual for this run is:
{:plushy (1.0 :exec_dup 1.0 :exec_if :float_add 0.0 :float_subtract :exec_if :float_eq :in1 :exec_if :float_mult :exec_dup :exec_dup :float_eq 1.0 :float_mult :in1 :exec_if :float_add :float_quot :exec_if :exec_if :exec_if :exec_if), :behaviors (7.5 6.159999999999998 4.939999999999999 3.839999999999996 2.8599999999999968 1.9999999999999978 1.2599999999999978 0.639999999999998 0.1399999999999988 -0.240000000000001 -0.4999999999999998 -0.6400000000000001 -0.6599999999999999 -0.5599999999999997 -0.33999999999999947 0.0 0.4600000000000011 1.0400000000000014 1.7400000000000018 2.5600000000000023 3.5000000000000018 4.560000000000002 5.740000000000002 7.040000000000001 8.460000000000003 10.000000000000004 11.660000000000004 13.44000000000001 15.340000000000012 17.360000000000014), :errors (27.828125 20.774335999999998 15.525108999999993 11.686783999999996 8.93386099999999 6.999999999999995 5.669740999999996 4.770944 4.167948999999998 3.7554559999999992 3.453124999999999 3.2008959999999997 2.9550289999999997 2.6848639999999997 2.370300999999999 2.0 1.5703009999999986 1.0848639999999987 0.5550289999999987 8.959999999982315E-4 0.5468750000000009 1.0445440000000006 1.4320510000000004 1.6290560000000003 1.530259 0.9999999999999982 0.13386100000000845 2.086784000000012 5.125109000000014 9.57433600000003), :total-error 154.090485}


Current generation:
1
the best individual for this run is:
{:plushy (1.0 :exec_dup 1.0 :exec_if :float_add 0.0 :float_subtract :exec_if :float_eq :in1 :float_mult :exec_if :float_mult :exec_dup :exec_dup :float_eq 1.0 :exec_dup :float_mult :in1 :exec_if :float_add :float_quot :exec_if :exec_if :exec_if), :behaviors (21.0 18.200000000000003 15.599999999999998 13.19999999999999 10.999999999999993 8.999999999999995 7.199999999999994 5.599999999999996 4.199999999999996 2.9999999999999973 1.9999999999999987 1.1999999999999988 0.5999999999999991 0.19999999999999937 0.0 0.0 0.20000000000000057 0.6000000000000011 1.2000000000000013 2.000000000000002 3.0000000000000018 4.200000000000003 5.600000000000002 7.200000000000001 9.000000000000004 11.000000000000004 13.200000000000006 15.600000000000012 18.200000000000014 21.000000000000018), :errors (14.328125 8.734335999999995 4.865108999999993 2.3267840000000017 0.7938609999999926 1.7763568394002505E-15 0.27025900000000025 0.18905599999999811 0.1079490000000014 0.5154560000000008 0.9531250000000004 1.3608960000000008 1.6950290000000003 1.9248640000000008 2.0303009999999997 2.0 1.830300999999999 1.524863999999999 1.0950289999999991 0.5608959999999983 0.04687500000000089 0.6845440000000012 1.2920510000000007 1.7890560000000004 2.070259000000001 1.9999999999999982 1.4061389999999943 0.07321599999998973 2.265109000000013 5.934336000000027), :total-error 64.66782500000002}


Current generation:
2
the best individual for this run is:
{:plushy (:exec_if :exec_if :float_eq :in1 :exec_dup close 0.0 :float_add 1.0 :float_mult 0.0 :float_quot close :float_eq 0.0 0.0 :float_add :exec_if :in1 :float_quot :exec_dup :exec_dup 0.0 close :float_subtract :float_add :exec_if 1.0 :exec_dup 1.0 :float_quot :in1 :exec_dup 0.0 :float_subtract :in1 :in1 0.0 close :float_eq :exec_if :float_add :in1 :float_subtract :in1 close :exec_dup :float_add :float_add :float_add :float_add close close close :exec_if :float_mult :float_add 0.0 :in1 :float_add close :float_mult :float_add :exec_dup :exec_if :exec_dup 1.0 close 0.0 :float_eq :float_quot :float_quot close :float_add :exec_dup :float_subtract :in1 1.0 :in1 1.0 1.0 :float_subtract :float_quot :float_quot :float_mult :float_mult :float_eq :float_quot :exec_dup :float_add 1.0 0.0 :float_quot), :behaviors (35.75 25.519999999999996 18.899999999999995 13.519999999999994 10.469999999999995 5.999999999999997 5.2399999999999975 3.9199999999999986 2.4899999999999993 2.3599999999999994 2.0 2.0 2.0 2.0 2.0 1.0 2.0 2.0 2.09 2.16 2.750000000000001 3.080000000000001 3.960000000000001 5.840000000000002 7.670000000000002 12.000000000000004 15.310000000000008 19.280000000000012 27.35000000000002 35.32000000000003), :errors (0.421875 1.4143360000000023 1.565108999999996 2.006783999999998 1.3238609999999902 2.9999999999999956 1.6897409999999962 1.4909439999999994 1.8179489999999978 1.1554559999999987 0.9531249999999991 0.5608959999999996 0.29502899999999954 0.12486400000000009 0.03030099999999969 1.0 0.03030099999999969 0.12486400000000009 0.20502900000000057 0.40089600000000036 0.203125 0.43545600000000073 0.34794900000000073 0.429056000000001 0.7402589999999991 2.9999999999999982 3.5161389999999955 3.7532159999999894 6.8848909999999925 8.385663999999984), :total-error 47.30711499999992}


Current generation:
3
the best individual for this run is:
{:plushy (:exec_if :float_subtract :exec_if :float_eq :in1 close :float_add 1.0 0.0 :exec_if :float_quot close :float_eq 0.0 :float_add :in1 :float_quot :exec_dup :exec_dup 0.0 :float_add 0.0 close :float_subtract :exec_dup :float_subtract :float_add 1.0 :float_quot :float_quot :exec_dup 0.0 :exec_dup :float_subtract :in1 :in1 0.0 close :float_eq :float_add :in1 :float_subtract :in1 close :exec_dup :float_add :float_add :float_add :float_add close :exec_if close :float_mult close 0.0 :in1 :float_add close :float_mult :float_mult :float_add :float_mult :exec_dup :exec_if :exec_dup 1.0 close 0.0 :float_quot :float_quot close close :float_add :exec_dup :float_subtract :exec_if :in1 1.0 :exec_dup :float_mult 1.0 :float_quot :float_quot :float_mult :float_quot :exec_dup :float_add 0.0 :float_quot), :behaviors (24.0 21.56 17.939999999999998 14.639999999999993 12.759999999999993 9.999999999999995 8.459999999999996 6.239999999999996 5.039999999999997 3.359999999999997 2.4999999999999987 1.359999999999999 0.8399999999999992 0.23999999999999955 0.059999999999999776 1.0 0.06000000000000024 0.44000000000000067 0.8400000000000011 1.760000000000002 2.5000000000000018 3.960000000000002 5.040000000000002 7.040000000000002 8.460000000000003 11.000000000000002 12.760000000000005 15.840000000000009 17.940000000000012 21.560000000000013), :errors (11.328125 5.374336 2.5251089999999934 0.8867839999999987 0.9661390000000072 1.0000000000000018 1.5302590000000018 0.8290559999999978 0.7320510000000002 0.15545600000000093 0.45312500000000044 1.2008960000000006 1.4550290000000003 1.8848640000000005 1.9703009999999999 1.0 1.9703009999999994 1.6848639999999995 1.4550289999999992 0.8008959999999985 0.4531249999999991 0.4445440000000005 0.7320510000000002 1.6290560000000012 1.530259 1.9999999999999964 0.966138999999993 0.3132159999999864 2.5251090000000147 5.3743360000000315), :total-error 55.17045500000002}


Current generation:
4
the best individual for this run is:
{:plushy (:exec_if :exec_dup :exec_dup 1.0 :exec_if :float_add 0.0 :float_subtract :in1 :in1 :float_mult :float_mult close :exec_dup :float_eq 1.0 :float_add :exec_dup :float_mult :float_subtract :float_quot :exec_if :exec_if), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999989 8.999999999999993 6.929740999999995 5.410943999999997 4.307948999999997 3.5154559999999986 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.560896000000001 2.953125000000001 3.5154560000000012 4.307949000000002 5.410944000000002 6.9297410000000035 9.000000000000005 11.79386100000001 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 3.552713678800501E-15 0.0 8.881784197001252E-16 8.881784197001252E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 1.7763568394002505E-15 8.881784197001252E-16 0.0 1.7763568394002505E-15 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :total-error 3.241851231905457E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (:exec_if :exec_dup :exec_dup 1.0 :exec_if :float_add 0.0 :float_subtract :in1 :in1 :float_mult :float_mult close :exec_dup :float_eq 1.0 :float_add :exec_dup :float_mult :float_subtract :float_quot :exec_if :exec_if), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999989 8.999999999999993 6.929740999999995 5.410943999999997 4.307948999999997 3.5154559999999986 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.560896000000001 2.953125000000001 3.5154560000000012 4.307949000000002 5.410944000000002 6.9297410000000035 9.000000000000005 11.79386100000001 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 3.552713678800501E-15 0.0 8.881784197001252E-16 8.881784197001252E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 1.7763568394002505E-15 8.881784197001252E-16 0.0 1.7763568394002505E-15 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :total-error 3.241851231905457E-14}

{:total-test-error 8.393286066166183E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 4}
{:list_of_successful_generations [4]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 4.0}
{:list_of_successful_generations [4]}

