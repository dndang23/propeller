Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 #object[propeller.problems.symbolic_regression_11$error_function 0x261ea657 "propeller.problems.symbolic_regression_11$error_function@261ea657"], :isDefault false, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad-prob 0.05, :adjusted-plushy-mutation-prob 0.95}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$multiple_evaluation_function@7a0ef219", :population-size 500}}


Current generation:
0
the best individual for this run is:
{:plushy ([:in1 0.21092149528469317] [:in1 0.9982980959810716] [:float_mult 0.5260041267887442] [:float_quot 0.6411935193032692] [:float_add 0.9392980987868467] [:float_quot 0.09777360259237888] [:float_subtract 0.8307273591769136] [:float_quot 0.022015453786017103] [:float_add 0.8750403341439258] [:float_eq 0.5144069619066027] [:exec_if 0.4285850922805581] [:float_add 0.09995893564487923] [:exec_if 0.08437601722890042] [close 0.6401451688878655] [:float_add 0.4683822970664375] [:float_eq 0.16777147997686304] [:float_subtract 0.8574486797980584] [close 0.05797269896666968] [:exec_dup 0.3939348623862198] [:in1 0.43737155209141576] [:in1 0.28938146415747235] [:exec_dup 0.13944248712902552] [:float_add 0.4815052409242505] [:exec_if 0.6117224573033853] [close 0.31469578924076547] [:float_add 0.9159890390233368] [1.0 0.3299061315743116] [:exec_dup 0.7040446745518628] [close 0.5982525344767604] [:float_quot 0.8393490275458201] [:exec_if 0.9334911803375427] [:float_mult 0.13033689868808807] [:float_eq 0.03842263864117168] [:float_add 0.5786421478711749] [:float_quot 0.24266455836716028] [0.0 0.1802778441120073] [:float_quot 0.08448294144428414] [:float_mult 0.8776412084908717] [:float_mult 0.9847067558313265] [:float_mult 0.8944324262903983] [:float_mult 0.6102719698193304] [0.0 0.7154870050298524] [:float_subtract 0.9796267984170799] [1.0 0.14228747127482555] [1.0 0.7199299487032533] [:float_mult 0.577580502137146] [:float_add 0.24141583480515405] [:float_eq 0.3059935470504016] [:exec_dup 0.589085943513827] [1.0 0.5506103888428893] [:float_quot 0.8044909164941261] [1.0 0.4287914306305445] [1.0 0.2661440596292156] [:exec_dup 0.20665206364658406] [:float_add 0.45828179432045413] [:float_add 0.98495272055948] [:float_add 0.2733602415842331] [:exec_dup 0.8359994808543166] [:float_quot 0.40982768890857413] [0.0 0.5696663514626706] [:exec_if 0.8561894942608719] [:exec_if 0.5268682067400788] [:exec_if 0.32491510608072904] [:in1 0.7926536279901429] [:in1 0.8319231361908835] [:float_mult 0.8723350028521465] [:exec_dup 0.22270169904681736] [:float_quot 0.48839652233550257] [:float_mult 0.18492418978701253]), :behaviors (55.6875 30.73279999999999 17.13659999999999 10.36799999999999 4.392299999999995 1.9999999999999973 1.312199999999998 0.40959999999999946 0.24009999999999962 0.1295999999999998 0.06249999999999989 0.02559999999999995 0.008099999999999982 0.001599999999999994 9.999999999999925E-5 0.0 1.000000000000008E-4 0.0016000000000000068 0.008100000000000022 0.025600000000000064 0.06250000000000011 0.1296000000000002 0.24010000000000026 0.4096000000000003 1.312200000000001 3.0000000000000027 4.392300000000004 10.368000000000016 17.136600000000026 30.732800000000047), :errors (20.359375 3.798463999999992 3.3285090000000004 5.1587840000000025 7.40156099999999 6.999999999999996 5.617540999999996 5.001343999999999 4.067848999999997 3.385855999999998 2.890624999999999 2.5352959999999998 2.2869289999999998 2.1232640000000003 2.0302009999999995 2.0 2.0302009999999995 2.1232640000000003 2.286929 2.5352960000000007 2.890625000000001 3.3858560000000013 4.067849000000002 5.0013440000000005 5.617541000000002 6.000000000000003 7.401561000000008 5.158784000000006 3.3285090000000004 3.7984640000000027), :min-program-boolean-plushy ([:in1 true] [:in1 true] [:float_mult true] [:float_quot true] [:float_add true] [:float_quot true] [:float_subtract true] [:float_quot false] [:float_add true] [:float_eq false] [:exec_if false] [:float_add false] [:exec_if false] [close true] [:float_add true] [:float_eq false] [:float_subtract true] [close false] [:exec_dup false] [:in1 false] [:in1 false] [:exec_dup false] [:float_add true] [:exec_if true] [close true] [:float_add true] [1.0 false] [:exec_dup true] [close false] [:float_quot false] [:exec_if true] [:float_mult false] [:float_eq false] [:float_add true] [:float_quot false] [0.0 true] [:float_quot false] [:float_mult false] [:float_mult true] [:float_mult true] [:float_mult false] [0.0 false] [:float_subtract true] [1.0 false] [1.0 true] [:float_mult false] [:float_add true] [:float_eq false] [:exec_dup true] [1.0 true] [:float_quot true] [1.0 false] [1.0 true] [:exec_dup false] [:float_add true] [:float_add true] [:float_add false] [:exec_dup true] [:float_quot true] [0.0 false] [:exec_if true] [:exec_if true] [:exec_if false] [:in1 true] [:in1 true] [:float_mult true] [:exec_dup false] [:float_quot false] [:float_mult true]), :program (:in1 :in1 :float_mult :float_quot :float_add :float_quot :float_subtract :float_add :float_add :float_subtract :float_add :exec_if () (:float_add :exec_dup (:exec_if (:float_add 0.0 :float_mult :float_mult :float_subtract 1.0 :float_add :exec_dup (1.0 :float_quot 1.0 :float_add :float_add :exec_dup (:float_quot :exec_if (:exec_if (:in1 :in1 :float_mult :float_mult) ()) ()))) ()))), :total-error 134.61182100000002}


Current generation:
1
the best individual for this run is:
{:plushy ([:float_quot 0.9075498670594759] [:float_subtract 0.473465173498302] [close 0] [:float_subtract 0.4014688043398293] [:float_subtract 0] [:float_quot 0] [1.0 0.9192257703153401] [:float_mult 0.8906289343085436] [0.0 0.12518634263891798] [:exec_dup 0.8904440091701857] [:float_quot 0.3396314896564639] [1.0 0.1763901703887133] [0.0 1] [:float_quot 0.7639446701340113] [:exec_dup 0.3808397901503426] [:exec_dup 0.21362450647735726] [0.0 0.04511499949059644] [1.0 0.26043030040591014] [:exec_if 0.2133127777157831] [:float_eq 0.08538132592317205] [:exec_dup 0.6683457166136022] [:float_mult 0] [:exec_dup 0.8231907800945109] [:in1 0] [:exec_dup 0.4389101253417143] [:float_add 0.9036547308689149] [:float_quot 1] [:float_mult 0.07931554532454599] [1.0 0.35300523405086626] [:float_quot 0.033053315378629045] [:float_eq 0.08247415707046712] [:float_mult 0] [:float_subtract 1] [:float_quot 0.823953529996766] [:in1 1] [:float_mult 1] [close 0] [:float_add 0.031026043557078997] [1.0 0.16167862276299005] [:in1 1] [1.0 0.019827280932484204] [:exec_dup 1] [:in1 0.09339863418037969] [0.0 0.6168112488317229] [:exec_if 0] [0.0 0] [:float_subtract 1] [:exec_if 1] [:exec_if 0.3958737453995121] [close 0] [:float_mult 1] [1.0 1] [:float_add 0.816758271186182] [:float_add 0] [:exec_dup 0.5106807533630515] [:float_add 0.4360678513667055]), :behaviors (39.40625 28.662271999999994 20.74581799999999 14.999167999999989 10.891321999999986 7.999999999999993 5.995081999999995 4.6234879999999965 3.695497999999998 3.072511999999999 2.656249999999999 2.3793919999999993 2.1976579999999997 2.083328 2.020202 2.0 2.0202020000000003 2.0833280000000003 2.1976580000000006 2.3793920000000006 2.656250000000001 3.072512000000001 3.6954980000000015 4.623488000000002 5.995082000000004 8.000000000000007 10.891322000000011 14.999168000000019 20.745818000000032 28.662272000000055), :errors (4.078125 1.7279359999999961 0.2807089999999981 0.5276160000000036 0.9025389999999991 1.0 0.934658999999999 0.7874560000000015 0.6124509999999992 0.44294399999999934 0.296875 0.18150400000000033 0.09737099999999987 0.04153600000000024 0.010098999999999858 0.0 0.010098999999999414 0.041535999999999795 0.09737099999999987 0.1815039999999999 0.296875 0.44294400000000067 0.6124510000000001 0.7874559999999988 0.934658999999999 0.9999999999999982 0.9025390000000009 0.5276160000000036 0.2807090000000052 1.7279360000000104), :min-program-boolean-plushy ([:float_quot true] [:float_subtract false] [close false] [:float_subtract false] [:float_subtract false] [:float_quot false] [1.0 true] [:float_mult true] [0.0 false] [:exec_dup false] [:float_quot false] [1.0 true] [0.0 true] [:float_quot true] [:exec_dup false] [:exec_dup false] [0.0 false] [1.0 true] [:exec_if false] [:float_eq false] [:exec_dup true] [:float_mult false] [:exec_dup true] [:in1 false] [:exec_dup false] [:float_add true] [:float_quot true] [:float_mult false] [1.0 false] [:float_quot false] [:float_eq false] [:float_mult false] [:float_subtract true] [:float_quot true] [:in1 true] [:float_mult true] [close false] [:float_add false] [1.0 false] [:in1 true] [1.0 false] [:exec_dup true] [:in1 false] [0.0 true] [:exec_if false] [0.0 false] [:float_subtract true] [:exec_if true] [:exec_if true] [close false] [:float_mult true] [1.0 true] [:float_add true] [:float_add false] [:exec_dup true] [:float_add false]), :program (:float_quot 1.0 :float_mult 1.0 0.0 :float_quot 1.0 :exec_dup (:exec_dup (:float_add :float_quot :float_subtract :float_quot :in1 :float_mult :in1 :exec_dup (0.0 :float_subtract :exec_if (:exec_if (:float_mult 1.0 :float_add :exec_dup ()) ()) ())))), :total-error 19.765515000000022}


Current generation:
2
the best individual for this run is:
{:plushy ([:float_quot 0.7738238139134954] [:float_subtract 0.3652784212645484] [close 0.045732187868859187] [:float_subtract 0] [:float_subtract 0] [:float_quot 0.32325871142221546] [1.0 1] [:float_mult 0.8422203476003831] [0.0 0.42102263811388646] [:exec_dup 0.4526552869805827] [:float_quot 0.32815704112584115] [1.0 0.5154947720213992] [0.0 1] [:float_quot 1] [:exec_dup 0] [:exec_dup 0] [0.0 0] [1.0 1] [:exec_if 0] [:float_eq 0] [:exec_dup 0.9537153659819917] [:float_mult 0] [:exec_dup 0.7647714706464711] [:in1 0] [:exec_dup 0.4469396881138226] [:float_add 1] [:float_quot 1] [:float_mult 0.13400916593627465] [1.0 0] [:float_quot 0] [:float_eq 0] [:float_mult 0] [:float_subtract 1] [:float_quot 0.6435646790275082] [:in1 1] [:float_mult 1] [close 0] [:float_add 0] [1.0 0.3112501841570798] [:in1 1] [1.0 0] [:exec_dup 0.9233474333741958] [:in1 0.24301306589203714] [0.0 1] [:exec_if 0] [0.0 0.3306520398381742] [:float_subtract 1] [:exec_if 1] [:exec_if 0.2622295275625163] [close 0] [:float_mult 1] [1.0 1] [:float_add 0.9844756363442393] [:float_add 0] [:exec_dup 1] [:float_add 0]), :behaviors (39.40625 28.662271999999994 20.74581799999999 14.999167999999989 10.891321999999986 7.999999999999993 5.995081999999995 4.6234879999999965 3.695497999999998 3.072511999999999 2.656249999999999 2.3793919999999993 2.1976579999999997 2.083328 2.020202 2.0 2.0202020000000003 2.0833280000000003 2.1976580000000006 2.3793920000000006 2.656250000000001 3.072512000000001 3.6954980000000015 4.623488000000002 5.995082000000004 8.000000000000007 10.891322000000011 14.999168000000019 20.745818000000032 28.662272000000055), :errors (4.078125 1.7279359999999961 0.2807089999999981 0.5276160000000036 0.9025389999999991 1.0 0.934658999999999 0.7874560000000015 0.6124509999999992 0.44294399999999934 0.296875 0.18150400000000033 0.09737099999999987 0.04153600000000024 0.010098999999999858 0.0 0.010098999999999414 0.041535999999999795 0.09737099999999987 0.1815039999999999 0.296875 0.44294400000000067 0.6124510000000001 0.7874559999999988 0.934658999999999 0.9999999999999982 0.9025390000000009 0.5276160000000036 0.2807090000000052 1.7279360000000104), :min-program-boolean-plushy ([:float_quot true] [:float_subtract false] [close false] [:float_subtract false] [:float_subtract false] [:float_quot false] [1.0 true] [:float_mult true] [0.0 false] [:exec_dup false] [:float_quot false] [1.0 true] [0.0 true] [:float_quot true] [:exec_dup false] [:exec_dup false] [0.0 false] [1.0 true] [:exec_if false] [:float_eq false] [:exec_dup true] [:float_mult false] [:exec_dup true] [:in1 false] [:exec_dup false] [:float_add true] [:float_quot true] [:float_mult false] [1.0 false] [:float_quot false] [:float_eq false] [:float_mult false] [:float_subtract true] [:float_quot true] [:in1 true] [:float_mult true] [close false] [:float_add false] [1.0 false] [:in1 true] [1.0 false] [:exec_dup true] [:in1 false] [0.0 true] [:exec_if false] [0.0 false] [:float_subtract true] [:exec_if true] [:exec_if false] [close false] [:float_mult true] [1.0 true] [:float_add true] [:float_add false] [:exec_dup true] [:float_add false]), :program (:float_quot 1.0 :float_mult 1.0 0.0 :float_quot 1.0 :exec_dup (:exec_dup (:float_add :float_quot :float_subtract :float_quot :in1 :float_mult :in1 :exec_dup (0.0 :float_subtract :exec_if (:float_mult 1.0 :float_add :exec_dup ()) ())))), :total-error 19.765515000000022}


Current generation:
3
the best individual for this run is:
{:plushy ([:float_quot 0] [:float_subtract 0] [close 0.4882607899524654] [:float_subtract 0] [:float_subtract 0.1625256300122403] [:float_quot 0.46883741845703747] [1.0 1] [:float_mult 1] [0.0 0.2591597842619406] [:exec_dup 0.741249242248476] [:float_quot 0] [1.0 0.1469650600603017] [0.0 0.988751443439134] [:float_quot 0.6355374472578056] [:exec_dup 0.7991839957148835] [:exec_dup 0] [0.0 0.018274699449956633] [1.0 0.263521225381556] [:exec_if 0] [:float_eq 0] [:exec_dup 0.9462293976978662] [:float_mult 0] [:exec_dup 0] [:in1 0] [:exec_dup 0] [:float_add 0.18837434533206016] [:float_quot 0.009189281031626362] [:float_mult 0.8614396272431195] [1.0 0.12103134943328664] [:float_quot 0.8434026573588032] [:float_eq 0] [:float_mult 0.6534830719197369] [:float_subtract 0.5667812161465511] [:float_quot 1] [:in1 1] [:float_mult 0.9383681126907009] [close 0] [:float_add 0] [1.0 0.2687907437133645] [:in1 1] [1.0 0] [:exec_dup 1] [:in1 0] [0.0 0.7709006726915295] [:exec_if 0.12292562565864423] [0.0 0] [:float_subtract 1] [:exec_if 0] [:exec_if 0] [close 0] [:float_mult 1] [1.0 1] [:float_add 1] [:float_add 0.33759916428557163] [:exec_dup 0] [:float_add 0]), :behaviors (35.328125 26.934336 20.465108999999988 15.526783999999992 11.793860999999985 8.999999999999991 6.929740999999995 5.410943999999997 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000001 6.929741000000003 9.000000000000007 11.793861000000012 15.52678400000002 20.46510900000003 26.934336000000044), :errors (0.0 0.0 3.552713678800501E-15 0.0 0.0 1.7763568394002505E-15 8.881784197001252E-16 8.881784197001252E-16 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 0.0 0.0 1.7763568394002505E-15 0.0 1.7763568394002505E-15 3.552713678800501E-15 0.0), :min-program-boolean-plushy ([:float_quot false] [:float_subtract false] [close true] [:float_subtract false] [:float_subtract true] [:float_quot false] [1.0 true] [:float_mult true] [0.0 true] [:exec_dup true] [:float_quot false] [1.0 true] [0.0 true] [:float_quot false] [:exec_dup false] [:exec_dup false] [0.0 false] [1.0 true] [:exec_if false] [:float_eq false] [:exec_dup true] [:float_mult false] [:exec_dup false] [:in1 false] [:exec_dup false] [:float_add false] [:float_quot false] [:float_mult true] [1.0 false] [:float_quot false] [:float_eq false] [:float_mult false] [:float_subtract false] [:float_quot true] [:in1 true] [:float_mult true] [close false] [:float_add false] [1.0 false] [:in1 true] [1.0 false] [:exec_dup true] [:in1 false] [0.0 true] [:exec_if false] [0.0 false] [:float_subtract true] [:exec_if false] [:exec_if false] [close false] [:float_mult true] [1.0 true] [:float_add true] [:float_add false] [:exec_dup false] [:float_add false]), :program (:float_subtract 1.0 :float_mult 0.0 :exec_dup (1.0 0.0 1.0 :exec_dup (:float_mult :float_quot :in1 :float_mult :in1 :exec_dup (0.0 :float_subtract :float_mult 1.0 :float_add)))), :total-error 1.687538997430238E-14}

Completed run

The best individual according to the genetic program is:
{:plushy ([:float_quot 0] [:float_subtract 0] [close 0.4882607899524654] [:float_subtract 0] [:float_subtract 0.1625256300122403] [:float_quot 0.46883741845703747] [1.0 1] [:float_mult 1] [0.0 0.2591597842619406] [:exec_dup 0.741249242248476] [:float_quot 0] [1.0 0.1469650600603017] [0.0 0.988751443439134] [:float_quot 0.6355374472578056] [:exec_dup 0.7991839957148835] [:exec_dup 0] [0.0 0.018274699449956633] [1.0 0.263521225381556] [:exec_if 0] [:float_eq 0] [:exec_dup 0.9462293976978662] [:float_mult 0] [:exec_dup 0] [:in1 0] [:exec_dup 0] [:float_add 0.18837434533206016] [:float_quot 0.009189281031626362] [:float_mult 0.8614396272431195] [1.0 0.12103134943328664] [:float_quot 0.8434026573588032] [:float_eq 0] [:float_mult 0.6534830719197369] [:float_subtract 0.5667812161465511] [:float_quot 1] [:in1 1] [:float_mult 0.9383681126907009] [close 0] [:float_add 0] [1.0 0.2687907437133645] [:in1 1] [1.0 0] [:exec_dup 1] [:in1 0] [0.0 0.7709006726915295] [:exec_if 0.12292562565864423] [0.0 0] [:float_subtract 1] [:exec_if 0] [:exec_if 0] [close 0] [:float_mult 1] [1.0 1] [:float_add 1] [:float_add 0.33759916428557163] [:exec_dup 0] [:float_add 0]), :behaviors (35.328125 26.934336 20.465108999999988 15.526783999999992 11.793860999999985 8.999999999999991 6.929740999999995 5.410943999999997 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000001 6.929741000000003 9.000000000000007 11.793861000000012 15.52678400000002 20.46510900000003 26.934336000000044), :errors (0.0 0.0 3.552713678800501E-15 0.0 0.0 1.7763568394002505E-15 8.881784197001252E-16 8.881784197001252E-16 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 0.0 0.0 1.7763568394002505E-15 0.0 1.7763568394002505E-15 3.552713678800501E-15 0.0), :min-program-boolean-plushy ([:float_quot false] [:float_subtract false] [close true] [:float_subtract false] [:float_subtract true] [:float_quot false] [1.0 true] [:float_mult true] [0.0 true] [:exec_dup true] [:float_quot false] [1.0 true] [0.0 true] [:float_quot false] [:exec_dup false] [:exec_dup false] [0.0 false] [1.0 true] [:exec_if false] [:float_eq false] [:exec_dup true] [:float_mult false] [:exec_dup false] [:in1 false] [:exec_dup false] [:float_add false] [:float_quot false] [:float_mult true] [1.0 false] [:float_quot false] [:float_eq false] [:float_mult false] [:float_subtract false] [:float_quot true] [:in1 true] [:float_mult true] [close false] [:float_add false] [1.0 false] [:in1 true] [1.0 false] [:exec_dup true] [:in1 false] [0.0 true] [:exec_if false] [0.0 false] [:float_subtract true] [:exec_if false] [:exec_if false] [close false] [:float_mult true] [1.0 true] [:float_add true] [:float_add false] [:exec_dup false] [:float_add false]), :program (:float_subtract 1.0 :float_mult 0.0 :exec_dup (1.0 0.0 1.0 :exec_dup (:float_mult :float_quot :in1 :float_mult :in1 :exec_dup (0.0 :float_subtract :float_mult 1.0 :float_add)))), :total-error 1.687538997430238E-14}

{:total-test-error 8.393286066166183E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 3}
{:list_of_successful_generations [3]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 3.0}
{:list_of_successful_generations [3]}

