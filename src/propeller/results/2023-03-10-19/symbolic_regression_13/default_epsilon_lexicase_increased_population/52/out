Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [32.816650390625]} {:input1 [-1.4], :output1 [10.250941239295987]} {:input1 [-1.2999999999999998], :output1 [3.052941630480994]} {:input1 [-1.1999999999999997], :output1 [1.2808830402559979]} {:input1 [-1.0999999999999996], :output1 [1.012003612721]} {:input1 [-0.9999999999999997], :output1 [1.0]} {:input1 [-0.8999999999999997], :output1 [1.0053935804810001]} {:input1 [-0.7999999999999997], :output1 [1.0567125647360003]} {:input1 [-0.6999999999999997], :output1 [1.1863208592010006]} {:input1 [-0.5999999999999998], :output1 [1.3778019983360006]} {:input1 [-0.4999999999999998], :output1 [1.5861816406250007]} {:input1 [-0.3999999999999998], :output1 [1.7675442012160003]} {:input1 [-0.2999999999999998], :output1 [1.8962957994410004]} {:input1 [-0.19999999999999982], :output1 [1.9683819560959999]} {:input1 [-0.09999999999999981], :output1 [1.9960059960010001]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0040060040010004]} {:input1 [0.2000000000000002], :output1 [2.032386052096]} {:input1 [0.3000000000000002], :output1 [2.112453263441001]} {:input1 [0.40000000000000024], :output1 [2.2816413532160005]} {:input1 [0.5000000000000002], :output1 [2.6018066406250013]} {:input1 [0.6000000000000002], :output1 [3.186423566336001]} {:input1 [0.7000000000000002], :output1 [4.253149715201001]} {:input1 [0.8000000000000002], :output1 [6.226454388736003]} {:input1 [0.9000000000000001], :output1 [9.936757492481007]} {:input1 [1.0000000000000002], :output1 [17.00000000000003]} {:input1 [1.1000000000000003], :output1 [30.523585140721067]} {:input1 [1.2000000000000004], :output1 [56.38312585625612]} {:input1 [1.3000000000000005], :output1 [105.46493661448132]} {:input1 [1.4000000000000006], :output1 [197.4913155112967]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :float_dup 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [362.15773206949234]} {:input1 [-1.7], :output1 [235.44414524176082]} {:input1 [-1.65], :output1 [149.71648881506073]} {:input1 [-1.5999999999999999], :output1 [92.87636576665591]} {:input1 [-1.5499999999999998], :output1 [56.04890628688412]} {:input1 [-1.4999999999999998], :output1 [32.81665039062493]} {:input1 [-1.4499999999999997], :output1 [18.613670713296088]} {:input1 [-1.3999999999999997], :output1 [10.250941239295956]} {:input1 [-1.3499999999999996], :output1 [5.548388562845466]} {:input1 [-1.2999999999999996], :output1 [3.0529416304809884]} {:input1 [-1.2499999999999996], :output1 [1.8252764344215324]} {:input1 [-1.1999999999999995], :output1 [1.280883040255997]} {:input1 [-1.1499999999999995], :output1 [1.0736095315440224]} {:input1 [-1.0999999999999994], :output1 [1.0120036127209997]} {:input1 [-1.0499999999999994], :output1 [1.0006173058580665]} {:input1 [-0.9999999999999993], :output1 [1.0]} {:input1 [-0.9499999999999993], :output1 [1.0004137925141996]} {:input1 [-0.8999999999999992], :output1 [1.0053935804810001]} {:input1 [-0.8499999999999992], :output1 [1.02217106575336]} {:input1 [-0.7999999999999992], :output1 [1.0567125647360007]} {:input1 [-0.7499999999999991], :output1 [1.111708700656892]} {:input1 [-0.6999999999999991], :output1 [1.1863208592010015]} {:input1 [-0.649999999999999], :output1 [1.276853701461545]} {:input1 [-0.599999999999999], :output1 [1.3778019983360021]} {:input1 [-0.5499999999999989], :output1 [1.482928595279475]} {:input1 [-0.49999999999999895], :output1 [1.5861816406250022]} {:input1 [-0.44999999999999896], :output1 [1.6823648237032445]} {:input1 [-0.39999999999999897], :output1 [1.7675442012160016]} {:input1 [-0.349999999999999], :output1 [1.8392177104158218]} {:input1 [-0.299999999999999], :output1 [1.8962957994410012]} {:input1 [-0.249999999999999], :output1 [1.9389496445655832]} {:input1 [-0.199999999999999], :output1 [1.9683819560960003]} {:input1 [-0.14999999999999902], :output1 [1.986568190106309]} {:input1 [-0.09999999999999902], :output1 [1.9960059960010001]} {:input1 [-0.04999999999999902], :output1 [1.9995000937421876]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0005000937578123]} {:input1 [0.10000000000000099], :output1 [2.0040060040010004]} {:input1 [0.150000000000001], :output1 [2.0135684976531847]} {:input1 [0.200000000000001], :output1 [2.032386052096001]} {:input1 [0.250000000000001], :output1 [2.063980162143708]} {:input1 [0.300000000000001], :output1 [2.112453263441002]} {:input1 [0.350000000000001], :output1 [2.1828482355251975]} {:input1 [0.40000000000000097], :output1 [2.2816413532160027]} {:input1 [0.45000000000000095], :output1 [2.4174182688438703]} {:input1 [0.500000000000001], :output1 [2.601806640625004]} {:input1 [0.550000000000001], :output1 [2.8507715279513532]} {:input1 [0.6000000000000011], :output1 [3.186423566336008]} {:input1 [0.6500000000000011], :output1 [3.6395490041646803]} {:input1 [0.7000000000000012], :output1 [4.253149715201017]} {:input1 [0.7500000000000012], :output1 [5.087386190891292]} {:input1 [0.8000000000000013], :output1 [6.226454388736034]} {:input1 [0.8500000000000013], :output1 [7.788106636019029]} {:input1 [0.9000000000000014], :output1 [9.936757492481066]} {:input1 [0.9500000000000014], :output1 [12.901409070311171]} {:input1 [1.0000000000000013], :output1 [17.000000000000128]} {:input1 [1.0500000000000014], :output1 [22.67224303368639]} {:input1 [1.1000000000000014], :output1 [30.523585140721245]} {:input1 [1.1500000000000015], :output1 [41.38361986690375]} {:input1 [1.2000000000000015], :output1 [56.383125856256555]} {:input1 [1.2500000000000016], :output1 [77.0549212098129]} {:input1 [1.3000000000000016], :output1 [105.46493661448204]} {:input1 [1.3500000000000016], :output1 [144.38134926576885]} {:input1 [1.4000000000000017], :output1 [197.4913155112981]} {:input1 [1.4500000000000017], :output1 [269.676826586252]} {:input1 [1.5000000000000018], :output1 [367.3635253906292]} {:input1 [1.5500000000000018], :output1 [498.95900254737404]} {:input1 [1.6000000000000019], :output1 [675.4001796546636]} {:input1 [1.650000000000002], :output1 [910.8329325955868]} {:input1 [1.700000000000002], :output1 [1223.4511572177753]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_13$error_function@7a0ef219", :population-size 2500}}


Current generation:
0
the best individual for this run is:
{:plushy (:float_subtract :float_add :float_subtract :float_mult 1.0 :float_quot :float_add :float_add :float_mult :float_dup :in1 :float_add :float_dup 1.0 :float_mult :float_dup 1.0 :float_eq :float_mult 1.0 :float_quot :float_add :float_subtract :float_quot :float_add :float_subtract 1.0 1.0 :float_subtract 0.0 :float_mult :float_subtract :float_add :float_quot :float_mult :float_quot :float_subtract 0.0 0.0 1.0 :float_dup :in1 :float_add :float_mult :float_add :float_eq :float_subtract :float_mult :float_mult :float_eq :float_eq 1.0 :in1 :float_add :float_add :float_quot :float_add :float_subtract :float_mult :float_quot), :behaviors (0.5 0.6000000000000001 0.7000000000000002 0.8000000000000003 0.9000000000000004 1.0 1.1000000000000003 1.2000000000000002 1.3000000000000003 1.4000000000000004 1.5000000000000002 1.6 1.7000000000000002 1.8000000000000003 1.9000000000000001 3.0 3.1 3.2 3.3000000000000003 3.4000000000000004 4.5 4.6 4.7 5.800000000000001 5.9 7.0 7.1000000000000005 7.2 8.3 8.4), :errors (32.316650390625 9.650941239295987 2.352941630480994 0.4808830402559976 0.11200361272099957 0.0 0.09460641951900017 0.1432874352639999 0.11367914079899966 0.022198001663999767 0.08618164062500044 0.16754420121600022 0.19629579944100017 0.1683819560959996 0.09600599600100002 1.0 1.0959939959989997 1.167613947904 1.1875467365589993 1.1183586467839999 1.8981933593749987 1.4135764336639984 0.446850284798999 0.42645438873600217 4.036757492481007 10.000000000000028 23.423585140721066 49.18312585625612 97.16493661448132 189.0913155112967), :total-error 428.6559089130602}


Current generation:
1
the best individual for this run is:
{:plushy (:in1 1.0 :float_mult :float_dup 0.0 :float_quot :float_add :float_add :float_quot :float_eq 1.0 :float_dup :in1 :float_dup :float_dup :float_add :float_add :float_eq :in1 :float_dup :float_mult :float_add :float_mult :float_dup 1.0 :float_mult 0.0 :in1 :float_dup :float_mult :float_dup 0.0 :float_dup :in1 :float_eq :float_dup :in1 :float_quot :float_quot :float_dup 1.0 :float_quot :float_dup :float_add 1.0 :float_eq :in1 :float_eq :float_subtract :float_add :float_add :float_mult :float_mult 1.0 :float_add :float_eq), :behaviors (3.640625 2.4018559999999995 1.651248999999999 1.2381439999999992 1.0488409999999997 1.0 1.0327610000000003 1.1075840000000003 1.1998090000000003 1.2959360000000002 1.3906250000000002 1.4844160000000002 1.5821690000000002 1.6922240000000004 1.8262810000000003 2.0 2.2343210000000004 2.5575040000000007 3.0078890000000014 3.637376000000002 4.515625000000003 5.734976000000002 7.416089000000004 9.714304000000006 12.826721000000006 17.000000000000007 22.538881000000025 29.815424000000032 39.27896900000006 51.46681600000008), :errors (29.176025390625 7.849085239295987 1.4016926304809951 0.04273904025599862 0.03683738727899977 0.0 0.027367419519000125 0.050871435264000064 0.013488140798999737 0.08186599833600039 0.19555664062500044 0.28312820121600013 0.3141267994410002 0.27615795609599947 0.16972499600099988 0.0 0.23031499599900007 0.5251179479040005 0.8954357365590004 1.3557346467840015 1.9138183593750013 2.548552433664001 3.1629392847990028 3.4878496112640027 2.889963507518999 2.1316282072803006E-14 7.984704140721043 26.56770185625609 66.18596761448126 146.02449951129663), :total-error 303.691266921856}


Current generation:
2
the best individual for this run is:
{:plushy (:in1 1.0 :float_mult :float_dup :float_dup :float_add :float_add :float_quot :float_eq 1.0 :in1 :float_dup :float_dup :float_add :float_add :float_eq :in1 :float_dup :float_dup :float_mult :float_add :float_mult 1.0 :float_subtract :float_mult :float_dup :float_mult :float_dup 0.0 :float_dup :float_dup :in1 :float_eq :float_dup 0.0 :in1 :float_quot :float_dup 1.0 :float_eq :float_dup :float_add 1.0 :float_eq :in1 :float_eq 0.0 :float_subtract :float_add :float_eq :float_subtract :float_mult :float_mult :float_add :float_eq :float_dup), :behaviors (19.140625 11.235903999999993 6.355440999999993 3.474495999999993 1.8577689999999962 1.0 0.5730489999999988 0.37945599999999985 0.31248099999999995 0.3226240000000001 0.3906250000000003 0.5069440000000003 0.6577210000000002 0.8172160000000003 0.9467290000000002 1.0 0.9350889999999997 0.7327359999999994 0.4212009999999993 0.10758399999999939 0.015625000000000278 0.5299840000000019 2.2470010000000045 6.031936000000006 13.082689000000013 25.000000000000046 43.86412900000006 72.31801600000014 113.65692100000025 171.92454400000042), :errors (13.676025390625 0.9849627607040059 3.3024993695189986 2.1936129597439953 0.8457653872789963 0.0 0.43234458048100133 0.6772565647360005 0.8738398592010006 1.0551779983360006 1.1955566406250004 1.260600201216 1.2385747994410001 1.1511659560959995 1.049276996001 1.0 1.0689170040010008 1.2996500520960008 1.6912522634410017 2.1740573532160012 2.586181640625001 2.656439566335999 2.0061487152009967 0.1945183887359967 3.1459315075190055 8.000000000000018 13.340543859278995 15.93489014374402 8.191984385518936 25.56677151129628), :total-error 118.79394585501325}


Current generation:
3
the best individual for this run is:
{:plushy (1.0 :float_mult :float_dup :float_subtract 0.0 :float_quot :float_add :float_quot :float_dup 1.0 :float_dup :in1 :float_quot :float_dup :float_dup :float_add :float_add :float_eq :in1 :float_dup :in1 :float_mult :float_mult :float_add :float_dup :float_mult :float_mult 0.0 :float_dup :float_mult 0.0 :float_dup :in1 :float_eq :in1 :float_quot :float_dup 1.0 :float_quot :in1 :float_dup :float_add 1.0 :float_eq :in1 :float_eq :float_subtract :float_add :float_add :float_mult :float_dup 1.0 :float_add :float_mult :float_eq :float_dup), :behaviors (37.457275390625 12.292477239295982 3.485750630480992 0.8108670402559959 0.12156461272099908 0.0 0.0788345804810005 0.2948565647360008 0.6179698592010011 0.992457998336001 1.351806640625001 1.643640201216 1.8430247994410005 1.952445956096 1.994006996001 0.0 2.0060070040010003 2.0484500520960003 2.1671822634410005 2.4137373532160007 2.8674316406250018 3.6650795663360016 5.056798715201002 7.512598388736003 11.926198492481008 20.000000000000032 34.95714614072107 62.825109856256134 114.68574561448132 210.5088515112967), :errors (4.640625 2.0415359999999954 0.432808999999998 0.470016000000002 0.8904390000000009 1.0 0.9265589999999997 0.7618559999999994 0.5683509999999995 0.3853439999999996 0.23437499999999956 0.12390400000000024 0.053270999999999846 0.01593599999999995 0.001999000000000084 2.0 0.0020009999999999195 0.016064000000000078 0.054728999999999584 0.1320960000000002 0.26562500000000044 0.4786560000000004 0.803649000000001 1.2861440000000002 1.9894410000000011 3.0000000000000036 4.4335610000000045 6.441984000000012 9.220809000000003 13.017536000000007), :total-error 55.68931500000002}


Current generation:
4
the best individual for this run is:
{:plushy (1.0 :float_mult :float_subtract 0.0 :float_quot :float_add :float_quot :float_dup 1.0 :float_dup :in1 :float_quot :float_subtract :float_dup :float_dup :float_add :float_add :float_eq :in1 :float_dup :in1 :float_mult :float_mult :float_add :float_dup :float_mult :float_dup :float_mult 0.0 :float_dup :in1 :float_eq :in1 :float_quot 0.0 1.0 :float_quot :in1 :float_dup :float_add :float_mult 1.0 :float_eq :in1 :float_eq :float_subtract :float_add :float_add :float_mult 1.0 :float_add :float_mult :float_eq :float_dup), :behaviors (32.816650390625 10.250941239295985 3.052941630480994 1.2808830402559979 1.012003612721 1.0 1.0053935804810001 1.0567125647360003 1.1863208592010006 1.3778019983360006 1.5861816406250007 1.7675442012160003 1.8962957994410004 1.9683819560959999 1.9960059960010001 2.0 2.0040060040010004 2.032386052096 2.1124532634410005 2.2816413532160005 2.601806640625001 3.186423566336001 4.253149715201001 6.226454388736003 9.936757492481007 17.00000000000003 30.523585140721067 56.38312585625613 105.4649366144813 197.4913155112967), :errors (0.0 1.7763568394002505E-15 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 7.105427357601002E-15 1.4210854715202004E-14 0.0), :total-error 2.398081733190338E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (1.0 :float_mult :float_subtract 0.0 :float_quot :float_add :float_quot :float_dup 1.0 :float_dup :in1 :float_quot :float_subtract :float_dup :float_dup :float_add :float_add :float_eq :in1 :float_dup :in1 :float_mult :float_mult :float_add :float_dup :float_mult :float_dup :float_mult 0.0 :float_dup :in1 :float_eq :in1 :float_quot 0.0 1.0 :float_quot :in1 :float_dup :float_add :float_mult 1.0 :float_eq :in1 :float_eq :float_subtract :float_add :float_add :float_mult 1.0 :float_add :float_mult :float_eq :float_dup), :behaviors (32.816650390625 10.250941239295985 3.052941630480994 1.2808830402559979 1.012003612721 1.0 1.0053935804810001 1.0567125647360003 1.1863208592010006 1.3778019983360006 1.5861816406250007 1.7675442012160003 1.8962957994410004 1.9683819560959999 1.9960059960010001 2.0 2.0040060040010004 2.032386052096 2.1124532634410005 2.2816413532160005 2.601806640625001 3.186423566336001 4.253149715201001 6.226454388736003 9.936757492481007 17.00000000000003 30.523585140721067 56.38312585625613 105.4649366144813 197.4913155112967), :errors (0.0 1.7763568394002505E-15 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 7.105427357601002E-15 1.4210854715202004E-14 0.0), :total-error 2.398081733190338E-14}

{:total-test-error 2.169375790117556E-13}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 4}
{:list_of_successful_generations [4]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 4.0}
{:list_of_successful_generations [4]}

