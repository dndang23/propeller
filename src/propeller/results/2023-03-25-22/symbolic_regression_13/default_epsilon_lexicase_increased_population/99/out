Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [32.816650390625]} {:input1 [-1.4], :output1 [10.250941239295987]} {:input1 [-1.2999999999999998], :output1 [3.052941630480994]} {:input1 [-1.1999999999999997], :output1 [1.2808830402559979]} {:input1 [-1.0999999999999996], :output1 [1.012003612721]} {:input1 [-0.9999999999999997], :output1 [1.0]} {:input1 [-0.8999999999999997], :output1 [1.0053935804810001]} {:input1 [-0.7999999999999997], :output1 [1.0567125647360003]} {:input1 [-0.6999999999999997], :output1 [1.1863208592010006]} {:input1 [-0.5999999999999998], :output1 [1.3778019983360006]} {:input1 [-0.4999999999999998], :output1 [1.5861816406250007]} {:input1 [-0.3999999999999998], :output1 [1.7675442012160003]} {:input1 [-0.2999999999999998], :output1 [1.8962957994410004]} {:input1 [-0.19999999999999982], :output1 [1.9683819560959999]} {:input1 [-0.09999999999999981], :output1 [1.9960059960010001]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0040060040010004]} {:input1 [0.2000000000000002], :output1 [2.032386052096]} {:input1 [0.3000000000000002], :output1 [2.112453263441001]} {:input1 [0.40000000000000024], :output1 [2.2816413532160005]} {:input1 [0.5000000000000002], :output1 [2.6018066406250013]} {:input1 [0.6000000000000002], :output1 [3.186423566336001]} {:input1 [0.7000000000000002], :output1 [4.253149715201001]} {:input1 [0.8000000000000002], :output1 [6.226454388736003]} {:input1 [0.9000000000000001], :output1 [9.936757492481007]} {:input1 [1.0000000000000002], :output1 [17.00000000000003]} {:input1 [1.1000000000000003], :output1 [30.523585140721067]} {:input1 [1.2000000000000004], :output1 [56.38312585625612]} {:input1 [1.3000000000000005], :output1 [105.46493661448132]} {:input1 [1.4000000000000006], :output1 [197.4913155112967]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_dup 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [362.15773206949234]} {:input1 [-1.7], :output1 [235.44414524176082]} {:input1 [-1.65], :output1 [149.71648881506073]} {:input1 [-1.5999999999999999], :output1 [92.87636576665591]} {:input1 [-1.5499999999999998], :output1 [56.04890628688412]} {:input1 [-1.4999999999999998], :output1 [32.81665039062493]} {:input1 [-1.4499999999999997], :output1 [18.613670713296088]} {:input1 [-1.3999999999999997], :output1 [10.250941239295956]} {:input1 [-1.3499999999999996], :output1 [5.548388562845466]} {:input1 [-1.2999999999999996], :output1 [3.0529416304809884]} {:input1 [-1.2499999999999996], :output1 [1.8252764344215324]} {:input1 [-1.1999999999999995], :output1 [1.280883040255997]} {:input1 [-1.1499999999999995], :output1 [1.0736095315440224]} {:input1 [-1.0999999999999994], :output1 [1.0120036127209997]} {:input1 [-1.0499999999999994], :output1 [1.0006173058580665]} {:input1 [-0.9999999999999993], :output1 [1.0]} {:input1 [-0.9499999999999993], :output1 [1.0004137925141996]} {:input1 [-0.8999999999999992], :output1 [1.0053935804810001]} {:input1 [-0.8499999999999992], :output1 [1.02217106575336]} {:input1 [-0.7999999999999992], :output1 [1.0567125647360007]} {:input1 [-0.7499999999999991], :output1 [1.111708700656892]} {:input1 [-0.6999999999999991], :output1 [1.1863208592010015]} {:input1 [-0.649999999999999], :output1 [1.276853701461545]} {:input1 [-0.599999999999999], :output1 [1.3778019983360021]} {:input1 [-0.5499999999999989], :output1 [1.482928595279475]} {:input1 [-0.49999999999999895], :output1 [1.5861816406250022]} {:input1 [-0.44999999999999896], :output1 [1.6823648237032445]} {:input1 [-0.39999999999999897], :output1 [1.7675442012160016]} {:input1 [-0.349999999999999], :output1 [1.8392177104158218]} {:input1 [-0.299999999999999], :output1 [1.8962957994410012]} {:input1 [-0.249999999999999], :output1 [1.9389496445655832]} {:input1 [-0.199999999999999], :output1 [1.9683819560960003]} {:input1 [-0.14999999999999902], :output1 [1.986568190106309]} {:input1 [-0.09999999999999902], :output1 [1.9960059960010001]} {:input1 [-0.04999999999999902], :output1 [1.9995000937421876]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0005000937578123]} {:input1 [0.10000000000000099], :output1 [2.0040060040010004]} {:input1 [0.150000000000001], :output1 [2.0135684976531847]} {:input1 [0.200000000000001], :output1 [2.032386052096001]} {:input1 [0.250000000000001], :output1 [2.063980162143708]} {:input1 [0.300000000000001], :output1 [2.112453263441002]} {:input1 [0.350000000000001], :output1 [2.1828482355251975]} {:input1 [0.40000000000000097], :output1 [2.2816413532160027]} {:input1 [0.45000000000000095], :output1 [2.4174182688438703]} {:input1 [0.500000000000001], :output1 [2.601806640625004]} {:input1 [0.550000000000001], :output1 [2.8507715279513532]} {:input1 [0.6000000000000011], :output1 [3.186423566336008]} {:input1 [0.6500000000000011], :output1 [3.6395490041646803]} {:input1 [0.7000000000000012], :output1 [4.253149715201017]} {:input1 [0.7500000000000012], :output1 [5.087386190891292]} {:input1 [0.8000000000000013], :output1 [6.226454388736034]} {:input1 [0.8500000000000013], :output1 [7.788106636019029]} {:input1 [0.9000000000000014], :output1 [9.936757492481066]} {:input1 [0.9500000000000014], :output1 [12.901409070311171]} {:input1 [1.0000000000000013], :output1 [17.000000000000128]} {:input1 [1.0500000000000014], :output1 [22.67224303368639]} {:input1 [1.1000000000000014], :output1 [30.523585140721245]} {:input1 [1.1500000000000015], :output1 [41.38361986690375]} {:input1 [1.2000000000000015], :output1 [56.383125856256555]} {:input1 [1.2500000000000016], :output1 [77.0549212098129]} {:input1 [1.3000000000000016], :output1 [105.46493661448204]} {:input1 [1.3500000000000016], :output1 [144.38134926576885]} {:input1 [1.4000000000000017], :output1 [197.4913155112981]} {:input1 [1.4500000000000017], :output1 [269.676826586252]} {:input1 [1.5000000000000018], :output1 [367.3635253906292]} {:input1 [1.5500000000000018], :output1 [498.95900254737404]} {:input1 [1.6000000000000019], :output1 [675.4001796546636]} {:input1 [1.650000000000002], :output1 [910.8329325955868]} {:input1 [1.700000000000002], :output1 [1223.4511572177753]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_13$error_function@261ea657", :population-size 5000}}


Current generation:
0
the best individual for this run is:
{:plushy (:in1 :float_subtract :float_mult :float_dup :float_subtract :float_quot :float_mult :float_mult :float_add :float_dup 1.0 :float_mult :float_dup :float_dup :float_dup 1.0 :float_mult :float_add :float_add :in1 :float_quot :float_subtract 1.0 0.0 :float_quot :float_subtract :float_add :float_quot 1.0 :float_dup :float_quot :float_subtract :in1 :float_dup :float_dup 0.0 :float_dup :float_mult :float_add :float_quot :float_mult 0.0 1.0 :float_subtract :float_subtract :float_add :in1 :in1 :float_dup :float_add :float_mult :float_add :in1 0.0 :float_subtract :float_mult 0.0 :float_subtract :float_dup :float_mult :in1 :float_dup :in1 :float_add 0.0 :float_subtract :float_add :in1 1.0 :float_quot :float_subtract 1.0 :in1 :float_add :float_mult :float_add :float_subtract), :behaviors (10.75 5.808383999999996 2.841215999999996 1.1858559999999965 0.3539039999999982 0.0 -0.20649600000000043 -0.30694400000000016 -0.3759840000000001 -0.4412160000000003 -0.5000000000000001 -0.533376 -0.5171039999999999 -0.42982399999999976 -0.25833599999999957 0.0 0.3377440000000007 0.7407360000000008 1.194336000000001 1.6925440000000012 2.2500000000000013 2.9168640000000012 3.7965760000000017 5.0664960000000026 7.001424000000003 8.000000000000007 12.513984000000018 19.380416000000036 29.556656000000064 44.2583040000001), :errors (22.066650390625 4.442557239295991 0.21172563048099802 0.0950270402560014 0.6580996127210017 1.0 1.2118895804810006 1.3636565647360004 1.5623048592010007 1.8190179983360009 2.086181640625001 2.3009202012160004 2.413399799441 2.3982059560959996 2.2543419960009996 2.0 1.6662620040009997 1.2916500520959993 0.918117263441 0.5890973532159993 0.351806640625 0.269559566336 0.45657371520099943 1.1599583887360003 2.9353334924810044 9.000000000000021 18.00960114072105 37.00270985625609 75.90828061448126 153.2330115112966), :total-error 350.6759401084}


Current generation:
1
the best individual for this run is:
{:plushy (:float_add :float_mult :float_subtract :in1 :float_add 1.0 :float_add :float_quot :float_dup :float_quot :float_quot :in1 :float_dup 1.0 :float_subtract :float_dup :in1 :in1 0.0 1.0 :float_dup :in1 :float_subtract :in1 :float_subtract :in1 :float_subtract :float_dup :in1 :float_mult :float_add :float_add :float_subtract :in1 :float_add :float_mult :float_dup 0.0 :float_add :float_mult :float_mult), :behaviors (-0.2109375 -0.2809856000000013 -1.5135133000000027 -2.831155200000001 -3.712025900000004 -3.9999999999999942 -3.7564640999999974 -3.149004799999999 -2.372496699999998 -1.5980543999999977 -0.9453124999999987 -0.47349759999999946 -0.18675629999999965 -0.049203199999999836 -0.005152899999999969 0.0 0.002788900000000015 0.013107200000000027 0.018600299999999983 0.006553599999999956 0.007812500000000052 0.1672704000000007 0.8454607000000018 2.7557888000000044 7.141940100000011 16.000000000000025 32.349821900000066 60.56017920000014 106.73223730000029 179.14588160000056), :errors (33.027587890625 10.531926839295988 4.566454930480997 4.112038240255998 4.724029512721004 4.999999999999995 4.761857680480998 4.2057173647359996 3.5588175592009987 2.9758563983359982 2.531494140624999 2.241041801216 2.083052099441 2.0175851560959996 2.0011588960010003 2.0 2.0012171040010003 2.0192788520960003 2.093852963441001 2.2750877532160003 2.5939941406250013 3.0191531663360003 3.407689015200999 3.4706655887359985 2.7948173924809963 1.0000000000000036 1.8262367592789985 4.177053343744021 1.2673006855189755 18.34543391129614), :total-error 140.6303991854831}


Current generation:
2
the best individual for this run is:
{:plushy (:float_mult :float_add :float_dup :float_dup 0.0 1.0 0.0 :float_add :float_mult :in1 :in1 :float_subtract :float_add 1.0 :float_add :float_dup :float_dup :float_quot :float_quot 1.0 :float_add :float_quot 1.0 :float_dup :float_add :float_quot :float_subtract :float_subtract :in1 :float_dup :float_dup 0.0 :float_mult :float_add :float_quot :float_dup :float_add :float_subtract :float_dup :in1 :float_mult 1.0 :float_dup 0.0 1.0 1.0 :float_quot :float_mult :float_add 1.0 0.0 :float_dup :float_add :float_mult :float_mult :in1 :float_add :in1 :in1 :float_mult :float_mult :float_add :float_dup :float_mult :float_dup :float_mult :float_add), :behaviors (33.316650390625 10.650941239295985 3.352941630480994 1.4808830402559976 1.1120036127209996 0.9999999999999997 0.9053935804809997 0.856712564736 0.8863208592010002 0.9778019983360002 1.0861816406250004 1.167544201216 1.1962957994410002 1.1683819560959996 1.0960059960009998 1.0 0.9040060040010002 0.832386052096 0.8124532634410002 0.8816413532160002 1.1018066406250009 1.5864235663360011 2.5531497152010014 4.426454388736003 8.036757492481007 15.000000000000028 28.423585140721066 54.183125856256126 103.1649366144813 195.0913155112967), :errors (0.5 0.3999999999999986 0.2999999999999998 0.19999999999999973 0.09999999999999964 3.3306690738754696E-16 0.10000000000000042 0.2000000000000003 0.3000000000000004 0.40000000000000036 0.5000000000000002 0.6000000000000003 0.7000000000000002 0.8000000000000003 0.9000000000000004 1.0 1.1 1.2000000000000002 1.3000000000000007 1.4000000000000004 1.5000000000000004 1.6 1.6999999999999997 1.7999999999999998 1.9000000000000004 2.0 2.1000000000000014 2.1999999999999957 2.3000000000000114 2.4000000000000057), :total-error 31.500000000000014}


Current generation:
3
the best individual for this run is:
{:plushy (:float_mult :float_add :float_dup :float_dup 0.0 1.0 0.0 :float_add :float_mult :in1 :in1 :float_subtract :float_add 1.0 :float_add :float_dup :float_dup :float_quot :float_quot 1.0 :float_add :float_quot 1.0 :float_dup :float_quot :float_add :float_quot :float_subtract :float_subtract :in1 :float_dup :float_dup :float_mult :float_dup :float_add :float_quot 1.0 :float_add :float_subtract :float_dup :in1 :float_mult 1.0 :float_dup :float_dup 0.0 1.0 1.0 :float_dup :float_quot :float_mult :float_add 1.0 0.0 :float_dup :float_add :float_mult :in1 :float_add :in1 :in1 :float_mult :float_mult :float_add :float_dup :float_mult :float_dup :float_mult :float_add), :behaviors (32.816650390625 10.250941239295985 3.052941630480994 1.2808830402559979 1.012003612721 1.0 1.0053935804810001 1.0567125647360003 1.1863208592010006 1.3778019983360006 1.5861816406250007 1.7675442012160003 1.8962957994410004 1.9683819560959999 1.9960059960010001 2.0 2.0040060040010004 2.032386052096 2.1124532634410005 2.2816413532160005 2.601806640625001 3.186423566336001 4.253149715201001 6.226454388736003 9.936757492481007 17.00000000000003 30.523585140721067 56.38312585625613 105.4649366144813 197.4913155112967), :errors (0.0 1.7763568394002505E-15 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 7.105427357601002E-15 1.4210854715202004E-14 0.0), :total-error 2.398081733190338E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (:float_mult :float_add :float_dup :float_dup 0.0 1.0 0.0 :float_add :float_mult :in1 :in1 :float_subtract :float_add 1.0 :float_add :float_dup :float_dup :float_quot :float_quot 1.0 :float_add :float_quot 1.0 :float_dup :float_quot :float_add :float_quot :float_subtract :float_subtract :in1 :float_dup :float_dup :float_mult :float_dup :float_add :float_quot 1.0 :float_add :float_subtract :float_dup :in1 :float_mult 1.0 :float_dup :float_dup 0.0 1.0 1.0 :float_dup :float_quot :float_mult :float_add 1.0 0.0 :float_dup :float_add :float_mult :in1 :float_add :in1 :in1 :float_mult :float_mult :float_add :float_dup :float_mult :float_dup :float_mult :float_add), :behaviors (32.816650390625 10.250941239295985 3.052941630480994 1.2808830402559979 1.012003612721 1.0 1.0053935804810001 1.0567125647360003 1.1863208592010006 1.3778019983360006 1.5861816406250007 1.7675442012160003 1.8962957994410004 1.9683819560959999 1.9960059960010001 2.0 2.0040060040010004 2.032386052096 2.1124532634410005 2.2816413532160005 2.601806640625001 3.186423566336001 4.253149715201001 6.226454388736003 9.936757492481007 17.00000000000003 30.523585140721067 56.38312585625613 105.4649366144813 197.4913155112967), :errors (0.0 1.7763568394002505E-15 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 7.105427357601002E-15 1.4210854715202004E-14 0.0), :total-error 2.398081733190338E-14}

{:total-test-error 2.169375790117556E-13}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 3}
{:list_of_successful_generations [3]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 3.0}
{:list_of_successful_generations [3]}

