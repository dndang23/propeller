Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_dup 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$error_function@658255aa", :population-size 5000}}


Current generation:
0
the best individual for this run is:
{:plushy (:in1 :in1 :float_add :in1 :float_mult :float_dup 0.0 :in1 :float_quot 1.0 :float_add :float_dup :float_add :float_add :float_dup :float_quot :float_mult :in1 :float_mult :float_dup 1.0 :float_add :float_mult :float_dup), :behaviors (38.8125 24.630143999999987 14.913235999999987 8.487935999999983 4.42424399999999 1.999999999999994 0.6677639999999969 0.02457599999999886 -0.21540400000000032 -0.24537599999999993 -0.18749999999999983 -0.11161599999999985 -0.051083999999999914 -0.015743999999999956 -0.0019959999999999887 0.0 0.0020040000000000123 0.016256000000000048 0.05691600000000012 0.14438400000000026 0.31250000000000056 0.6186240000000008 1.156596000000001 2.0725760000000015 3.5837640000000026 6.000000000000007 9.748244000000014 15.399936000000027 23.701236000000044 35.60614400000008), :errors (3.484375 2.304192000000011 5.551873000000004 7.038848000000009 7.369616999999995 6.999999999999999 6.261976999999996 5.386367999999999 4.5233529999999975 3.760831999999998 3.140624999999999 2.6725119999999993 2.3461129999999994 2.140608 2.032297 2.0 2.028297 2.1086080000000003 2.2381130000000002 2.4165120000000004 2.6406250000000004 2.8968320000000007 3.1513530000000003 3.338367999999999 3.345977 2.9999999999999982 2.0456169999999982 0.1268479999999954 3.2361270000000175 8.671808000000034), :total-error 108.25867500000004}


Current generation:
1
the best individual for this run is:
{:plushy (:float_dup :float_quot :float_subtract :float_add :float_quot :float_dup :in1 :float_add :float_subtract :float_dup :in1 :float_dup 0.0 :in1 :float_add :float_mult :float_mult 0.0 :float_subtract :float_add :float_mult 1.0 :float_dup :float_add :float_dup :float_add 1.0 :float_add :float_mult), :behaviors (36.5625 29.007999999999996 22.730499999999992 17.567999999999987 13.370499999999986 9.99999999999999 7.330499999999992 5.247999999999995 3.650499999999996 2.4479999999999973 1.5624999999999982 0.9279999999999989 0.4904999999999994 0.2079999999999996 0.05049999999999981 0.0 0.0505000000000002 0.20800000000000043 0.4905000000000008 0.9280000000000013 1.562500000000002 2.448000000000002 3.650500000000002 5.248000000000003 7.330500000000003 10.000000000000007 13.370500000000012 17.56800000000002 22.730500000000028 29.008000000000038), :errors (1.234375 2.0736639999999973 2.265391000000001 2.041215999999995 1.5766390000000001 0.9999999999999964 0.4007589999999981 0.1629440000000031 0.6574490000000011 1.0674560000000008 1.3906250000000009 1.6328960000000006 1.804529 1.9168640000000006 1.979801 2.0 1.9798009999999995 1.9168639999999997 1.8045289999999996 1.6328959999999992 1.390624999999999 1.0674559999999995 0.6574489999999997 0.16294399999999776 0.40075900000000075 1.0000000000000018 1.5766390000000001 2.041215999999997 2.265391000000001 2.0736639999999937), :total-error 43.17484099999998}


Current generation:
2
the best individual for this run is:
{:plushy (:float_subtract :float_add :float_add 1.0 :float_mult :float_quot 0.0 :float_dup 1.0 :float_dup :float_mult :float_dup :float_quot :float_add :float_add 1.0 0.0 :float_add :in1 1.0 :float_dup :float_subtract 1.0 :float_add :float_subtract 1.0 :float_add :float_mult :in1 :float_mult :float_dup :float_dup :float_quot 1.0 1.0 :float_dup 1.0 :in1 1.0 :float_quot :float_quot :float_quot 1.0 :float_mult :float_dup 0.0 :float_quot :float_add :float_mult :in1 :in1 :float_mult 0.0 :float_mult 1.0 :float_subtract 1.0 1.0 :in1 1.0 1.0 1.0 :float_subtract :float_dup :float_quot 0.0 0.0 :float_quot :float_subtract :float_subtract :float_dup :in1 :float_dup :float_mult :float_add :float_dup :float_dup :float_mult :float_mult 1.0 :float_add), :behaviors (35.328125 26.934336 20.46510899999999 15.526783999999992 11.793860999999985 8.999999999999993 6.929740999999994 5.410943999999998 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.124864 2.0303009999999997 2.0 2.0303009999999997 2.124864 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000017 4.307949000000002 5.410944000000001 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000022 20.465109000000027 26.934336000000044), :errors (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0), :total-error 0.0}

Completed run

The best individual according to the genetic program is:
{:plushy (:float_subtract :float_add :float_add 1.0 :float_mult :float_quot 0.0 :float_dup 1.0 :float_dup :float_mult :float_dup :float_quot :float_add :float_add 1.0 0.0 :float_add :in1 1.0 :float_dup :float_subtract 1.0 :float_add :float_subtract 1.0 :float_add :float_mult :in1 :float_mult :float_dup :float_dup :float_quot 1.0 1.0 :float_dup 1.0 :in1 1.0 :float_quot :float_quot :float_quot 1.0 :float_mult :float_dup 0.0 :float_quot :float_add :float_mult :in1 :in1 :float_mult 0.0 :float_mult 1.0 :float_subtract 1.0 1.0 :in1 1.0 1.0 1.0 :float_subtract :float_dup :float_quot 0.0 0.0 :float_quot :float_subtract :float_subtract :float_dup :in1 :float_dup :float_mult :float_add :float_dup :float_dup :float_mult :float_mult 1.0 :float_add), :behaviors (35.328125 26.934336 20.46510899999999 15.526783999999992 11.793860999999985 8.999999999999993 6.929740999999994 5.410943999999998 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.124864 2.0303009999999997 2.0 2.0303009999999997 2.124864 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000017 4.307949000000002 5.410944000000001 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000022 20.465109000000027 26.934336000000044), :errors (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0), :total-error 0.0}

{:total-test-error 0.0}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 2}
{:list_of_successful_generations [2]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 2.0}
{:list_of_successful_generations [2]}

