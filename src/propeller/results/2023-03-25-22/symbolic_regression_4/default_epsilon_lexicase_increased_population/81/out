Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [-12.396484375]} {:input1 [-1.4], :output1 [-4.304438783999994]} {:input1 [-1.2999999999999998], :output1 [-0.7150723729999964]} {:input1 [-1.1999999999999997], :output1 [0.6141716480000021]} {:input1 [-1.0999999999999996], :output1 [0.9637353090000004]} {:input1 [-0.9999999999999997], :output1 [1.0]} {:input1 [-0.8999999999999997], :output1 [1.0199025110000002]} {:input1 [-0.7999999999999997], :output1 [1.1162142720000003]} {:input1 [-0.6999999999999997], :output1 [1.2835933930000005]} {:input1 [-0.5999999999999998], :output1 [1.4818903040000004]} {:input1 [-0.4999999999999998], :output1 [1.6699218750000004]} {:input1 [-0.3999999999999998], :output1 [1.820025856]} {:input1 [-0.2999999999999998], :output1 [1.921167317]} {:input1 [-0.19999999999999982], :output1 [1.976191488]} {:input1 [-0.09999999999999981], :output1 [1.997002999]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.003003001]} {:input1 [0.2000000000000002], :output1 [2.024192512]} {:input1 [0.3000000000000002], :output1 [2.0832066830000002]} {:input1 [0.40000000000000024], :output1 [2.2045501440000006]} {:input1 [0.5000000000000002], :output1 [2.423828125000001]} {:input1 [0.6000000000000002], :output1 [2.798045696000001]} {:input1 [0.7000000000000002], :output1 [3.422300607000001]} {:input1 [0.8000000000000002], :output1 [4.456649728000001]} {:input1 [0.9000000000000001], :output1 [6.168743489000003]} {:input1 [1.0000000000000002], :output1 [9.00000000000001]} {:input1 [1.1000000000000003], :output1 [13.665630691000022]} {:input1 [1.2000000000000004], :output1 [21.301732352000034]} {:input1 [1.3000000000000005], :output1 [33.675926373000074]} {:input1 [1.4000000000000006], :output1 [53.48165478400014]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_dup 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [-81.84621810913086]} {:input1 [-1.7], :output1 [-58.91416949699997]} {:input1 [-1.65], :output1 [-41.58624442568944]} {:input1 [-1.5999999999999999], :output1 [-28.67582873599998]} {:input1 [-1.5499999999999998], :output1 [-19.20977698568552]} {:input1 [-1.4999999999999998], :output1 [-12.396484374999977]} {:input1 [-1.4499999999999997], :output1 [-7.597801312244117]} {:input1 [-1.3999999999999997], :output1 [-4.304438783999982]} {:input1 [-1.3499999999999996], :output1 [-2.114534665990223]} {:input1 [-1.2999999999999996], :output1 [-0.7150723729999928]} {:input1 [-1.2499999999999996], :output1 [0.13413619995117732]} {:input1 [-1.1999999999999995], :output1 [0.6141716480000032]} {:input1 [-1.1499999999999995], :output1 [0.8586810049550799]} {:input1 [-1.0999999999999994], :output1 [0.9637353090000007]} {:input1 [-1.0499999999999994], :output1 [0.9960837058964845]} {:input1 [-0.9999999999999993], :output1 [1.0]} {:input1 [-0.9499999999999993], :output1 [1.0029012621503908]} {:input1 [-0.8999999999999992], :output1 [1.0199025110000004]} {:input1 [-0.8499999999999992], :output1 [1.0574566005917976]} {:input1 [-0.7999999999999992], :output1 [1.116214272000001]} {:input1 [-0.7499999999999991], :output1 [1.1932258605957047]} {:input1 [-0.6999999999999991], :output1 [1.2835933930000016]} {:input1 [-0.649999999999999], :output1 [1.3816697590371112]} {:input1 [-0.599999999999999], :output1 [1.481890304000002]} {:input1 [-0.5499999999999989], :output1 [1.5793115552910175]} {:input1 [-0.49999999999999895], :output1 [1.6699218750000018]} {:input1 [-0.44999999999999896], :output1 [1.7507796162324234]} {:input1 [-0.39999999999999897], :output1 [1.8200258560000013]} {:input1 [-0.349999999999999], :output1 [1.876810981236329]} {:input1 [-0.299999999999999], :output1 [1.921167317000001]} {:input1 [-0.249999999999999], :output1 [1.953853607177735]} {:input1 [-0.199999999999999], :output1 [1.9761914880000002]} {:input1 [-0.14999999999999902], :output1 [1.9899091334316408]} {:input1 [-0.09999999999999902], :output1 [1.997002999]} {:input1 [-0.04999999999999902], :output1 [1.9996250468730468]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.000375046876953]} {:input1 [0.10000000000000099], :output1 [2.003003001]} {:input1 [0.150000000000001], :output1 [2.01015921031836]} {:input1 [0.200000000000001], :output1 [2.024192512000001]} {:input1 [0.250000000000001], :output1 [2.0476112365722665]} {:input1 [0.300000000000001], :output1 [2.083206683000001]} {:input1 [0.350000000000001], :output1 [2.1342186125136733]} {:input1 [0.40000000000000097], :output1 [2.2045501440000015]} {:input1 [0.45000000000000095], :output1 [2.29904297751758]} {:input1 [0.500000000000001], :output1 [2.4238281250000027]} {:input1 [0.550000000000001], :output1 [2.586772288458988]} {:input1 [0.6000000000000011], :output1 [2.798045696000005]} {:input1 [0.6500000000000011], :output1 [3.0708435847128976]} {:input1 [0.7000000000000012], :output1 [3.4223006070000097]} {:input1 [0.7500000000000012], :output1 [3.87464523315431]} {:input1 [0.8000000000000013], :output1 [4.456649728000016]} {:input1 [0.8500000000000013], :output1 [5.205440493158224]} {:input1 [0.9000000000000014], :output1 [6.168743489000028]} {:input1 [0.9500000000000014], :output1 [7.407650081599648]} {:input1 [1.0000000000000013], :output1 [9.000000000000048]} {:input1 [1.0500000000000014], :output1 [11.044490137853584]} {:input1 [1.1000000000000014], :output1 [13.665630691000079]} {:input1 [1.1500000000000015], :output1 [17.019683588795026]} {:input1 [1.2000000000000015], :output1 [21.30173235200015]} {:input1 [1.2500000000000016], :output1 [26.754047393799016]} {:input1 [1.3000000000000016], :output1 [33.675926373000244]} {:input1 [1.3500000000000016], :output1 [42.435205509740555]} {:input1 [1.4000000000000017], :output1 [53.48165478400042]} {:input1 [1.4500000000000017], :output1 [67.36248765599464]} {:input1 [1.5000000000000018], :output1 [84.74023437500072]} {:input1 [1.5500000000000018], :output1 [106.41324707943642]} {:input1 [1.6000000000000019], :output1 [133.3391247360011]} {:input1 [1.650000000000002], :output1 [166.6613665194409]} {:input1 [1.700000000000002], :output1 [207.7395834970018]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_4$error_function@658255aa", :population-size 5000}}


Current generation:
0
the best individual for this run is:
{:plushy (:float_subtract :float_quot :in1 :in1 :float_subtract :float_mult :float_quot :float_add 0.0 0.0 :float_dup :float_mult :float_add :float_mult :in1 1.0 0.0 :float_subtract 1.0 :float_add 0.0 0.0 :float_subtract 1.0 :float_dup :float_mult :float_dup :float_add :float_dup :in1 :float_mult :float_subtract 0.0 1.0 :float_add :float_mult :float_dup :float_quot :float_add :float_quot 1.0 :float_dup :float_quot :in1 :float_mult :in1 :in1 :float_quot :in1 :float_add :float_mult :float_mult :float_subtract :float_add :float_mult 1.0 :float_quot :float_dup :float_mult :in1 :float_subtract :in1 :float_mult :in1 1.0 :float_subtract 0.0 :float_dup :float_quot :float_dup :float_subtract :float_quot :float_add :float_dup), :behaviors (-14.75 -6.56 -5.889999999999999 -1.6399999999999992 -1.3099999999999987 0.0 0.1900000000000006 0.36000000000000043 0.5100000000000005 0.6400000000000003 0.7500000000000002 0.8400000000000002 0.9100000000000001 0.9600000000000001 0.99 1.0 0.99 0.96 0.9099999999999999 0.8399999999999999 1.25 1.24 1.21 3.5600000000000005 3.79 9.000000000000002 9.690000000000001 18.760000000000005 20.110000000000007 34.04000000000001), :errors (2.353515625 2.2555612160000056 5.174927627000002 2.2541716480000016 2.273735308999999 1.0 0.8299025109999996 0.7562142719999999 0.7735933930000001 0.8418903040000001 0.9199218750000002 0.9800258559999998 1.011167317 1.016191488 1.007002999 1.0 1.0130030010000002 1.064192512 1.1732066830000003 1.3645501440000007 1.1738281250000009 1.5580456960000009 2.212300607000001 0.8966497280000008 2.378743489000003 8.881784197001252E-15 3.9756306910000205 2.541732352000029 13.565926373000067 19.44165478400013), :total-error 76.80728562500028}


Current generation:
1
the best individual for this run is:
{:plushy (:float_quot :float_subtract :in1 :in1 :float_quot :float_subtract :float_mult :float_quot :float_add 0.0 0.0 :float_dup :float_mult :float_add :float_mult :in1 1.0 0.0 :float_subtract 1.0 :float_add 0.0 0.0 :float_subtract 1.0 :float_dup :float_dup :float_add :float_dup :in1 :float_subtract 0.0 1.0 :float_add :float_mult :float_dup :float_quot :float_add :float_quot 1.0 :float_dup :float_quot :in1 1.0 :float_mult :in1 :in1 :float_quot :in1 :float_add :float_mult :float_mult :float_subtract :float_add :float_mult 1.0 :float_quot :float_dup :float_mult :in1 :float_subtract :in1 :float_mult :in1 1.0 :float_subtract 0.0 :float_dup :float_quot :float_dup :float_subtract :float_quot :float_add :float_dup), :behaviors (-2.75 -2.36 -0.6899999999999995 -0.4399999999999993 -0.2099999999999993 0.0 0.1900000000000006 0.36000000000000043 0.5100000000000005 0.6400000000000003 0.7500000000000002 0.8400000000000002 0.9100000000000001 0.9600000000000001 0.99 1.0 0.99 0.96 0.9099999999999999 1.24 1.25 1.24 3.3100000000000005 3.5600000000000005 8.290000000000001 16.000000000000004 17.390000000000004 29.56000000000001 31.81000000000001 49.44000000000002), :errors (9.646484375 1.9444387839999941 0.025072372999996873 1.0541716480000014 1.1737353089999996 1.0 0.8299025109999996 0.7562142719999999 0.7735933930000001 0.8418903040000001 0.9199218750000002 0.9800258559999998 1.011167317 1.016191488 1.007002999 1.0 1.0130030010000002 1.064192512 1.1732066830000003 0.9645501440000006 1.1738281250000009 1.5580456960000009 0.11230060700000033 0.8966497280000008 2.1212565109999977 6.999999999999993 3.7243693089999823 8.258267647999975 1.8659263730000646 4.041654784000123), :total-error 58.94706362500013}


Current generation:
2
the best individual for this run is:
{:plushy (:float_subtract :float_quot :in1 :float_add :in1 :float_dup :float_mult :float_subtract :float_mult :float_quot 1.0 0.0 0.0 :float_quot :float_subtract :float_dup :float_add :float_mult :in1 1.0 :float_subtract 1.0 :float_add 0.0 :float_quot 0.0 :float_subtract 1.0 :float_mult :float_add :float_dup :in1 :float_subtract :float_subtract 0.0 1.0 :float_add :float_mult :float_dup :float_quot :float_add :float_add :float_quot :float_dup :float_quot :in1 :float_mult :in1 :in1 :float_quot :float_add :float_mult :float_mult :float_subtract :float_mult :float_add :float_mult :float_dup :float_mult :in1 :float_subtract :in1 :float_mult :float_dup :float_mult :in1 :in1 1.0 :float_subtract 0.0 :float_dup :float_add :float_quot :float_dup :float_subtract :float_quot :float_add), :behaviors (7.890625 5.769855999999999 4.265248999999997 3.2141439999999974 2.490840999999998 1.9999999999999987 1.670760999999999 1.4515839999999995 1.3058089999999996 1.207936 1.140625 1.0924159999999998 1.056169 1.028224 1.008281 1.0 1.012321 1.0615040000000002 1.1738890000000004 1.3893760000000008 1.7656250000000013 2.382976000000001 3.350089000000002 4.810304000000004 6.948721000000003 10.000000000000005 14.25688100000002 20.079424000000017 27.904969000000058 38.25881600000005), :errors (20.287109375 10.074294783999992 4.980321372999994 2.5999723519999955 1.5271056909999974 0.9999999999999987 0.6508584889999989 0.3353697279999992 0.022215606999999027 0.27395430400000054 0.5292968750000004 0.7276098560000002 0.8649983170000002 0.947967488 0.988721999 1.0 0.9906820010000001 0.9626885119999997 0.9093176829999998 0.8151741439999998 0.6582031249999996 0.41506969599999977 0.07221160699999896 0.35365427200000266 0.7799775109999993 0.9999999999999947 0.5912503089999976 1.2223083520000166 5.770957373000016 15.22283878400009), :total-error 76.57412960700007}


Current generation:
3
the best individual for this run is:
{:plushy (:float_dup 1.0 0.0 0.0 :float_subtract 1.0 :float_subtract :float_mult :float_quot :float_quot :float_mult :float_dup 0.0 1.0 0.0 :float_mult :in1 :in1 0.0 0.0 :float_quot 1.0 :float_mult :in1 :float_dup :float_mult :float_subtract 0.0 1.0 0.0 :float_add :float_mult :float_subtract :float_quot :float_dup 0.0 0.0 :float_subtract :in1 :float_subtract :float_add 0.0 :float_subtract :float_add 1.0 0.0 :float_quot 0.0 :float_quot :in1 :float_subtract :float_quot :float_add :float_mult :in1 :float_add :float_add 1.0 0.0 :float_dup 0.0 :float_dup :float_subtract :float_subtract :float_quot 1.0 0.0 0.0 :in1 1.0 0.0 1.0 1.0 :float_dup :float_subtract :float_quot :float_add :in1 :float_quot :float_mult 1.0 :float_mult :float_mult :float_quot :float_dup :float_subtract :float_dup :float_add :float_subtract :float_subtract :float_mult :float_dup :float_subtract 1.0 1.0 1.0 :in1 1.0 :float_mult :float_add :in1 :float_mult 0.0 :float_add :in1 :float_mult :float_add :float_dup :in1 0.0 :float_add :float_add :float_mult :float_mult 1.0 :float_add :float_add), :behaviors (1.203125 0.7442559999999997 0.6021489999999999 0.6525440000000002 0.8057410000000007 1.0 1.1956610000000005 1.3699840000000005 1.5127090000000003 1.6223360000000002 1.7031250000000002 1.762816 1.811069 1.8586240000000003 1.9171809999999998 2.0 2.123221 2.307904 2.582789000000001 2.987776000000001 3.5781250000000018 4.429376000000002 5.642989000000003 7.352704000000004 9.731621000000004 13.000000000000007 17.43378100000002 23.373824000000027 31.235869000000047 41.52121600000007), :errors (13.599609375 5.048694783999994 1.3172213729999962 0.03837235199999811 0.15799430899999967 0.0 0.17575848900000035 0.2537697280000002 0.22911560699999978 0.1404456959999998 0.03320312499999978 0.05720985600000006 0.11009831700000006 0.11756748799999972 0.0798219990000002 0.0 0.12021799899999985 0.28371148800000023 0.49958231700000066 0.7832258560000005 1.1542968750000009 1.6313303040000013 2.220688393000002 2.8960542720000024 3.562877511000001 3.9999999999999964 3.7681503089999993 2.0720916479999936 2.440057373000027 11.960438784000075), :total-error 58.7516056270001}


Current generation:
4
the best individual for this run is:
{:plushy (:float_quot :float_add 1.0 :float_subtract :in1 :in1 :float_dup :float_mult :float_mult :float_add :float_dup :float_dup :float_mult :float_mult :float_subtract :float_quot :float_subtract 1.0 :float_add :float_quot :in1 0.0 :float_mult :float_add), :behaviors (-12.396484375 -4.304438783999994 -0.7150723729999964 0.6141716480000021 0.9637353090000004 1.0 1.0199025110000002 1.1162142720000003 1.2835933930000005 1.4818903040000004 1.6699218750000004 1.820025856 1.921167317 1.976191488 1.997002999 2.0 2.003003001 2.024192512 2.0832066830000002 2.2045501440000006 2.423828125000001 2.798045696000001 3.422300607000001 4.456649728000001 6.168743489000003 9.00000000000001 13.665630691000022 21.301732352000034 33.675926373000074 53.48165478400014), :errors (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0), :total-error 0.0}

Completed run

The best individual according to the genetic program is:
{:plushy (:float_quot :float_add 1.0 :float_subtract :in1 :in1 :float_dup :float_mult :float_mult :float_add :float_dup :float_dup :float_mult :float_mult :float_subtract :float_quot :float_subtract 1.0 :float_add :float_quot :in1 0.0 :float_mult :float_add), :behaviors (-12.396484375 -4.304438783999994 -0.7150723729999964 0.6141716480000021 0.9637353090000004 1.0 1.0199025110000002 1.1162142720000003 1.2835933930000005 1.4818903040000004 1.6699218750000004 1.820025856 1.921167317 1.976191488 1.997002999 2.0 2.003003001 2.024192512 2.0832066830000002 2.2045501440000006 2.423828125000001 2.798045696000001 3.422300607000001 4.456649728000001 6.168743489000003 9.00000000000001 13.665630691000022 21.301732352000034 33.675926373000074 53.48165478400014), :errors (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0), :total-error 0.0}

{:total-test-error 0.0}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 4}
{:list_of_successful_generations [4]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 4.0}
{:list_of_successful_generations [4]}

