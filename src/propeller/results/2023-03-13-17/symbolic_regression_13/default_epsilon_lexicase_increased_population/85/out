Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [32.816650390625]} {:input1 [-1.4], :output1 [10.250941239295987]} {:input1 [-1.2999999999999998], :output1 [3.052941630480994]} {:input1 [-1.1999999999999997], :output1 [1.2808830402559979]} {:input1 [-1.0999999999999996], :output1 [1.012003612721]} {:input1 [-0.9999999999999997], :output1 [1.0]} {:input1 [-0.8999999999999997], :output1 [1.0053935804810001]} {:input1 [-0.7999999999999997], :output1 [1.0567125647360003]} {:input1 [-0.6999999999999997], :output1 [1.1863208592010006]} {:input1 [-0.5999999999999998], :output1 [1.3778019983360006]} {:input1 [-0.4999999999999998], :output1 [1.5861816406250007]} {:input1 [-0.3999999999999998], :output1 [1.7675442012160003]} {:input1 [-0.2999999999999998], :output1 [1.8962957994410004]} {:input1 [-0.19999999999999982], :output1 [1.9683819560959999]} {:input1 [-0.09999999999999981], :output1 [1.9960059960010001]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0040060040010004]} {:input1 [0.2000000000000002], :output1 [2.032386052096]} {:input1 [0.3000000000000002], :output1 [2.112453263441001]} {:input1 [0.40000000000000024], :output1 [2.2816413532160005]} {:input1 [0.5000000000000002], :output1 [2.6018066406250013]} {:input1 [0.6000000000000002], :output1 [3.186423566336001]} {:input1 [0.7000000000000002], :output1 [4.253149715201001]} {:input1 [0.8000000000000002], :output1 [6.226454388736003]} {:input1 [0.9000000000000001], :output1 [9.936757492481007]} {:input1 [1.0000000000000002], :output1 [17.00000000000003]} {:input1 [1.1000000000000003], :output1 [30.523585140721067]} {:input1 [1.2000000000000004], :output1 [56.38312585625612]} {:input1 [1.3000000000000005], :output1 [105.46493661448132]} {:input1 [1.4000000000000006], :output1 [197.4913155112967]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :float_dup 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [362.15773206949234]} {:input1 [-1.7], :output1 [235.44414524176082]} {:input1 [-1.65], :output1 [149.71648881506073]} {:input1 [-1.5999999999999999], :output1 [92.87636576665591]} {:input1 [-1.5499999999999998], :output1 [56.04890628688412]} {:input1 [-1.4999999999999998], :output1 [32.81665039062493]} {:input1 [-1.4499999999999997], :output1 [18.613670713296088]} {:input1 [-1.3999999999999997], :output1 [10.250941239295956]} {:input1 [-1.3499999999999996], :output1 [5.548388562845466]} {:input1 [-1.2999999999999996], :output1 [3.0529416304809884]} {:input1 [-1.2499999999999996], :output1 [1.8252764344215324]} {:input1 [-1.1999999999999995], :output1 [1.280883040255997]} {:input1 [-1.1499999999999995], :output1 [1.0736095315440224]} {:input1 [-1.0999999999999994], :output1 [1.0120036127209997]} {:input1 [-1.0499999999999994], :output1 [1.0006173058580665]} {:input1 [-0.9999999999999993], :output1 [1.0]} {:input1 [-0.9499999999999993], :output1 [1.0004137925141996]} {:input1 [-0.8999999999999992], :output1 [1.0053935804810001]} {:input1 [-0.8499999999999992], :output1 [1.02217106575336]} {:input1 [-0.7999999999999992], :output1 [1.0567125647360007]} {:input1 [-0.7499999999999991], :output1 [1.111708700656892]} {:input1 [-0.6999999999999991], :output1 [1.1863208592010015]} {:input1 [-0.649999999999999], :output1 [1.276853701461545]} {:input1 [-0.599999999999999], :output1 [1.3778019983360021]} {:input1 [-0.5499999999999989], :output1 [1.482928595279475]} {:input1 [-0.49999999999999895], :output1 [1.5861816406250022]} {:input1 [-0.44999999999999896], :output1 [1.6823648237032445]} {:input1 [-0.39999999999999897], :output1 [1.7675442012160016]} {:input1 [-0.349999999999999], :output1 [1.8392177104158218]} {:input1 [-0.299999999999999], :output1 [1.8962957994410012]} {:input1 [-0.249999999999999], :output1 [1.9389496445655832]} {:input1 [-0.199999999999999], :output1 [1.9683819560960003]} {:input1 [-0.14999999999999902], :output1 [1.986568190106309]} {:input1 [-0.09999999999999902], :output1 [1.9960059960010001]} {:input1 [-0.04999999999999902], :output1 [1.9995000937421876]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0005000937578123]} {:input1 [0.10000000000000099], :output1 [2.0040060040010004]} {:input1 [0.150000000000001], :output1 [2.0135684976531847]} {:input1 [0.200000000000001], :output1 [2.032386052096001]} {:input1 [0.250000000000001], :output1 [2.063980162143708]} {:input1 [0.300000000000001], :output1 [2.112453263441002]} {:input1 [0.350000000000001], :output1 [2.1828482355251975]} {:input1 [0.40000000000000097], :output1 [2.2816413532160027]} {:input1 [0.45000000000000095], :output1 [2.4174182688438703]} {:input1 [0.500000000000001], :output1 [2.601806640625004]} {:input1 [0.550000000000001], :output1 [2.8507715279513532]} {:input1 [0.6000000000000011], :output1 [3.186423566336008]} {:input1 [0.6500000000000011], :output1 [3.6395490041646803]} {:input1 [0.7000000000000012], :output1 [4.253149715201017]} {:input1 [0.7500000000000012], :output1 [5.087386190891292]} {:input1 [0.8000000000000013], :output1 [6.226454388736034]} {:input1 [0.8500000000000013], :output1 [7.788106636019029]} {:input1 [0.9000000000000014], :output1 [9.936757492481066]} {:input1 [0.9500000000000014], :output1 [12.901409070311171]} {:input1 [1.0000000000000013], :output1 [17.000000000000128]} {:input1 [1.0500000000000014], :output1 [22.67224303368639]} {:input1 [1.1000000000000014], :output1 [30.523585140721245]} {:input1 [1.1500000000000015], :output1 [41.38361986690375]} {:input1 [1.2000000000000015], :output1 [56.383125856256555]} {:input1 [1.2500000000000016], :output1 [77.0549212098129]} {:input1 [1.3000000000000016], :output1 [105.46493661448204]} {:input1 [1.3500000000000016], :output1 [144.38134926576885]} {:input1 [1.4000000000000017], :output1 [197.4913155112981]} {:input1 [1.4500000000000017], :output1 [269.676826586252]} {:input1 [1.5000000000000018], :output1 [367.3635253906292]} {:input1 [1.5500000000000018], :output1 [498.95900254737404]} {:input1 [1.6000000000000019], :output1 [675.4001796546636]} {:input1 [1.650000000000002], :output1 [910.8329325955868]} {:input1 [1.700000000000002], :output1 [1223.4511572177753]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_13$error_function@1b1f5012", :population-size 2500}}


Current generation:
0
the best individual for this run is:
{:plushy (:in1 :float_subtract :float_dup :float_mult :float_quot :float_dup :float_mult :in1 :float_add :float_mult :float_add :float_dup :float_mult :float_mult :float_mult :float_mult :float_add :float_subtract :float_subtract :float_dup :float_add), :behaviors (25.3828125 11.92282111999999 4.842894419999991 1.5263539199999943 0.2651376199999982 0.0 0.11897442000000065 0.30482432000000037 0.42301602000000016 0.4425523199999999 0.38281249999999983 0.2803507199999998 0.1704112199999998 0.07872511999999986 0.019960019999999922 0.0 0.020040020000000082 0.08128512000000018 0.18985122000000026 0.36227072000000055 0.6328125000000008 1.064632320000001 1.7675760200000015 2.9262643200000023 4.842894420000005 8.000000000000007 13.149217620000016 21.432913920000047 34.54633442000008 54.94874112000013), :errors (7.433837890625 1.6718798807040027 1.7899527895189964 0.2454708797439964 0.7468659927210017 1.0 0.8864191604809994 0.7518882447359999 0.7633048392010005 0.9352496783360007 1.2033691406250009 1.4871934812160006 1.7258845794410005 1.889656836096 1.9760459760010003 2.0 1.9839659840010002 1.951100932096 1.9226020434410007 1.9193706332159999 1.9689941406250004 2.1217912463360005 2.4855736952009995 3.3001900687360006 5.093863072481002 9.000000000000021 17.37436752072105 34.950211936256075 70.91860219448124 142.54257439129657), :total-error 324.04022722833395}


Current generation:
1
the best individual for this run is:
{:plushy (:in1 :float_subtract :float_dup :float_mult :float_quot :float_dup :float_mult :in1 1.0 :float_add :float_mult :float_add :float_dup :float_mult :float_mult :float_mult :float_add :float_subtract :float_subtract :float_add :float_dup :float_add), :behaviors (12.814453125 4.722524979199995 1.4683152977999965 0.3439853567999985 0.0428717761999996 0.0 0.008609344200000027 0.013421772800000002 0.010376641799999987 0.005374771199999989 0.0019531249999999948 4.718591999999984E-4 6.429779999999976E-5 3.2767999999999772E-6 0.0 0.0 0.0 7.372800000000065E-6 2.2176180000000128E-4 0.0025690112000000143 0.01757812500000007 0.08599633920000027 0.3332054978000008 1.0871635968000017 3.1079732562000046 8.000000000000014 18.906453304200046 41.62222817280013 86.30431028180031 170.01089925120058), :errors (20.002197265625 5.528416260095992 1.5846263326809977 0.9368976834559994 0.9691318365210003 1.0 0.9967842362810001 1.0432907919360004 1.1759442174010006 1.3724272271360005 1.5842285156250007 1.7670723420160004 1.8962315016410003 1.9683786792959999 1.9960059960010001 2.0 2.0040060040010004 2.0323786792960004 2.1122315016410007 2.2790723420160006 2.5842285156250013 3.100427227136001 3.9199442174010004 5.139290791936001 6.8287842362810025 9.000000000000014 11.617131836521022 14.760897683455994 19.160626332681005 27.48041626009612), :total-error 157.84106851379917}


Current generation:
2
the best individual for this run is:
{:plushy (:in1 :float_add :float_quot :float_add :float_eq :in1 :float_dup :float_mult :float_mult :in1 :float_dup 0.0 :float_dup :float_quot :float_dup :float_add :float_add :float_add :float_mult :float_mult :float_add :float_eq :float_add :float_dup :float_dup 1.0 :float_subtract :float_mult :float_dup 0.0 :float_mult :float_subtract 1.0 :float_mult :float_add :float_quot :float_add :float_subtract :float_subtract :float_mult :float_add :float_mult :float_add :float_eq :float_subtract), :behaviors (11.390625 4.818903039999995 1.7376512399999966 0.4777574399999981 0.07086243999999939 0.0 0.021257640000000105 0.041943040000000015 0.04235363999999997 0.02985983999999997 0.015625 0.005898239999999985 0.0014288399999999937 1.6383999999999843E-4 3.240000000000057E-6 0.0 4.839999999999879E-6 3.686400000000034E-4 0.004928040000000022 0.03211264000000014 0.14062500000000036 0.477757440000001 1.3600224400000023 3.397386240000004 7.67400804000001 16.00000000000002 31.250336040000064 57.80865024000013 102.13527844000028 173.4805094400005), :errors (21.426025390625 5.432038199295992 1.3152903904809976 0.8031256002559998 0.9411411727210005 1.0 0.9841359404810001 1.0147695247360002 1.1439672192010006 1.3479421583360005 1.5705566406250007 1.7616459612160003 1.8948669594410004 1.968218116096 1.996002756001 2.0 2.0040011640010005 2.032017412096 2.1075252234410007 2.2495287132160002 2.461181640625001 2.7086661263360003 2.8931272752009987 2.829068148735999 2.262749452480997 1.000000000000007 0.726750899278997 1.4255243837440048 3.3296581744810396 24.0108060712962), :total-error 98.64033071444526}


Current generation:
3
the best individual for this run is:
{:plushy (:in1 :float_add :float_eq :in1 :float_mult :in1 :float_mult :in1 :float_dup :float_quot :float_add :float_mult :float_dup :float_mult :float_add :float_eq :float_dup :float_dup :float_add :float_dup :float_subtract :float_add :float_dup :float_mult :float_subtract :float_mult :float_mult :float_quot :float_add :float_subtract :float_subtract :float_add :float_mult :float_add :float_eq), :behaviors (31.816650390625 9.250941239295985 2.052941630480994 0.2808830402559979 0.012003612720999835 0.0 0.005393580481000064 0.05671256473600025 0.18632085920100053 0.37780199833600053 0.5861816406250007 0.7675442012160002 0.8962957994410002 0.9683819560959999 0.996005996001 1.0 1.0040060040010004 1.0323860520960002 1.1124532634410005 1.2816413532160005 1.601806640625001 2.186423566336001 3.2531497152010016 5.226454388736003 8.936757492481007 16.00000000000003 29.523585140721067 55.38312585625613 104.4649366144813 196.4913155112967), :errors (1.0 1.0000000000000018 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0000000000000004 1.0 1.0000000000000002 1.0 0.9999999999999996 1.0 1.0 1.0 1.0 0.9999999999999929 1.0000000000000142 1.0), :total-error 30.000000000000007}


Current generation:
4
the best individual for this run is:
{:plushy (:in1 :float_add :float_eq :in1 :float_mult :in1 :float_mult :in1 :float_dup :float_quot :float_add :float_mult :float_dup :float_mult :float_add :float_eq :float_dup :float_dup :float_add :float_dup :float_subtract :float_add :float_dup :float_mult :float_subtract :float_mult :float_mult :float_quot :float_add :float_subtract :float_mult :float_subtract :float_add :float_mult 0.0 :float_add :float_eq), :behaviors (31.816650390625 9.250941239295985 2.052941630480994 0.2808830402559979 0.012003612720999835 0.0 0.005393580481000064 0.05671256473600025 0.18632085920100053 0.37780199833600053 0.5861816406250007 0.7675442012160002 0.8962957994410002 0.9683819560959999 0.996005996001 1.0 1.0040060040010004 1.0323860520960002 1.1124532634410005 1.2816413532160005 1.601806640625001 2.186423566336001 3.2531497152010016 5.226454388736003 8.936757492481007 16.00000000000003 29.523585140721067 55.38312585625613 104.4649366144813 196.4913155112967), :errors (1.0 1.0000000000000018 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0000000000000004 1.0 1.0000000000000002 1.0 0.9999999999999996 1.0 1.0 1.0 1.0 0.9999999999999929 1.0000000000000142 1.0), :total-error 30.000000000000007}


Current generation:
5
the best individual for this run is:
{:plushy (:in1 :float_eq :in1 :float_mult :in1 :float_mult :in1 :float_dup :float_quot :float_add :float_mult :float_dup :float_mult :float_eq :float_dup 0.0 :float_dup :float_add :float_dup :float_add :float_dup :float_mult :float_subtract :float_mult :float_mult :float_quot 1.0 :float_add :float_eq :float_subtract :float_add :float_mult :float_subtract :float_eq), :behaviors (32.816650390625 10.250941239295985 3.052941630480994 1.2808830402559979 1.012003612721 1.0 1.0053935804810001 1.0567125647360003 1.1863208592010006 1.3778019983360006 1.5861816406250007 1.7675442012160003 1.8962957994410004 1.9683819560959999 1.9960059960010001 2.0 2.0040060040010004 2.032386052096 2.1124532634410005 2.2816413532160005 2.601806640625001 3.186423566336001 4.253149715201001 6.226454388736003 9.936757492481007 17.00000000000003 30.523585140721067 56.38312585625613 105.4649366144813 197.4913155112967), :errors (0.0 1.7763568394002505E-15 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 7.105427357601002E-15 1.4210854715202004E-14 0.0), :total-error 2.398081733190338E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (:in1 :float_eq :in1 :float_mult :in1 :float_mult :in1 :float_dup :float_quot :float_add :float_mult :float_dup :float_mult :float_eq :float_dup 0.0 :float_dup :float_add :float_dup :float_add :float_dup :float_mult :float_subtract :float_mult :float_mult :float_quot 1.0 :float_add :float_eq :float_subtract :float_add :float_mult :float_subtract :float_eq), :behaviors (32.816650390625 10.250941239295985 3.052941630480994 1.2808830402559979 1.012003612721 1.0 1.0053935804810001 1.0567125647360003 1.1863208592010006 1.3778019983360006 1.5861816406250007 1.7675442012160003 1.8962957994410004 1.9683819560959999 1.9960059960010001 2.0 2.0040060040010004 2.032386052096 2.1124532634410005 2.2816413532160005 2.601806640625001 3.186423566336001 4.253149715201001 6.226454388736003 9.936757492481007 17.00000000000003 30.523585140721067 56.38312585625613 105.4649366144813 197.4913155112967), :errors (0.0 1.7763568394002505E-15 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 0.0 0.0 0.0 0.0 7.105427357601002E-15 1.4210854715202004E-14 0.0), :total-error 2.398081733190338E-14}

{:total-test-error 2.169375790117556E-13}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 5}
{:list_of_successful_generations [5]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 5.0}
{:list_of_successful_generations [5]}

