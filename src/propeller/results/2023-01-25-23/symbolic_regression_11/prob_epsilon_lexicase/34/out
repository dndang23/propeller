Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 #object[propeller.problems.symbolic_regression_11$error_function 0x720653c2 "propeller.problems.symbolic_regression_11$error_function@720653c2"], :isDefault false, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad-prob 0.05, :adjusted-plushy-mutation-prob 0.95}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$multiple_evaluation_function@69ce2f62", :population-size 500}}


Current generation:
0
the best individual for this run is:
{:plushy ([:float_add 0.7294525395439406] [0.0 0.05608152854799853] [:in1 0.8935028358622525] [1.0 0.846325208664736] [0.0 0.5665769488294565] [close 0.4665132669378398] [:exec_if 0.9684140118040101] [:float_quot 0.7970197571450645] [:in1 0.375195682846846] [:in1 0.5962623684211357] [:exec_dup 0.8868912239148347] [:float_quot 0.3909345701460204] [0.0 0.7039388557139459] [:float_eq 0.6021845002319024] [:float_add 0.4556996838260201] [0.0 0.19808839109924548] [0.0 0.9364329699802134] [:float_add 0.6648911861163457] [:float_eq 0.7224807725619943] [1.0 0.834226434000049] [:float_quot 0.9389856603173924] [:float_add 0.4863895749478715] [:exec_dup 0.14724278507083255] [:float_eq 0.05060651883904732] [close 0.2755284036861425] [:float_mult 0.756369813395214] [:float_eq 0.41714435404941785] [:in1 0.3539411061156358] [:exec_if 0.47904438702302543] [:float_eq 0.8500497142039352] [:float_add 0.25170753173579785] [:float_subtract 0.41403350286999985] [:float_add 0.7642164780319611] [:float_eq 0.751930282129507] [:float_mult 0.42548116137446756] [:float_mult 0.35746620154804143] [:float_quot 0.6802887717360652] [:exec_if 0.4000120497313796] [:in1 0.8338074573089248] [:exec_dup 0.8552695322794769] [:float_eq 0.5361416389278646] [:exec_if 0.3139669425790308] [:float_add 0.7447275712708628] [:float_quot 0.6908201250475758] [:float_subtract 0.9813396489430655] [:in1 0.5084559519211267] [close 0.4161951288993708] [:float_add 0.24128754428318355] [:float_quot 0.8974180538980696] [:exec_dup 0.29922808023699854] [:float_subtract 0.012648948633143364] [:float_quot 0.02176880691017602] [0.0 0.7429323671155528] [close 0.6848312287558702] [:float_mult 0.22862950593770393] [:in1 0.12582067501982364] [:float_eq 0.7038030110090783] [:exec_dup 0.5307114375342822] [:float_quot 0.21950615280008723] [:in1 0.04941940101808362] [:float_add 0.4272446287300058] [:float_mult 0.7951716779098387] [:float_quot 0.3505150313533002] [0.0 0.007448441685235507] [:float_quot 0.7630778517292216] [:exec_dup 0.5181069477332887] [1.0 0.9051905545450265] [:in1 0.4426349387860983] [:exec_dup 0.8004788999595706] [1.0 0.24362798666298402] [:in1 0.24290592321275917] [:exec_dup 0.9864255472759892] [0.0 0.5712301674050084] [:exec_dup 0.9666306179162579] [:float_quot 0.9626211379277186] [:float_subtract 0.6596134000123705] [close 0.09229295767290835] [1.0 0.5810636352749762] [1.0 0.4160696749703132] [1.0 0.5975972327400505] [:float_add 0.9410310970732259] [0.0 0.164093278180656] [:exec_dup 0.41849774172487786]), :behaviors (15.0 15.0 15.0 15.0 15.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 15.0 15.0 15.0 15.0 15.0), :errors (20.328125 11.934335999999998 5.465108999999991 0.5267839999999921 3.2061390000000145 7.999999999999993 5.929740999999994 4.410943999999998 3.307948999999997 2.515455999999998 1.9531249999999991 1.5608959999999996 1.2950289999999995 1.124864 1.0303009999999997 1.0 1.0303009999999997 1.124864 1.2950290000000004 1.5608960000000005 1.9531250000000009 2.5154560000000017 3.3079490000000016 4.410944000000001 5.929741000000003 5.999999999999995 3.206138999999988 0.5267840000000223 5.465109000000027 11.934336000000044), :min-program-boolean-plushy ([:float_add true] [0.0 true] [:in1 true] [1.0 true] [0.0 true] [close true] [:exec_if true] [:float_quot true] [:in1 false] [:in1 false] [:exec_dup true] [:float_quot true] [0.0 true] [:float_eq false] [:float_add false] [0.0 false] [0.0 true] [:float_add true] [:float_eq true] [1.0 true] [:float_quot true] [:float_add false] [:exec_dup false] [:float_eq false] [close false] [:float_mult false] [:float_eq false] [:in1 true] [:exec_if true] [:float_eq true] [:float_add true] [:float_subtract false] [:float_add false] [:float_eq false] [:float_mult true] [:float_mult false] [:float_quot false] [:exec_if false] [:in1 true] [:exec_dup true] [:float_eq false] [:exec_if false] [:float_add true] [:float_quot true] [:float_subtract true] [:in1 true] [close true] [:float_add false] [:float_quot true] [:exec_dup true] [:float_subtract false] [:float_quot false] [0.0 true] [close true] [:float_mult false] [:in1 false] [:float_eq true] [:exec_dup false] [:float_quot false] [:in1 false] [:float_add false] [:float_mult true] [:float_quot false] [0.0 false] [:float_quot false] [:exec_dup true] [1.0 true] [:in1 true] [:exec_dup true] [1.0 false] [:in1 false] [:exec_dup true] [0.0 false] [:exec_dup true] [:float_quot true] [:float_subtract true] [close false] [1.0 false] [1.0 true] [1.0 false] [:float_add true] [0.0 false] [:exec_dup true]), :program (:float_add 0.0 :in1 1.0 0.0 :exec_if (:float_quot :exec_dup (:float_quot 0.0 0.0 :float_add :float_eq 1.0 :float_quot :in1 :exec_if (:float_eq :float_add :float_mult :in1 :exec_dup (:float_add :float_quot :float_subtract :in1) :float_quot :exec_dup (0.0) :float_eq :float_mult :exec_dup (1.0 :in1 :exec_dup (:exec_dup (:exec_dup (:float_quot :float_subtract 1.0 :float_add :exec_dup ()))))) ())) ()), :total-error 123.84947100000008}


Current generation:
1
the best individual for this run is:
{:plushy ([:exec_if 0.45563335917108655] [:exec_dup 0.19843958597140016] [close 0.8535978782494127] [:exec_dup 0.7507012643640552] [:exec_if 0.8328814477504094] [close 1] [:exec_dup 0.887645931819695] [:float_subtract 0.34719426227346745] [:float_subtract 0.49514373328057987] [1.0 0.8854844626888911] [:in1 0.24411749623821374] [:float_subtract 0.36310285625914845] [:exec_if 0.8793458148392659] [:float_subtract 1] [1.0 0.029820309731623723] [:float_subtract 1] [:float_eq 0.7185505810119841] [:float_quot 1] [:exec_dup 0.6218320325845945] [:float_mult 0.986671281961222] [close 1] [:float_mult 0.21885435527849567] [:float_subtract 0] [close 0.010539182703785788] [0.0 0.18476955765566822] [:exec_if 0.0968935984087087] [:float_mult 0.46262550492040383] [close 0] [:float_mult 0.9462628791028886] [:in1 0.9491252090040052] [:float_mult 1] [:float_subtract 1] [:float_quot 0.7862792381010646] [0.0 0.37607682068268317] [:exec_dup 0.7243877637792309] [:float_quot 0.1441101963759362] [:exec_if 0.46251685660226116] [close 0.29652656845769765] [:exec_dup 1] [close 1] [:float_add 0.8682204898296548] [0.0 0] [:exec_dup 0.14919517755069922] [close 0.8624945700408153] [:float_mult 0.9109426935756124] [:float_subtract 0.8154820393286235] [close 1] [:exec_dup 1] [:float_subtract 0.9873760873236779] [:float_quot 0.10780420290571135] [:float_subtract 0] [0.0 0.1576985508053131] [:float_quot 0.017648830966146473] [:exec_dup 0.37497250501247886] [1.0 0.6439503371372901] [:float_eq 0] [close 0.1174258293140103] [:in1 0.036108959477073876] [:float_add 0.9690023920468902] [:exec_dup 0.18707803465847805] [:float_quot 0.7025368060299246] [close 0] [:exec_dup 0.7195989815614328] [:float_subtract 0]), :behaviors (15.96875 12.093439999999998 9.111129999999996 6.8595199999999945 5.196709999999994 3.999999999999999 3.1646899999999976 2.602879999999999 2.2422699999999995 2.0249599999999996 1.9062499999999998 1.85344 1.84463 1.86752 1.9182100000000002 2.0 2.1221900000000002 2.2988800000000005 2.5477700000000008 2.888960000000001 3.343750000000001 3.933440000000001 4.678130000000001 5.595520000000002 6.699710000000002 8.000000000000004 9.499690000000005 11.194880000000007 13.07327000000001 15.112960000000012), :errors (19.359375 14.840896 11.353978999999995 8.667263999999998 6.597150999999991 4.999999999999994 3.765050999999996 2.808063999999999 2.0656789999999976 1.4904959999999985 1.0468749999999993 0.7074559999999996 0.45039899999999955 0.257344 0.1120909999999995 0.0 0.09188900000000055 0.1740160000000004 0.2527410000000003 0.32806400000000036 0.390625 0.41798399999999925 0.37018099999999965 0.18457600000000163 0.23003100000000032 1.0000000000000018 2.2941710000000075 4.331904000000016 7.391839000000017 11.821376000000033), :min-program-boolean-plushy ([:exec_if false] [:exec_dup false] [close false] [:exec_dup true] [:exec_if true] [close true] [:exec_dup true] [:float_subtract false] [:float_subtract false] [1.0 true] [:in1 true] [:float_subtract false] [:exec_if true] [:float_subtract true] [1.0 false] [:float_subtract true] [:float_eq false] [:float_quot true] [:exec_dup true] [:float_mult true] [close true] [:float_mult false] [:float_subtract false] [close false] [0.0 false] [:exec_if false] [:float_mult false] [close false] [:float_mult false] [:in1 true] [:float_mult true] [:float_subtract true] [:float_quot true] [0.0 false] [:exec_dup false] [:float_quot false] [:exec_if false] [close false] [:exec_dup true] [close true] [:float_add false] [0.0 false] [:exec_dup false] [close true] [:float_mult true] [:float_subtract true] [close true] [:exec_dup true] [:float_subtract true] [:float_quot true] [:float_subtract false] [0.0 false] [:float_quot false] [:exec_dup false] [1.0 true] [:float_eq false] [close false] [:in1 false] [:float_add true] [:exec_dup true] [:float_quot true] [close false] [:exec_dup false] [:float_subtract false]), :program (:exec_dup (:exec_if () (:exec_dup (1.0 :in1 :exec_if (:float_subtract :float_subtract :float_quot :exec_dup (:float_mult) :in1 :float_mult :float_subtract :float_quot :exec_dup ()) (:float_mult :float_subtract) :exec_dup (:float_subtract :float_quot 1.0 :float_add :exec_dup (:float_quot)))))), :total-error 107.80151700000005}


Current generation:
2
the best individual for this run is:
{:plushy ([:exec_if 0.48054662814412324] [:exec_dup 0] [close 0.6732392337694084] [:exec_dup 0.9613106235455577] [:exec_if 1] [close 1] [:exec_dup 1] [:float_subtract 0.37196565189665115] [:float_subtract 0.3795110157923893] [1.0 0.8212800932334618] [:in1 0.4319505343824256] [:float_subtract 0.11258904953403331] [:exec_if 1] [:float_subtract 1] [1.0 0.003084887787432544] [:float_subtract 1] [:float_eq 0.4135397723196949] [:float_quot 1] [:exec_dup 0.6957575413303928] [:float_mult 1] [close 1] [:float_mult 0] [:float_subtract 0] [close 0] [0.0 0] [:exec_if 0] [:float_mult 0.056385874410993575] [close 0] [:float_mult 0.9435644059475317] [:in1 0.8929437978387593] [:float_mult 1] [:float_subtract 1] [:float_quot 0.687832799528398] [0.0 0] [:exec_dup 0.6461943335884579] [:float_quot 0.5597873510663309] [:exec_if 0.12933116236127068] [close 0.2200001499250443] [:exec_dup 1] [close 1] [:float_add 0.5399245498693688] [0.0 0.03220992909235307] [:exec_dup 0.0892838810712307] [close 1] [:float_mult 1] [:float_subtract 1] [close 1] [:exec_dup 1] [:float_subtract 1] [:float_quot 0.26640931964744563] [:float_subtract 0.15098878941055022] [0.0 0] [:float_quot 0.0035583991761664324] [:exec_dup 0.42674950699097275] [1.0 0.8917852459597293] [:float_eq 0.08778574437313236] [close 0] [:in1 0] [:float_add 0.9744798570401887] [:exec_dup 0.6947394422827577] [:float_quot 0.5705522473251541] [close 0] [:exec_dup 0.7488262337755969] [:float_subtract 0]), :behaviors (30.21875 24.301439999999996 19.48512999999999 15.59551999999999 12.478709999999989 9.999999999999993 8.042689999999993 6.506879999999996 5.308269999999997 4.376959999999998 3.6562499999999982 3.101439999999999 2.678629999999999 2.3635199999999994 2.1402099999999997 2.0 1.9401899999999999 1.9628800000000002 2.0737700000000006 2.2809600000000003 2.593750000000001 3.021440000000001 3.5721300000000014 4.251520000000001 5.061710000000001 6.000000000000002 7.057690000000004 8.218880000000006 9.459270000000007 10.744960000000008), :errors (5.109375 2.6328960000000023 0.9799790000000002 0.06873599999999769 0.6848490000000034 1.0 1.1129489999999995 1.0959359999999982 1.0003209999999996 0.8615039999999996 0.7031249999999991 0.5405439999999992 0.38360099999999964 0.2386559999999993 0.10990900000000003 0.0 0.09011099999999983 0.1619839999999999 0.22125899999999987 0.2799360000000002 0.359375 0.4940160000000007 0.7358190000000002 1.1594239999999996 1.868031000000002 3.0000000000000036 4.736171000000009 7.307904000000017 11.00583900000002 16.18937600000004), :min-program-boolean-plushy ([:exec_if false] [:exec_dup false] [close true] [:exec_dup true] [:exec_if true] [close true] [:exec_dup true] [:float_subtract false] [:float_subtract false] [1.0 true] [:in1 true] [:float_subtract false] [:exec_if true] [:float_subtract true] [1.0 false] [:float_subtract true] [:float_eq true] [:float_quot true] [:exec_dup true] [:float_mult true] [close true] [:float_mult false] [:float_subtract false] [close false] [0.0 false] [:exec_if false] [:float_mult false] [close false] [:float_mult true] [:in1 true] [:float_mult true] [:float_subtract true] [:float_quot true] [0.0 false] [:exec_dup false] [:float_quot false] [:exec_if false] [close true] [:exec_dup true] [close true] [:float_add true] [0.0 false] [:exec_dup false] [close true] [:float_mult true] [:float_subtract true] [close true] [:exec_dup true] [:float_subtract true] [:float_quot false] [:float_subtract false] [0.0 false] [:float_quot false] [:exec_dup true] [1.0 true] [:float_eq false] [close false] [:in1 false] [:float_add true] [:exec_dup true] [:float_quot false] [close false] [:exec_dup true] [:float_subtract false]), :program (:exec_dup (:exec_if () (:exec_dup (1.0 :in1 :exec_if (:float_subtract :float_subtract :float_eq :float_quot :exec_dup (:float_mult) :float_mult :in1 :float_mult :float_subtract :float_quot) (:exec_dup () :float_add) :float_mult :float_subtract) :exec_dup (:float_subtract :exec_dup (1.0 :float_add :exec_dup (:exec_dup ())))))), :total-error 64.13162500000008}


Current generation:
3
the best individual for this run is:
{:plushy ([:exec_if 0.251487910994291] [:exec_dup 0] [close 1] [:exec_dup 1] [:exec_if 1] [close 1] [:exec_dup 1] [:float_subtract 0.22890669897617832] [:float_subtract 0.38853400746752825] [1.0 1] [:in1 0.4423687898028156] [:float_subtract 0] [:exec_if 1] [:float_subtract 1] [1.0 0] [:float_subtract 1] [:float_eq 0.7945116525438485] [:float_quot 1] [:exec_dup 1] [:float_mult 1] [close 0.821607625813568] [:float_mult 0] [:float_subtract 0] [close 0] [0.0 0] [:exec_if 0] [:float_mult 0] [close 0.1214066295996456] [:float_mult 1] [:in1 1] [:float_mult 0.8527654138162817] [:float_subtract 1] [:float_quot 0.9480540386672294] [0.0 0] [:exec_dup 0.4806179010370784] [:float_quot 0.6367845144888729] [:exec_if 0] [close 0.17673408601312193] [:exec_dup 1] [close 1] [:float_add 0.8278943131186167] [0.0 0.07779962588909556] [:exec_dup 0] [close 0.9964224261023038] [:float_mult 1] [:float_subtract 1] [close 1] [:exec_dup 1] [:float_subtract 1] [:float_quot 0.219625513945037] [:float_subtract 0.16715539592747736] [0.0 0] [:float_quot 0] [:exec_dup 0.7140316575759422] [1.0 1] [:float_eq 0] [close 0] [:in1 0] [:float_add 1] [:exec_dup 1] [:float_quot 0.5121780467611001] [close 0] [:exec_dup 0.6407319964582903] [:float_subtract 0]), :behaviors (36.328125 27.934335999999995 21.46510899999999 16.526783999999985 12.793860999999987 9.999999999999991 7.929740999999995 6.410943999999995 5.307948999999997 4.515455999999999 3.953124999999999 3.560895999999999 3.2950289999999995 3.1248639999999996 3.0303009999999997 3.0 3.030301 3.1248640000000005 3.2950290000000004 3.560896000000001 3.953125000000001 4.515456000000001 5.307949000000001 6.410944000000002 7.929741000000003 10.000000000000005 12.793861000000012 16.52678400000002 21.46510900000003 27.93433600000004), :errors (1.0 0.9999999999999964 1.0 0.9999999999999929 1.0000000000000018 0.9999999999999982 1.0000000000000009 0.9999999999999973 1.0 1.0000000000000004 1.0 0.9999999999999996 1.0 0.9999999999999996 1.0 1.0 1.0000000000000004 1.0000000000000004 1.0 1.0000000000000004 1.0 0.9999999999999996 0.9999999999999991 1.0000000000000018 1.0 1.0 1.0 0.9999999999999982 1.0000000000000036 0.9999999999999964), :min-program-boolean-plushy ([:exec_if true] [:exec_dup false] [close true] [:exec_dup true] [:exec_if true] [close true] [:exec_dup true] [:float_subtract false] [:float_subtract true] [1.0 true] [:in1 false] [:float_subtract false] [:exec_if true] [:float_subtract true] [1.0 false] [:float_subtract true] [:float_eq false] [:float_quot true] [:exec_dup true] [:float_mult true] [close false] [:float_mult false] [:float_subtract false] [close false] [0.0 false] [:exec_if false] [:float_mult false] [close false] [:float_mult true] [:in1 true] [:float_mult true] [:float_subtract true] [:float_quot true] [0.0 false] [:exec_dup false] [:float_quot true] [:exec_if false] [close true] [:exec_dup true] [close true] [:float_add false] [0.0 false] [:exec_dup false] [close true] [:float_mult true] [:float_subtract true] [close true] [:exec_dup true] [:float_subtract true] [:float_quot false] [:float_subtract false] [0.0 false] [:float_quot false] [:exec_dup true] [1.0 true] [:float_eq false] [close false] [:in1 false] [:float_add true] [:exec_dup true] [:float_quot false] [close false] [:exec_dup false] [:float_subtract false]), :program (:exec_if () (:exec_dup (:exec_if () (:exec_dup (:float_subtract 1.0 :exec_if (:float_subtract :float_subtract :float_quot :exec_dup (:float_mult :float_mult :in1 :float_mult :float_subtract :float_quot :float_quot) :exec_dup ()) (:float_mult :float_subtract) :exec_dup (:float_subtract :exec_dup (1.0 :float_add :exec_dup ()))))))), :total-error 29.999999999999993}


Current generation:
4
the best individual for this run is:
{:plushy ([:exec_if 0.2521846654436482] [:exec_dup 0] [close 1] [:exec_dup 1] [:exec_if 1] [close 0.9801457203156461] [:exec_dup 1] [:float_subtract 0] [:float_subtract 0.6243878498585292] [1.0 1] [:in1 0.05531838050965732] [:float_subtract 0.19772439934209096] [:exec_if 1] [:float_subtract 1] [1.0 0] [:float_subtract 0.8351040859962702] [:float_eq 0.5464333818009919] [:float_quot 1] [:exec_dup 1] [:float_mult 1] [close 0.537765668579534] [:float_mult 0] [:float_subtract 0] [close 0] [0.0 0] [:exec_if 0.009811366542826383] [:float_mult 0] [close 0] [:float_mult 1] [:in1 0.8876986514202876] [:float_mult 1] [:float_subtract 1] [:float_quot 1] [0.0 0] [:exec_dup 0.23124064617975848] [:float_quot 0.7729324983403201] [:exec_if 0] [close 0.5286593383632643] [:exec_dup 1] [close 1] [:float_add 0.9769909328164379] [0.0 0.011731371306067745] [:exec_dup 0] [close 1] [:float_mult 1] [:float_subtract 1] [close 1] [:exec_dup 0.933913277460866] [:float_subtract 1] [:float_quot 0] [:float_subtract 0.07752689355517439] [0.0 0] [:float_quot 0.05523775435378686] [:exec_dup 1] [1.0 1] [:float_eq 0] [close 0] [:in1 0] [:float_add 0.9044320800378212] [:exec_dup 1] [:float_quot 0.14658326927458482] [close 0] [:exec_dup 0.3922806001858595] [:float_subtract 0]), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999987 8.999999999999991 6.929740999999995 5.410943999999995 4.307948999999997 3.515455999999998 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.560896000000001 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000002 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 1.7763568394002505E-15 1.7763568394002505E-15 8.881784197001252E-16 2.6645352591003757E-15 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 8.881784197001252E-16 1.7763568394002505E-15 0.0 0.0 0.0 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :min-program-boolean-plushy ([:exec_if false] [:exec_dup false] [close true] [:exec_dup true] [:exec_if true] [close true] [:exec_dup true] [:float_subtract false] [:float_subtract false] [1.0 true] [:in1 false] [:float_subtract false] [:exec_if true] [:float_subtract true] [1.0 false] [:float_subtract true] [:float_eq true] [:float_quot true] [:exec_dup true] [:float_mult true] [close false] [:float_mult false] [:float_subtract false] [close false] [0.0 false] [:exec_if false] [:float_mult false] [close false] [:float_mult true] [:in1 true] [:float_mult true] [:float_subtract true] [:float_quot true] [0.0 false] [:exec_dup false] [:float_quot false] [:exec_if false] [close false] [:exec_dup true] [close true] [:float_add true] [0.0 false] [:exec_dup false] [close true] [:float_mult true] [:float_subtract true] [close true] [:exec_dup true] [:float_subtract true] [:float_quot false] [:float_subtract false] [0.0 false] [:float_quot false] [:exec_dup true] [1.0 true] [:float_eq false] [close false] [:in1 false] [:float_add true] [:exec_dup true] [:float_quot false] [close false] [:exec_dup false] [:float_subtract false]), :program (:exec_dup (:exec_if () (:exec_dup (1.0 :exec_if (:float_subtract :float_subtract :float_eq :float_quot :exec_dup (:float_mult :float_mult :in1 :float_mult :float_subtract :float_quot :exec_dup () :float_add) :float_mult :float_subtract) (:exec_dup (:float_subtract :exec_dup (1.0 :float_add :exec_dup ()))))))), :total-error 3.197442310920451E-14}

Completed run

The best individual according to the genetic program is:
{:plushy ([:exec_if 0.2521846654436482] [:exec_dup 0] [close 1] [:exec_dup 1] [:exec_if 1] [close 0.9801457203156461] [:exec_dup 1] [:float_subtract 0] [:float_subtract 0.6243878498585292] [1.0 1] [:in1 0.05531838050965732] [:float_subtract 0.19772439934209096] [:exec_if 1] [:float_subtract 1] [1.0 0] [:float_subtract 0.8351040859962702] [:float_eq 0.5464333818009919] [:float_quot 1] [:exec_dup 1] [:float_mult 1] [close 0.537765668579534] [:float_mult 0] [:float_subtract 0] [close 0] [0.0 0] [:exec_if 0.009811366542826383] [:float_mult 0] [close 0] [:float_mult 1] [:in1 0.8876986514202876] [:float_mult 1] [:float_subtract 1] [:float_quot 1] [0.0 0] [:exec_dup 0.23124064617975848] [:float_quot 0.7729324983403201] [:exec_if 0] [close 0.5286593383632643] [:exec_dup 1] [close 1] [:float_add 0.9769909328164379] [0.0 0.011731371306067745] [:exec_dup 0] [close 1] [:float_mult 1] [:float_subtract 1] [close 1] [:exec_dup 0.933913277460866] [:float_subtract 1] [:float_quot 0] [:float_subtract 0.07752689355517439] [0.0 0] [:float_quot 0.05523775435378686] [:exec_dup 1] [1.0 1] [:float_eq 0] [close 0] [:in1 0] [:float_add 0.9044320800378212] [:exec_dup 1] [:float_quot 0.14658326927458482] [close 0] [:exec_dup 0.3922806001858595] [:float_subtract 0]), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999987 8.999999999999991 6.929740999999995 5.410943999999995 4.307948999999997 3.515455999999998 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.560896000000001 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000002 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 1.7763568394002505E-15 1.7763568394002505E-15 8.881784197001252E-16 2.6645352591003757E-15 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 8.881784197001252E-16 1.7763568394002505E-15 0.0 0.0 0.0 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :min-program-boolean-plushy ([:exec_if false] [:exec_dup false] [close true] [:exec_dup true] [:exec_if true] [close true] [:exec_dup true] [:float_subtract false] [:float_subtract false] [1.0 true] [:in1 false] [:float_subtract false] [:exec_if true] [:float_subtract true] [1.0 false] [:float_subtract true] [:float_eq true] [:float_quot true] [:exec_dup true] [:float_mult true] [close false] [:float_mult false] [:float_subtract false] [close false] [0.0 false] [:exec_if false] [:float_mult false] [close false] [:float_mult true] [:in1 true] [:float_mult true] [:float_subtract true] [:float_quot true] [0.0 false] [:exec_dup false] [:float_quot false] [:exec_if false] [close false] [:exec_dup true] [close true] [:float_add true] [0.0 false] [:exec_dup false] [close true] [:float_mult true] [:float_subtract true] [close true] [:exec_dup true] [:float_subtract true] [:float_quot false] [:float_subtract false] [0.0 false] [:float_quot false] [:exec_dup true] [1.0 true] [:float_eq false] [close false] [:in1 false] [:float_add true] [:exec_dup true] [:float_quot false] [close false] [:exec_dup false] [:float_subtract false]), :program (:exec_dup (:exec_if () (:exec_dup (1.0 :exec_if (:float_subtract :float_subtract :float_eq :float_quot :exec_dup (:float_mult :float_mult :in1 :float_mult :float_subtract :float_quot :exec_dup () :float_add) :float_mult :float_subtract) (:exec_dup (:float_subtract :exec_dup (1.0 :float_add :exec_dup ()))))))), :total-error 3.197442310920451E-14}

{:total-test-error 9.192646643896296E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 4}
{:list_of_successful_generations [4]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 4.0}
{:list_of_successful_generations [4]}

