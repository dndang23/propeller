Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 2500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$error_function@7add323c", :population-size 500}}


Current generation:
0
the best individual for this run is:
{:plushy (close :float_eq :float_eq :float_subtract :float_quot 1.0 :exec_if 1.0 :float_mult close :float_eq :in1 :in1 :exec_if 1.0 1.0 :float_mult :float_quot :float_add 0.0 :exec_if :float_add :float_add :in1 :float_subtract :exec_dup :float_add 1.0 :float_quot :float_quot :float_quot :float_add :float_add 0.0 :in1 :float_subtract :exec_dup :exec_dup 0.0 0.0 :float_quot :exec_if :float_add), :behaviors (5.5 5.4 5.3 5.199999999999999 5.1 5.0 4.8999999999999995 4.8 4.699999999999999 4.6 4.5 4.4 4.3 4.199999999999999 4.1 4.0 3.9 3.8 3.6999999999999997 3.5999999999999996 3.5 3.4 3.3 3.1999999999999997 3.0999999999999996 3.0 2.8999999999999995 2.8 2.6999999999999993 2.5999999999999996), :errors (29.828125 21.534335999999996 15.16510899999999 10.326783999999993 6.693860999999986 3.999999999999993 2.0297409999999942 0.6109439999999982 0.39205100000000215 1.0845440000000015 1.5468750000000009 1.8391040000000007 2.0049710000000003 2.075135999999999 2.069699 2.0 1.8696990000000002 1.6751359999999997 1.4049709999999993 1.0391039999999991 0.5468749999999991 0.11545600000000178 1.0079490000000018 2.210944000000001 3.829741000000003 6.000000000000005 8.893861000000012 12.726784000000023 17.765109000000027 24.334336000000043), :total-error 186.62124500000004}


Current generation:
1
the best individual for this run is:
{:plushy (:float_add close :float_add :exec_if :float_mult :float_add :exec_dup :float_eq :in1 :exec_dup 1.0 :float_mult :float_quot :float_quot :exec_dup :float_subtract :float_add :in1 :float_add :exec_if close :exec_dup close :float_mult :exec_if :float_subtract 1.0 :exec_if :float_add :float_eq :float_mult 1.0 1.0 close :exec_if :float_quot :exec_dup :float_subtract :float_mult :float_mult), :behaviors (3.5 3.6 3.7 3.8000000000000003 3.9000000000000004 4.0 4.1000000000000005 4.2 4.300000000000001 4.4 4.5 4.6000000000000005 4.7 4.8 4.9 1.0 4.1000000000000005 4.2 5.3 5.4 5.5 4.6000000000000005 5.7 5.8 5.9 6.0 6.1000000000000005 6.2 6.300000000000001 6.4), :errors (31.828125 23.334335999999997 16.765108999999992 11.726783999999991 7.893860999999985 4.999999999999993 2.829740999999993 1.2109439999999978 0.007948999999996431 0.8845440000000022 1.5468750000000009 2.039104000000001 2.4049710000000006 2.6751359999999997 2.8696990000000007 1.0 2.069699000000001 2.075136 3.0049709999999994 2.839104 2.546874999999999 1.0845439999999988 1.3920509999999986 0.3890559999999992 1.0297410000000022 3.0000000000000053 5.693861000000012 9.326784000000021 14.165109000000026 20.534336000000046), :total-error 183.16844500000008}


Current generation:
2
the best individual for this run is:
{:plushy (close :float_add :exec_if :float_mult 1.0 :float_add 0.0 :exec_dup 1.0 1.0 :float_quot :float_quot :exec_dup :exec_if close :float_subtract :in1 :float_mult :in1 :float_add :exec_if close 0.0 close close :exec_dup close 1.0 :float_mult :float_subtract close 1.0 :float_add :float_add :float_eq :float_mult :float_add 1.0 :float_add :exec_if :float_quot :float_mult 0.0 :float_subtract :float_mult), :behaviors (14.0 10.399999999999999 9.149999999999999 6.559999999999997 5.7399999999999975 3.9999999999999987 3.5299999999999985 3.1199999999999988 2.769999999999999 2.4799999999999995 2.2499999999999996 1.92 1.88 1.88 1.9200000000000002 2.0 2.1300000000000003 2.3200000000000003 2.5700000000000003 2.880000000000001 3.500000000000001 4.040000000000001 4.660000000000001 6.000000000000002 6.950000000000002 9.000000000000004 10.360000000000005 13.280000000000008 15.13000000000001 19.080000000000013), :errors (21.328125 16.534336 11.315108999999993 8.966783999999995 6.053860999999988 4.999999999999995 3.3997409999999952 2.290943999999999 1.537948999999998 1.0354559999999986 0.7031249999999996 0.6408959999999997 0.41502899999999965 0.2448640000000002 0.11030099999999954 0.0 0.09969900000000065 0.1951360000000002 0.27497099999999985 0.3191040000000003 0.546875 0.5245439999999992 0.35205099999999945 0.5890560000000011 0.02025899999999936 1.7763568394002505E-15 1.4338610000000074 2.246784000000014 5.335109000000017 7.854336000000032), :total-error 99.36830500000003}


Current generation:
3
the best individual for this run is:
{:plushy (close :float_add :float_mult 1.0 1.0 :float_add 0.0 :exec_dup 1.0 :float_quot :exec_dup :exec_if close :float_subtract :in1 :float_mult :in1 :float_add :exec_if 0.0 close close close 0.0 :exec_dup close 1.0 :float_mult :float_subtract close 1.0 :float_add :float_add :float_eq :float_mult :float_add 1.0 :float_add :exec_if :float_subtract :float_quot :float_mult :float_subtract :float_mult), :behaviors (18.5 14.319999999999997 10.839999999999996 9.439999999999996 6.949999999999997 4.999999999999998 4.339999999999998 3.7599999999999985 2.769999999999999 2.4799999999999995 2.2499999999999996 2.0799999999999996 1.88 1.88 1.9200000000000002 2.0 2.1300000000000003 2.3200000000000003 2.5700000000000003 2.880000000000001 3.500000000000001 4.040000000000001 5.150000000000001 6.000000000000002 7.7600000000000025 10.000000000000004 11.570000000000004 14.72000000000001 18.510000000000012 23.000000000000018), :errors (16.828125 12.614336000000002 9.625108999999995 6.086783999999996 4.843860999999989 3.9999999999999947 2.5897409999999956 1.6509439999999995 1.537948999999998 1.0354559999999986 0.7031249999999996 0.480896 0.41502899999999965 0.2448640000000002 0.11030099999999954 0.0 0.09969900000000065 0.1951360000000002 0.27497099999999985 0.3191040000000003 0.546875 0.5245439999999992 0.8420509999999997 0.5890560000000011 0.8302589999999999 0.9999999999999982 0.2238610000000083 0.8067840000000128 1.9551090000000144 3.9343360000000267), :total-error 74.90830500000004}


Current generation:
4
the best individual for this run is:
{:plushy (close :float_add :float_mult :float_mult 1.0 1.0 :float_add 0.0 :exec_dup 1.0 :float_quot :exec_dup :exec_if close :float_subtract :in1 :float_mult :in1 :float_add 1.0 :exec_if 0.0 close close close 0.0 :exec_dup close :float_mult :float_subtract close 1.0 :float_add :float_add :float_eq :float_mult :float_add 1.0 :float_add :exec_if :float_subtract :float_quot :float_mult :float_subtract :float_mult), :behaviors (25.5 20.64 18.209999999999997 14.519999999999996 11.469999999999995 8.999999999999996 7.859999999999997 6.1999999999999975 5.4499999999999975 4.799999999999999 3.999999999999999 3.6399999999999992 3.3599999999999994 3.1599999999999997 3.04 3.0 3.04 3.16 3.3600000000000003 3.6400000000000006 4.000000000000001 4.800000000000001 5.450000000000001 6.200000000000001 7.860000000000002 10.000000000000004 11.470000000000004 14.520000000000008 18.21000000000001 20.640000000000015), :errors (9.828125 6.294335999999998 2.255108999999994 1.0067839999999961 0.3238609999999902 3.552713678800501E-15 0.9302590000000031 0.7890559999999995 1.1420510000000004 1.2845440000000008 1.046875 1.0791039999999996 1.064971 1.0351359999999996 1.0096990000000003 1.0 1.0096990000000003 1.035136 1.064971 1.079104 1.046875 1.284543999999999 1.1420509999999995 0.7890560000000004 0.9302589999999995 0.9999999999999982 0.32386100000000795 1.006784000000014 2.255109000000015 6.29433600000003), :total-error 50.35169500000006}


Current generation:
5
the best individual for this run is:
{:plushy (:float_add :exec_if :float_mult 1.0 :float_add 0.0 :exec_dup 1.0 1.0 :float_mult 0.0 :float_quot 0.0 :exec_dup :exec_if :float_add 0.0 :float_subtract :in1 :float_mult :in1 0.0 :float_add :exec_if close :float_mult 0.0 close 1.0 :float_mult :float_subtract close 1.0 :float_add :float_add :float_mult close :float_eq :float_mult :float_add :exec_if 1.0 :float_add :exec_if :float_quot 0.0 :float_subtract :float_mult), :behaviors (37.578125 28.894335999999992 22.15510899999999 16.96678399999999 13.003860999999986 9.999999999999991 7.739740999999994 6.050943999999996 4.797948999999997 3.875455999999998 3.203124999999999 2.7208959999999993 2.3850289999999994 2.1648639999999997 2.040301 2.0 2.0403010000000004 2.1648640000000006 2.3850290000000003 2.7208960000000006 3.203125000000001 3.8754560000000016 4.797949000000001 6.050944000000002 7.739741000000003 10.000000000000005 13.003861000000011 16.96678400000002 22.155109000000028 28.89433600000005), :errors (2.25 1.9599999999999937 1.6899999999999977 1.4399999999999977 1.2100000000000009 0.9999999999999982 0.8100000000000005 0.6399999999999979 0.4900000000000002 0.3599999999999999 0.25 0.1599999999999997 0.08999999999999986 0.03999999999999959 0.010000000000000231 0.0 0.010000000000000675 0.04000000000000048 0.08999999999999986 0.16000000000000014 0.25 0.3599999999999999 0.4899999999999993 0.6400000000000015 0.8100000000000005 1.0 1.209999999999999 1.439999999999996 1.6900000000000013 1.9600000000000044), :total-error 22.54999999999999}


Current generation:
6
the best individual for this run is:
{:plushy (:float_add :exec_if :float_mult :float_add 0.0 :exec_dup 1.0 1.0 :float_mult 0.0 :float_quot 0.0 :exec_dup :exec_if :float_add 0.0 :float_subtract :in1 :float_mult :in1 0.0 :float_add :exec_if close :float_mult 0.0 close 1.0 :float_mult :float_subtract close 1.0 :float_add :float_mult close :float_eq :float_mult :float_add :exec_if 1.0 :float_add :float_add :exec_if :float_quot 0.0 :float_subtract :float_mult), :behaviors (35.328125 26.934336 20.465108999999988 15.526783999999992 11.793860999999985 8.999999999999991 6.929740999999995 5.410943999999997 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000001 6.929741000000003 9.000000000000007 11.793861000000012 15.52678400000002 20.46510900000003 26.934336000000044), :errors (0.0 0.0 3.552713678800501E-15 0.0 0.0 1.7763568394002505E-15 8.881784197001252E-16 8.881784197001252E-16 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 0.0 0.0 1.7763568394002505E-15 0.0 1.7763568394002505E-15 3.552713678800501E-15 0.0), :total-error 1.687538997430238E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (:float_add :exec_if :float_mult :float_add 0.0 :exec_dup 1.0 1.0 :float_mult 0.0 :float_quot 0.0 :exec_dup :exec_if :float_add 0.0 :float_subtract :in1 :float_mult :in1 0.0 :float_add :exec_if close :float_mult 0.0 close 1.0 :float_mult :float_subtract close 1.0 :float_add :float_mult close :float_eq :float_mult :float_add :exec_if 1.0 :float_add :float_add :exec_if :float_quot 0.0 :float_subtract :float_mult), :behaviors (35.328125 26.934336 20.465108999999988 15.526783999999992 11.793860999999985 8.999999999999991 6.929740999999995 5.410943999999997 4.307948999999997 3.515455999999998 2.953124999999999 2.5608959999999996 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000001 6.929741000000003 9.000000000000007 11.793861000000012 15.52678400000002 20.46510900000003 26.934336000000044), :errors (0.0 0.0 3.552713678800501E-15 0.0 0.0 1.7763568394002505E-15 8.881784197001252E-16 8.881784197001252E-16 0.0 0.0 0.0 0.0 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 0.0 0.0 1.7763568394002505E-15 0.0 1.7763568394002505E-15 3.552713678800501E-15 0.0), :total-error 1.687538997430238E-14}

{:total-test-error 8.393286066166183E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 6}
{:list_of_successful_generations [6]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 6.0}
{:list_of_successful_generations [6]}

