Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$error_function@7a0ef219", :population-size 2500}}


Current generation:
0
the best individual for this run is:
{:plushy (:float_eq 1.0 :exec_if :float_quot 1.0 :exec_if :float_subtract 0.0 :in1 :float_eq :exec_dup :in1 :exec_dup :exec_if 1.0 :exec_dup 1.0 :float_mult :exec_dup :float_quot 1.0 close :exec_dup :float_add :exec_if 1.0 :float_quot 1.0), :behaviors (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 1.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0), :errors (30.328125 21.934336 15.465108999999991 10.526783999999992 6.7938609999999855 3.999999999999993 1.9297409999999937 0.410943999999998 0.6920510000000029 1.4845440000000019 2.046875000000001 2.4391040000000004 2.7049710000000005 2.875136 2.9696990000000003 1.0 2.9696990000000003 2.875136 2.7049709999999996 2.4391039999999995 2.046874999999999 1.4845439999999983 0.6920509999999984 0.41094400000000064 1.9297410000000026 4.000000000000005 6.793861000000012 10.526784000000022 15.465109000000027 21.934336000000044), :total-error 183.87443500000006}


Current generation:
1
the best individual for this run is:
{:plushy (:float_quot :float_quot :float_quot :in1 1.0 0.0 :exec_dup 1.0 :exec_dup close 1.0 :float_eq :float_eq close :exec_dup 1.0 :float_quot 1.0 1.0 :float_add :float_subtract 1.0 0.0 :float_subtract :float_subtract :float_eq :float_mult close close close :exec_if :float_quot :exec_dup :float_eq :exec_if :exec_dup 1.0 :exec_dup :exec_if :in1 :float_subtract :in1 :float_mult close :exec_if :exec_if :float_mult :exec_dup :exec_if :float_subtract :exec_if close :float_eq :float_add :float_quot :float_add :float_mult :in1 :exec_dup :float_add :in1 1.0 :exec_dup :float_subtract :float_add 1.0 :exec_if :float_add :float_subtract :exec_if :exec_if :float_subtract close :float_mult 1.0 :float_add :in1 :float_add :float_eq 1.0 :float_quot :float_add :exec_if :float_eq), :behaviors (20.0 18.0 16.0 13.0 11.0 9.0 8.0 7.0 6.0 4.0 4.0 4.0 3.0 2.0 2.0 4.0 3.0 3.0 3.0 3.0 5.0 5.0 5.0 6.0 7.0 10.0 10.0 11.0 12.0 14.0), :errors (15.328125 8.934335999999998 4.465108999999991 2.526783999999992 0.7938609999999855 7.105427357601002E-15 1.0702590000000063 1.589056000000002 1.6920510000000029 0.48454400000000186 1.0468750000000009 1.4391040000000004 0.7049710000000005 0.12486400000000009 0.03030099999999969 2.0 0.9696990000000003 0.8751359999999999 0.7049709999999996 0.4391039999999995 2.046874999999999 1.4845439999999983 0.6920509999999984 0.5890559999999994 0.0702589999999974 0.9999999999999947 1.7938610000000121 4.526784000000022 8.465109000000027 12.934336000000044), :total-error 78.82202500000008}


Current generation:
2
the best individual for this run is:
{:plushy (:float_mult :float_mult 1.0 :in1 :exec_dup 1.0 :exec_dup :float_subtract :float_mult :float_quot :in1 :exec_if :float_add :in1 :float_mult close :exec_if close 0.0 :in1 :float_eq :in1 :exec_dup :exec_dup :float_subtract :float_eq 1.0 :float_add :float_quot :exec_if), :behaviors (23.5 19.467199999999995 16.0692 13.235199999999994 10.899199999999993 8.999999999999993 7.481199999999996 6.291199999999996 5.383199999999999 4.7151999999999985 4.25 3.9551999999999996 3.8032 3.7712 3.8412 4.0 4.2392 4.555200000000001 4.949200000000001 5.427200000000001 6.000000000000002 6.683200000000001 7.497200000000002 8.467200000000002 9.6232 11.000000000000002 12.637200000000005 14.579200000000007 16.875200000000014 19.579200000000014), :errors (11.828125 7.4671360000000035 4.3959089999999925 2.2915839999999985 0.8946609999999922 0.0 0.5514590000000021 0.8802559999999984 1.0752510000000015 1.1997440000000004 1.2968750000000009 1.394304 1.5081710000000004 1.6463359999999998 1.8108990000000005 2.0 2.2088990000000006 2.430336000000001 2.6541710000000007 2.8663040000000004 3.046875000000001 3.1677439999999994 3.1892510000000005 3.056256000000001 2.693458999999998 1.9999999999999964 0.8433389999999932 0.9475840000000151 3.589909000000013 7.35513600000003), :total-error 80.28997300000005}


Current generation:
3
the best individual for this run is:
{:plushy (:float_mult close :float_add :float_mult 1.0 :in1 :exec_dup :exec_dup 1.0 :float_mult :float_quot :exec_if :float_add :in1 :float_mult close :float_mult :float_eq :exec_if 0.0 :in1 :float_eq :in1 close :exec_dup :exec_dup close :float_mult 1.0 :float_add :float_quot :exec_if), :behaviors (39.40625 28.662271999999994 20.74581799999999 14.999167999999989 10.891321999999986 6.999999999999994 5.564614789999997 4.455715839999998 3.6378499899999976 3.0557158399999986 2.648437499999999 2.3780812799999995 2.1974611699999995 2.0833152 2.0202019 2.0 2.02020209 2.0833382400000002 2.1978548300000003 2.3807027200000004 2.660156250000001 3.0893081600000007 3.753146010000002 4.791260160000002 6.425549210000003 8.000000000000007 10.891322000000011 14.999168000000019 20.745818000000032 28.662272000000055), :errors (4.078125 1.7279359999999961 0.2807089999999981 0.5276160000000036 0.9025389999999991 1.9999999999999991 1.365126209999997 0.9552281599999999 0.6700990099999995 0.4597401599999995 0.3046875 0.1828147200000001 0.09756783000000002 0.04154880000000016 0.010099099999999694 0.0 0.010098909999999517 0.041525759999999856 0.09717417000000017 0.18019328000000012 0.29296875 0.42614784000000094 0.5548029899999998 0.6196838399999987 0.5041917899999993 0.9999999999999982 0.9025390000000009 0.5276160000000036 0.2807090000000052 1.7279360000000104), :total-error 20.769423820000014}


Current generation:
4
the best individual for this run is:
{:plushy (:float_mult close :float_add :float_mult 1.0 :in1 :exec_dup :exec_dup 1.0 :float_mult :float_quot :exec_if 1.0 :float_add :in1 :float_mult close :float_mult :float_eq :exec_if 0.0 :in1 :float_eq :in1 close :exec_dup :exec_dup :float_mult close :float_mult 1.0 :exec_dup :float_add :float_quot :exec_if), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999987 7.999999999999995 6.3982999999999945 5.148799999999996 4.190299999999998 3.4687999999999986 2.921874999999999 2.5527039999999994 2.2928419999999994 2.1245439999999998 2.030291 2.0 2.03031 2.1251200000000003 2.2972160000000006 2.5690880000000007 2.968750000000001 3.5621120000000013 4.425598000000001 5.673088000000002 7.4611820000000035 9.000000000000005 11.793861000000012 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 1.7763568394002505E-15 0.9999999999999982 0.5314409999999992 0.26214400000000193 0.11764899999999923 0.04665599999999959 0.03125 0.008192000000000199 0.002187000000000161 3.2000000000032003E-4 9.999999999621423E-6 0.0 9.000000000369823E-6 2.56000000000256E-4 0.002187000000000161 0.008192000000000199 0.015625 0.04665599999999959 0.11764899999999923 0.26214400000000104 0.5314410000000009 0.0 0.0 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :total-error 2.9840080000000215}


Current generation:
5
the best individual for this run is:
{:plushy (:float_mult 0.0 close :float_mult 1.0 :exec_dup :exec_dup 1.0 :float_mult :float_quot :exec_if 1.0 :float_add :in1 :float_mult close :float_mult :float_eq :exec_if 0.0 :in1 :float_eq :in1 close :exec_dup :exec_dup :float_mult close :float_mult 1.0 :exec_dup :float_add :float_quot :exec_if), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999987 8.999999999999991 6.929740999999995 5.410943999999995 4.307948999999997 3.515455999999998 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000002 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 1.7763568394002505E-15 1.7763568394002505E-15 8.881784197001252E-16 2.6645352591003757E-15 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 1.7763568394002505E-15 0.0 0.0 0.0 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :total-error 3.1530333899354446E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (:float_mult 0.0 close :float_mult 1.0 :exec_dup :exec_dup 1.0 :float_mult :float_quot :exec_if 1.0 :float_add :in1 :float_mult close :float_mult :float_eq :exec_if 0.0 :in1 :float_eq :in1 close :exec_dup :exec_dup :float_mult close :float_mult 1.0 :exec_dup :float_add :float_quot :exec_if), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999987 8.999999999999991 6.929740999999995 5.410943999999995 4.307948999999997 3.515455999999998 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000002 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 1.7763568394002505E-15 1.7763568394002505E-15 8.881784197001252E-16 2.6645352591003757E-15 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 1.7763568394002505E-15 0.0 0.0 0.0 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :total-error 3.1530333899354446E-14}

{:total-test-error 9.103828801926284E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 5}
{:list_of_successful_generations [5]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 5.0}
{:list_of_successful_generations [5]}

