Beginning run number 1

Executing gp

Arguments used in genetic program:
{:starting-args {:max-initial-plushy-size 100, :training-data ({:input1 [-1.5], :output1 [35.328125]} {:input1 [-1.4], :output1 [26.934336]} {:input1 [-1.2999999999999998], :output1 [20.46510899999999]} {:input1 [-1.1999999999999997], :output1 [15.526783999999992]} {:input1 [-1.0999999999999996], :output1 [11.793860999999985]} {:input1 [-0.9999999999999997], :output1 [8.999999999999993]} {:input1 [-0.8999999999999997], :output1 [6.929740999999994]} {:input1 [-0.7999999999999997], :output1 [5.410943999999998]} {:input1 [-0.6999999999999997], :output1 [4.307948999999997]} {:input1 [-0.5999999999999998], :output1 [3.515455999999998]} {:input1 [-0.4999999999999998], :output1 [2.953124999999999]} {:input1 [-0.3999999999999998], :output1 [2.5608959999999996]} {:input1 [-0.2999999999999998], :output1 [2.2950289999999995]} {:input1 [-0.19999999999999982], :output1 [2.124864]} {:input1 [-0.09999999999999981], :output1 [2.0303009999999997]} {:input1 [1.942890293094024E-16], :output1 [2.0]} {:input1 [0.1000000000000002], :output1 [2.0303009999999997]} {:input1 [0.2000000000000002], :output1 [2.124864]} {:input1 [0.3000000000000002], :output1 [2.2950290000000004]} {:input1 [0.40000000000000024], :output1 [2.5608960000000005]} {:input1 [0.5000000000000002], :output1 [2.953125000000001]} {:input1 [0.6000000000000002], :output1 [3.5154560000000017]} {:input1 [0.7000000000000002], :output1 [4.307949000000002]} {:input1 [0.8000000000000002], :output1 [5.410944000000001]} {:input1 [0.9000000000000001], :output1 [6.929741000000003]} {:input1 [1.0000000000000002], :output1 [9.000000000000005]} {:input1 [1.1000000000000003], :output1 [11.793861000000012]} {:input1 [1.2000000000000004], :output1 [15.526784000000022]} {:input1 [1.3000000000000005], :output1 [20.465109000000027]} {:input1 [1.4000000000000006], :output1 [26.934336000000044]}), :error-function_2 nil, :isDefault true, :instructions "(:in1 :float_add :float_subtract :float_mult :float_quot :float_eq :exec_dup :exec_if close 0.0 1.0)", :elitism false, :variation {:umad 1.0}, :max-generations 500, :parent-selection :epsilon-lexicase, :solution-error-threshold 0.1, :umad-rate 0.1, :tournament-size 5, :testing-data ({:input1 [-1.75], :output1 [68.047119140625]} {:input1 [-1.7], :output1 [59.86386899999999]} {:input1 [-1.65], :output1 [52.582705765624986]} {:input1 [-1.5999999999999999], :output1 [46.11801599999998]} {:input1 [-1.5499999999999998], :output1 [40.39076376562498]} {:input1 [-1.4999999999999998], :output1 [35.328124999999986]} {:input1 [-1.4499999999999997], :output1 [30.863133140624978]} {:input1 [-1.3999999999999997], :output1 [26.934335999999973]} {:input1 [-1.3499999999999996], :output1 [23.485463890624974]} {:input1 [-1.2999999999999996], :output1 [20.46510899999998]} {:input1 [-1.2499999999999996], :output1 [17.826416015624982]} {:input1 [-1.1999999999999995], :output1 [15.526783999999976]} {:input1 [-1.1499999999999995], :output1 [13.527579515624982]} {:input1 [-1.0999999999999994], :output1 [11.79386099999998]} {:input1 [-1.0499999999999994], :output1 [10.294114390624983]} {:input1 [-0.9999999999999993], :output1 [8.999999999999984]} {:input1 [-0.9499999999999993], :output1 [7.886110640624984]} {:input1 [-0.8999999999999992], :output1 [6.9297409999999875]} {:input1 [-0.8499999999999992], :output1 [6.110668265624987]} {:input1 [-0.7999999999999992], :output1 [5.41094399999999]} {:input1 [-0.7499999999999991], :output1 [4.814697265624991]} {:input1 [-0.6999999999999991], :output1 [4.307948999999991]} {:input1 [-0.649999999999999], :output1 [3.8784376406249925]} {:input1 [-0.599999999999999], :output1 [3.5154559999999933]} {:input1 [-0.5499999999999989], :output1 [3.209699390624994]} {:input1 [-0.49999999999999895], :output1 [2.9531249999999947]} {:input1 [-0.44999999999999896], :output1 [2.738822515624996]} {:input1 [-0.39999999999999897], :output1 [2.560895999999997]} {:input1 [-0.349999999999999], :output1 [2.414357015624998]} {:input1 [-0.299999999999999], :output1 [2.2950289999999978]} {:input1 [-0.249999999999999], :output1 [2.1994628906249982]} {:input1 [-0.199999999999999], :output1 [2.1248639999999988]} {:input1 [-0.14999999999999902], :output1 [2.0690301406249993]} {:input1 [-0.09999999999999902], :output1 [2.0303009999999992]} {:input1 [-0.04999999999999902], :output1 [2.007518765625]} {:input1 [9.853229343548264E-16], :output1 [2.0]} {:input1 [0.05000000000000099], :output1 [2.0075187656250004]} {:input1 [0.10000000000000099], :output1 [2.0303010000000006]} {:input1 [0.150000000000001], :output1 [2.069030140625001]} {:input1 [0.200000000000001], :output1 [2.1248640000000014]} {:input1 [0.250000000000001], :output1 [2.1994628906250018]} {:input1 [0.300000000000001], :output1 [2.2950290000000018]} {:input1 [0.350000000000001], :output1 [2.4143570156250025]} {:input1 [0.40000000000000097], :output1 [2.560896000000003]} {:input1 [0.45000000000000095], :output1 [2.7388225156250035]} {:input1 [0.500000000000001], :output1 [2.9531250000000044]} {:input1 [0.550000000000001], :output1 [3.2096993906250053]} {:input1 [0.6000000000000011], :output1 [3.5154560000000066]} {:input1 [0.6500000000000011], :output1 [3.8784376406250085]} {:input1 [0.7000000000000012], :output1 [4.30794900000001]} {:input1 [0.7500000000000012], :output1 [4.814697265625013]} {:input1 [0.8000000000000013], :output1 [5.410944000000015]} {:input1 [0.8500000000000013], :output1 [6.110668265625021]} {:input1 [0.9000000000000014], :output1 [6.929741000000023]} {:input1 [0.9500000000000014], :output1 [7.886110640625027]} {:input1 [1.0000000000000013], :output1 [9.000000000000032]} {:input1 [1.0500000000000014], :output1 [10.294114390625037]} {:input1 [1.1000000000000014], :output1 [11.793861000000044]} {:input1 [1.1500000000000015], :output1 [13.527579515625053]} {:input1 [1.2000000000000015], :output1 [15.52678400000007]} {:input1 [1.2500000000000016], :output1 [17.826416015625078]} {:input1 [1.3000000000000016], :output1 [20.465109000000083]} {:input1 [1.3500000000000016], :output1 [23.485463890625102]} {:input1 [1.4000000000000017], :output1 [26.934336000000116]} {:input1 [1.4500000000000017], :output1 [30.863133140625145]} {:input1 [1.5000000000000018], :output1 [35.32812500000017]} {:input1 [1.5500000000000018], :output1 [40.390763765625195]} {:input1 [1.6000000000000019], :output1 [46.11801600000022]} {:input1 [1.650000000000002], :output1 [52.58270576562526]} {:input1 [1.700000000000002], :output1 [59.86386900000031]}), :step-limit 200, :error-function "propeller.problems.symbolic_regression_11$error_function@7a0ef219", :population-size 2500}}


Current generation:
0
the best individual for this run is:
{:plushy (:float_eq :exec_dup 1.0 :exec_if close :in1 :float_mult :in1 :float_quot :float_subtract :exec_if :float_add :float_quot :float_mult :in1 :float_mult :float_mult :float_quot :exec_if 1.0 :float_add close :float_eq 1.0 :float_add :float_mult 1.0 :float_add :float_add :float_mult), :behaviors (2.25 2.16 2.09 2.04 2.01 2.0 2.01 2.04 2.0900000000000003 2.16 2.2500000000000004 2.3600000000000003 2.49 2.6400000000000006 2.8100000000000005 3.0 3.2100000000000004 3.4400000000000004 3.6900000000000004 3.960000000000001 4.25 4.5600000000000005 4.890000000000001 5.24 5.610000000000001 6.000000000000001 6.410000000000002 6.840000000000002 7.290000000000003 7.7600000000000025), :errors (33.078125 24.774335999999998 18.37510899999999 13.486783999999993 9.783860999999986 6.999999999999993 4.919740999999994 3.370943999999998 2.217948999999997 1.355455999999998 0.7031249999999987 0.2008959999999993 0.19497100000000067 0.5151360000000005 0.7796990000000008 1.0 1.1796990000000007 1.3151360000000003 1.394971 1.3991040000000003 1.2968749999999991 1.0445439999999988 0.582050999999999 0.17094400000000043 1.3197410000000014 3.0000000000000044 5.38386100000001 8.68678400000002 13.175109000000024 19.174336000000043), :total-error 180.879287}


Current generation:
1
the best individual for this run is:
{:plushy (:exec_if :float_eq :float_eq :float_mult :float_quot 0.0 0.0 close :in1 :float_subtract close 1.0 0.0 :exec_if 1.0 :exec_if :float_eq close :exec_dup 1.0 :in1 1.0 :in1 :exec_dup :float_mult :exec_dup :float_mult :exec_dup :in1 :float_subtract), :behaviors (30.75 26.767999999999994 23.113999999999997 19.775999999999993 16.74199999999999 13.999999999999993 11.537999999999993 9.343999999999994 7.4059999999999935 5.711999999999995 4.249999999999998 3.007999999999998 1.9739999999999984 1.1359999999999986 0.48199999999999893 0.0 -0.3220000000000005 -0.4960000000000002 -0.5339999999999999 -0.4479999999999995 -0.24999999999999933 0.04800000000000071 0.4340000000000006 0.8960000000000009 1.422 2.0000000000000036 2.6180000000000003 3.264000000000003 3.926000000000002 4.592000000000004), :errors (4.578125 0.1663360000000047 2.648891000000006 4.2492160000000005 4.948139000000005 5.0 4.608258999999999 3.933055999999996 3.0980509999999963 2.196543999999997 1.2968749999999991 0.44710399999999817 0.3210290000000011 0.9888640000000015 1.5483010000000008 2.0 2.352301 2.620864 2.8290290000000002 3.008896 3.203125 3.467456000000001 3.873949000000001 4.514944 5.507741000000003 7.000000000000002 9.175861000000012 12.26278400000002 16.539109000000025 22.34233600000004), :total-error 140.7271850000001}


Current generation:
2
the best individual for this run is:
{:plushy (:exec_dup :exec_dup 1.0 :exec_if close close :in1 :float_mult :in1 :float_quot :float_subtract :float_mult :exec_if :exec_dup :float_add :float_quot :float_mult :in1 :float_mult close :float_mult :float_quot :exec_if :float_eq 1.0 :float_add :float_eq 1.0 :float_add :float_mult), :behaviors (46.33203125 30.08902655999999 19.530216209999985 12.79940095999999 8.589249809999988 5.999999999999994 4.428008209999996 3.479516159999998 2.905397009999999 2.553052159999999 2.3320312499999996 2.1903513599999997 2.09889461 2.04166656 2.0101010099999996 2.0 2.01010101 2.0416665600000004 2.0988946100000003 2.19035136 2.3320312500000004 2.5530521600000005 2.9053970100000006 3.479516160000001 4.4280082100000016 6.000000000000005 8.58924981000001 12.799400960000021 19.53021621000004 30.089026560000075), :errors (11.00390625 3.1546905599999917 0.9348927900000064 2.727383040000003 3.204611189999998 2.999999999999999 2.5017327899999975 1.93142784 1.4025519899999983 0.962403839999999 0.6210937499999996 0.37054463999999987 0.19613438999999966 0.08319744000000018 0.020199990000000057 0.0 0.020199989999999612 0.08319743999999973 0.1961343900000001 0.3705446400000003 0.6210937500000004 0.9624038400000012 1.402551990000001 1.9314278399999996 2.501732790000001 3.0 3.2046111900000014 2.727383040000001 0.934892789999985 3.154690560000031), :total-error 53.22563475000001}


Current generation:
3
the best individual for this run is:
{:plushy (close :float_eq :exec_dup :float_mult :float_eq 1.0 :exec_if close :in1 :float_mult :in1 :float_mult :float_quot :float_subtract :exec_dup :exec_if :float_quot :float_mult :in1 :float_mult :float_eq :float_mult :float_quot :in1 :float_mult :exec_if 1.0 close :float_add close :float_eq :float_mult 1.0 :exec_dup :float_add :float_add :float_mult), :behaviors (41.9375 28.969599999999993 22.51659999999999 15.247999999999987 11.74049999999999 8.999999999999991 6.900499999999995 5.327999999999996 4.420599999999997 3.6271999999999975 3.1249999999999987 2.678399999999999 2.374399999999999 2.1632 2.0401999999999996 2.0 2.0402000000000005 2.1632000000000007 2.3744000000000005 2.6784000000000012 3.1250000000000013 3.6272000000000015 4.420600000000002 5.328000000000002 6.900500000000003 9.000000000000005 11.740500000000011 15.248000000000015 22.51660000000003 28.969600000000046), :errors (6.609375 2.0352639999999944 2.0514909999999986 0.27878400000000525 0.05336099999999533 1.7763568394002505E-15 0.029240999999998962 0.08294400000000213 0.11265099999999961 0.1117439999999994 0.17187499999999956 0.11750399999999939 0.07937099999999964 0.038335999999999704 0.00989899999999988 0.0 0.009899000000000768 0.03833600000000059 0.07937100000000008 0.11750400000000072 0.17187500000000044 0.11174399999999984 0.1126510000000005 0.08294399999999857 0.02924099999999985 0.0 0.05336100000000066 0.278784000000007 2.051491000000002 2.0352640000000015), :total-error 16.954305000000005}


Current generation:
4
the best individual for this run is:
{:plushy (:float_eq :float_eq :exec_dup :float_mult 1.0 close :in1 :float_mult :in1 :float_quot :float_subtract :exec_dup :in1 :exec_if :float_quot :in1 :float_mult :exec_dup :in1 :float_mult :float_mult :float_quot :in1 :float_mult :float_add :exec_if 1.0 :float_add :float_eq :float_add :float_mult 1.0 :exec_dup :float_add :float_add :float_mult), :behaviors (36.875 27.432959999999994 20.231719999999992 14.833279999999988 10.86203999999999 7.999999999999993 5.9819599999999955 4.5907199999999975 3.6522799999999975 3.031039999999999 2.656249999999999 2.3711999999999995 2.1970099999999997 2.0831999999999997 2.0202 2.0 2.0202 2.0832 2.1970100000000006 2.3712000000000004 2.625000000000001 3.031040000000001 3.652280000000001 4.590720000000001 5.981960000000003 8.000000000000007 10.862040000000011 14.833280000000016 20.23172000000003 27.43296000000005), :errors (1.546875 0.49862399999999596 0.23338899999999896 0.6935040000000043 0.9318209999999958 1.0 0.9477809999999982 0.8202240000000005 0.6556689999999996 0.48441599999999907 0.296875 0.1896960000000001 0.09801899999999986 0.04166400000000037 0.010100999999999694 0.0 0.010100999999999694 0.04166399999999992 0.09801899999999986 0.1896960000000001 0.328125 0.48441600000000085 0.6556690000000005 0.8202239999999996 0.947781 0.9999999999999982 0.9318210000000011 0.6935040000000061 0.2333889999999954 0.4986240000000066), :total-error 15.381690999999998}


Current generation:
5
the best individual for this run is:
{:plushy (:float_eq :float_eq :float_add :exec_dup :float_mult 1.0 close :in1 :float_quot :float_subtract :exec_dup :in1 :exec_if :float_quot :in1 :float_mult :exec_dup :in1 :float_mult :float_mult :in1 :float_mult :float_mult :float_add :exec_if 1.0 :float_add :float_eq :float_add :float_mult 1.0 :exec_dup :float_add :float_add :float_mult), :behaviors (36.875 27.432959999999994 20.231719999999992 14.833279999999988 10.86203999999999 8.99999999999999 6.572449999999994 4.5907199999999975 3.6522799999999975 3.031039999999999 2.656249999999999 2.3711999999999995 2.1970099999999997 2.0831999999999997 2.0202 2.0 2.0202 2.0832 2.1970100000000006 2.3712000000000004 2.625000000000001 3.031040000000001 3.652280000000001 4.590720000000001 5.981960000000003 8.000000000000007 10.862040000000011 14.833280000000016 20.23172000000003 27.43296000000005), :errors (1.546875 0.49862399999999596 0.23338899999999896 0.6935040000000043 0.9318209999999958 3.552713678800501E-15 0.357291 0.8202240000000005 0.6556689999999996 0.48441599999999907 0.296875 0.1896960000000001 0.09801899999999986 0.04166400000000037 0.010100999999999694 0.0 0.010100999999999694 0.04166399999999992 0.09801899999999986 0.1896960000000001 0.328125 0.48441600000000085 0.6556690000000005 0.8202239999999996 0.947781 0.9999999999999982 0.9318210000000011 0.6935040000000061 0.2333889999999954 0.4986240000000066), :total-error 13.791201000000003}


Current generation:
6
the best individual for this run is:
{:plushy (0.0 :float_subtract :float_mult :exec_dup :float_eq :exec_if close :in1 :float_mult :in1 :float_quot :float_subtract :exec_dup :float_quot :float_quot :exec_dup 1.0 :float_add :float_mult :in1 :float_mult :float_mult :float_quot :float_quot :in1 :float_mult :exec_if 1.0 :float_add :float_mult 1.0 :exec_dup :float_add :exec_dup :float_quot :exec_dup :float_add :float_quot :float_mult close), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999987 8.999999999999991 6.929740999999995 5.410943999999995 4.307948999999997 3.515455999999998 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000002 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 1.7763568394002505E-15 1.7763568394002505E-15 8.881784197001252E-16 2.6645352591003757E-15 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 1.7763568394002505E-15 0.0 0.0 0.0 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :total-error 3.1530333899354446E-14}

Completed run

The best individual according to the genetic program is:
{:plushy (0.0 :float_subtract :float_mult :exec_dup :float_eq :exec_if close :in1 :float_mult :in1 :float_quot :float_subtract :exec_dup :float_quot :float_quot :exec_dup 1.0 :float_add :float_mult :in1 :float_mult :float_mult :float_quot :float_quot :in1 :float_mult :exec_if 1.0 :float_add :float_mult 1.0 :exec_dup :float_add :exec_dup :float_quot :exec_dup :float_add :float_quot :float_mult close), :behaviors (35.328125 26.934335999999995 20.46510899999999 15.526783999999987 11.793860999999987 8.999999999999991 6.929740999999995 5.410943999999995 4.307948999999997 3.515455999999998 2.953124999999999 2.560895999999999 2.2950289999999995 2.1248639999999996 2.0303009999999997 2.0 2.030301 2.1248640000000005 2.2950290000000004 2.5608960000000005 2.953125000000001 3.5154560000000012 4.307949000000001 5.410944000000002 6.929741000000003 9.000000000000005 11.793861000000012 15.526784000000019 20.46510900000003 26.93433600000004), :errors (0.0 3.552713678800501E-15 0.0 5.329070518200751E-15 1.7763568394002505E-15 1.7763568394002505E-15 8.881784197001252E-16 2.6645352591003757E-15 0.0 0.0 0.0 4.440892098500626E-16 0.0 4.440892098500626E-16 0.0 0.0 4.440892098500626E-16 4.440892098500626E-16 0.0 0.0 0.0 4.440892098500626E-16 8.881784197001252E-16 1.7763568394002505E-15 0.0 0.0 0.0 3.552713678800501E-15 3.552713678800501E-15 3.552713678800501E-15), :total-error 3.1530333899354446E-14}

{:total-test-error 9.103828801926284E-14}
Statistics based on current number of runs: 
{:num_successes 1}
{:num_tries 1}
{:total_num_generations 6}
{:list_of_successful_generations [6]}

Results of run
{:percent_of_successes 1.0}
{:average_num_generations 6.0}
{:list_of_successful_generations [6]}

